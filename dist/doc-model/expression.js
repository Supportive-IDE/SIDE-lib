"use strict";function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.typeLookup=exports.stringMethodsLookup=exports.specialCaseLookup=exports.moduleLookup=exports.modifyingMethodsLookup=exports.keywordLookup=exports.builtInReturnLookup=exports.UsageType=exports.ExpressionEntity=exports.ExpressionCategory=exports.Expression=exports.DataType=void 0;var _enum=_interopRequireDefault(require("./enum.js")),_observers=require("./observers.js");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _createForOfIteratorHelper(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,s=function(){};return{s:s,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var r,o=!0,E=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return o=e.done,e},e:function(e){E=!0,r=e},f:function(){try{o||null==n.return||n.return()}finally{if(E)throw r}}}}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function _get(){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=_superPropBase(e,t);if(i){var s=Object.getOwnPropertyDescriptor(i,t);return s.get?s.get.call(arguments.length<3?e:n):s.value}},_get.apply(this,arguments)}function _superPropBase(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_getPrototypeOf(e)););return e}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_setPrototypeOf(e,t)}function _setPrototypeOf(e,t){return _setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_setPrototypeOf(e,t)}function _createSuper(e){var t=_isNativeReflectConstruct();return function(){var n,i=_getPrototypeOf(e);if(t){var s=_getPrototypeOf(this).constructor;n=Reflect.construct(i,arguments,s)}else n=i.apply(this,arguments);return _possibleConstructorReturn(this,n)}}function _possibleConstructorReturn(e,t){if(t&&("object"===_typeof(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _getPrototypeOf(e){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_getPrototypeOf(e)}function _classPrivateMethodInitSpec(e,t){_checkPrivateRedeclaration(e,t),t.add(e)}function _classPrivateFieldInitSpec(e,t,n){_checkPrivateRedeclaration(e,t),t.set(e,n)}function _checkPrivateRedeclaration(e,t){if(t.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateFieldGet(e,t){return _classApplyDescriptorGet(e,_classExtractFieldDescriptor(e,t,"get"))}function _classApplyDescriptorGet(e,t){return t.get?t.get.call(e):t.value}function _classPrivateMethodGet(e,t,n){if(!t.has(e))throw new TypeError("attempted to get private field on non-instance");return n}function _classPrivateFieldSet(e,t,n){return _classApplyDescriptorSet(e,_classExtractFieldDescriptor(e,t,"set"),n),n}function _classExtractFieldDescriptor(e,t,n){if(!t.has(e))throw new TypeError("attempted to "+n+" private field on non-instance");return t.get(e)}function _classApplyDescriptorSet(e,t,n){if(t.set)t.set.call(e,n);else{if(!t.writable)throw new TypeError("attempted to set read only private field");t.value=n}}var _entity=new WeakMap,_category=new WeakMap,_lineNumber=new WeakMap,_localIndex=new WeakMap,_rawLocalIndex=new WeakMap,_value=new WeakMap,_localType=new WeakMap,_usedBy=new WeakMap,_determineStartingType=new WeakSet,_typeByEntity=new WeakSet,Expression=function(e){_inherits(n,_observers.TypeChangeObserverNotifier);var t=_createSuper(n);function n(e,i,s,r){var o,E=arguments.length>4&&void 0!==arguments[4]?arguments[4]:void 0,p=arguments.length>5&&void 0!==arguments[5]?arguments[5]:void 0;return _classCallCheck(this,n),_classPrivateMethodInitSpec(_assertThisInitialized(o=t.call(this)),_typeByEntity),_classPrivateMethodInitSpec(_assertThisInitialized(o),_determineStartingType),_classPrivateFieldInitSpec(_assertThisInitialized(o),_entity,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_category,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_lineNumber,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_localIndex,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_rawLocalIndex,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_value,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_localType,{writable:!0,value:DataType.NotParsed}),_classPrivateFieldInitSpec(_assertThisInitialized(o),_usedBy,{writable:!0,value:UsageType.None}),_classPrivateFieldSet(_assertThisInitialized(o),_entity,e),_classPrivateFieldSet(_assertThisInitialized(o),_category,i),_classPrivateFieldSet(_assertThisInitialized(o),_lineNumber,s),_classPrivateFieldSet(_assertThisInitialized(o),_localIndex,r),_classPrivateFieldSet(_assertThisInitialized(o),_rawLocalIndex,r),_classPrivateFieldSet(_assertThisInitialized(o),_value,void 0===E?e.name:E),void 0!==p?_classPrivateFieldSet(_assertThisInitialized(o),_localType,p):_classPrivateMethodGet(_assertThisInitialized(o),_determineStartingType,_determineStartingType2).call(_assertThisInitialized(o)),o}return _createClass(n,[{key:"typeUpdateReceived",value:function(e){e!==_classPrivateFieldGet(this,_localType)&&this.setDataType(e)}},{key:"getEntity",value:function(){return _classPrivateFieldGet(this,_entity)}},{key:"getCategory",value:function(){return _classPrivateFieldGet(this,_category)}},{key:"getDataType",value:function(){return _classPrivateFieldGet(this,_localType)}},{key:"getLineNumber",value:function(){return _classPrivateFieldGet(this,_lineNumber)}},{key:"getLocalIndex",value:function(){return _classPrivateFieldGet(this,_localIndex)}},{key:"getRawLocalIndex",value:function(){return _classPrivateFieldGet(this,_rawLocalIndex)}},{key:"setLocalIndex",value:function(e){_classPrivateFieldSet(this,_localIndex,e)}},{key:"getValue",value:function(){return _classPrivateFieldGet(this,_value)}},{key:"setDataType",value:function(e){e!==_classPrivateFieldGet(this,_localType)&&(_classPrivateFieldSet(this,_localType,e),_get(_getPrototypeOf(n.prototype),"sendUpdate",this).call(this,e))}},{key:"convert",value:function(e,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:_classPrivateFieldGet(this,_localType);_classPrivateFieldSet(this,_entity,e),_classPrivateFieldSet(this,_category,t),i!==_classPrivateFieldGet(this,_localType)&&(_classPrivateFieldSet(this,_localType,i),_get(_getPrototypeOf(n.prototype),"sendUpdate",this).call(this,i))}},{key:"setUsedBy",value:function(e){var t=UsageType.OtherOperation;void 0===e?t=UsageType.None:e.isChangeOperator()||e.isOneOfEntities([ExpressionEntity.ListDefinition,ExpressionEntity.TupleDefinition,ExpressionEntity.SetDefinition,ExpressionEntity.DictDefinition])?t=UsageType.AssignmentModification:e.is(ExpressionEntity.ReturnKeyword)?t=UsageType.ReturnValue:e.isOneOfEntities([ExpressionEntity.FunctionName,ExpressionEntity.MethodName])||e.isOneOfCategories([ExpressionCategory.BuiltInFunctions,ExpressionCategory.ModuleFunctions,ExpressionCategory.BuiltInMethods])?t=UsageType.ArgValue:e.is(ExpressionEntity.OpenSquareBracket)&&(t=UsageType.IndexOrKey),_classPrivateFieldSet(this,_usedBy,t)}},{key:"getUsedBy",value:function(){return _classPrivateFieldGet(this,_usedBy)}},{key:"is",value:function(e){return e instanceof ExpressionEntity?_classPrivateFieldGet(this,_entity)===e:e instanceof ExpressionCategory?_classPrivateFieldGet(this,_category)===e:e instanceof n?this===e:_classPrivateFieldGet(this,_value)===e}},{key:"isOneOfEntities",value:function(e){var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;if(_classPrivateFieldGet(this,_entity)===i)return!0}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"isOneOfCategories",value:function(e){var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;if(_classPrivateFieldGet(this,_category)===i)return!0}}catch(e){n.e(e)}finally{n.f()}}},{key:"isOneOfTypes",value:function(e){var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var i=t.value;if(_classPrivateFieldGet(this,_localType)===i)return!0}}catch(e){n.e(e)}finally{n.f()}return!1}},{key:"isOperator",value:function(){return this.isOneOfEntities([ExpressionEntity.InKeyword,ExpressionEntity.IsKeyword,ExpressionEntity.Dot])||this.isOneOfCategories([ExpressionCategory.MathsOperators,ExpressionCategory.ComparisonOperators,ExpressionCategory.LogicalOperators])}},{key:"isChangeOperator",value:function(){return this.isOneOfEntities([ExpressionEntity.AssignmentOperator,ExpressionEntity.IncrementOperator,ExpressionEntity.DecrementOperator,ExpressionEntity.DivideAssignOperator,ExpressionEntity.ExponentAssignOperator,ExpressionEntity.MultiplyAssignOperator,ExpressionEntity.RemainderAssignOperator,ExpressionEntity.IntDivideAssignOperator])}},{key:"isKeywordUsingValue",value:function(){return this.isOneOfEntities([ExpressionEntity.IfDefinition,ExpressionEntity.ElifDefinition,ExpressionEntity.WhileDefinition,ExpressionEntity.InKeyword,ExpressionEntity.ReturnKeyword,ExpressionEntity.WithKeyword,ExpressionEntity.ForDefinition,ExpressionEntity.AsKeyword,ExpressionEntity.IsKeyword])}},{key:"toString",value:function(){return"".concat(_classPrivateFieldGet(this,_value),": entity=").concat(_classPrivateFieldGet(this,_entity).name," category=").concat(_classPrivateFieldGet(this,_category).name," line:").concat(_classPrivateFieldGet(this,_lineNumber)," index:").concat(_classPrivateFieldGet(this,_localIndex)," type:").concat(_classPrivateFieldGet(this,_localType).name)}}],[{key:"create",value:function(e,t,i){var s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.name,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:void 0;if(void 0!==r)return new n(e,r,t,i,s);switch(e){case ExpressionEntity.ExceptionName:return new n(e,ExpressionCategory.BuiltInExceptions,t,i,s);case ExpressionEntity.VariableName:case ExpressionEntity.FunctionName:case ExpressionEntity.ClassName:case ExpressionEntity.PropertyName:return new n(e,ExpressionCategory.Identifiers,t,i,s);case ExpressionEntity.ModuleName:return new n(e,ExpressionCategory.Identifiers,t,i,s,DataType.Unknown);case ExpressionEntity.MethodName:return new n(e,ExpressionCategory.OtherMethods,t,i,s);case ExpressionEntity.IntLiteral:case ExpressionEntity.StringLiteral:case ExpressionEntity.FloatLiteral:return new n(e,ExpressionCategory.Literals,t,i,s);case ExpressionEntity.MultiLineCommentDelimiter:case ExpressionEntity.SingleLineComment:case ExpressionEntity.MultiLineComment:return new n(e,ExpressionCategory.Comment,t,i,s);case ExpressionEntity.ListDefinition:case ExpressionEntity.TupleDefinition:case ExpressionEntity.SetDefinition:case ExpressionEntity.DictDefinition:return new n(e,ExpressionCategory.CompoundTypes,t,i,s);case ExpressionEntity.IndexKey:case ExpressionEntity.Slice:return new n(e,ExpressionCategory.Other,t,i,s);case ExpressionEntity.AssertFunction:case ExpressionEntity.FormatFunction:return new n(e,ExpressionCategory.BuiltInFunctions,t,i,s);case ExpressionEntity.RandomModule:case ExpressionEntity.MathModule:case ExpressionEntity.StringModule:case ExpressionEntity.ReModule:case ExpressionEntity.Sys:return new n(e,ExpressionCategory.BuiltInModules,t,i,s);case ExpressionEntity.NamedImport:return new n(e,ExpressionCategory.ImportedEntities,t,i,s);case ExpressionEntity.StrType:case ExpressionEntity.IntType:case ExpressionEntity.FloatType:case ExpressionEntity.BoolType:case ExpressionEntity.ListType:case ExpressionEntity.SetType:case ExpressionEntity.DictType:case ExpressionEntity.TupleType:return new n(e,ExpressionCategory.Types,t,i,s);default:var o=keywordLookup(s);return o.entity===e?new n(e,o.category,t,i,s):specialCaseLookup.hasOwnProperty(s)?new n(e,specialCaseLookup[s].category,t,i,s):new n(e,void 0===r?ExpressionCategory.Unknown:r,t,i,s)}}}]),n}();function _determineStartingType2(){[ExpressionCategory.BlockDefinitions,ExpressionCategory.LogicalOperators,ExpressionCategory.MathsOperators,ExpressionCategory.ComparisonOperators,ExpressionCategory.OtherKeywords,ExpressionCategory.Other].includes(_classPrivateFieldGet(this,_category))?_classPrivateFieldSet(this,_localType,DataType.NA):[ExpressionCategory.BuiltInFunctions,ExpressionCategory.BuiltInMethods,ExpressionCategory.MagicMethods,ExpressionCategory.ModuleFunctions,ExpressionCategory.ModuleProperties].includes(_classPrivateFieldGet(this,_category))?_classPrivateFieldSet(this,_localType,builtInReturnLookup.get(_classPrivateFieldGet(this,_entity))):_classPrivateFieldGet(this,_category)===ExpressionCategory.Identifiers?_classPrivateFieldSet(this,_localType,DataType.NotParsed):_classPrivateFieldGet(this,_category)===ExpressionCategory.BuiltInExceptions?_classPrivateFieldSet(this,_localType,DataType.Exception):[ExpressionCategory.Types,ExpressionCategory.SpecialVariables,ExpressionCategory.Literals,ExpressionCategory.CompoundTypes,ExpressionCategory.BuiltInModules].includes(_classPrivateFieldGet(this,_category))?_classPrivateFieldSet(this,_localType,_classPrivateMethodGet(this,_typeByEntity,_typeByEntity2).call(this)):_classPrivateFieldSet(this,_localType,DataType.Unknown)}function _typeByEntity2(){switch(_classPrivateFieldGet(this,_entity)){case ExpressionEntity.TrueType:case ExpressionEntity.FalseType:return DataType.Bool;case ExpressionEntity.NoneType:return DataType.None;case ExpressionEntity.StrType:case ExpressionEntity.IntType:case ExpressionEntity.FloatType:case ExpressionEntity.BoolType:case ExpressionEntity.ListType:case ExpressionEntity.SetType:case ExpressionEntity.DictType:case ExpressionEntity.TupleType:return DataType.Class;case ExpressionEntity.IntLiteral:return DataType.Int;case ExpressionEntity.FloatLiteral:return DataType.Float;case ExpressionEntity.StringLiteral:return DataType.String;case ExpressionEntity.ListDefinition:return DataType.List;case ExpressionEntity.TupleDefinition:return DataType.Tuple;case ExpressionEntity.SetDefinition:return DataType.Set;case ExpressionEntity.DictDefinition:return DataType.Dict;case ExpressionEntity.RandomModule:return DataType.Random;case ExpressionEntity.MathModule:return DataType.Math;case ExpressionEntity.StringModule:return DataType.StringModule;case ExpressionEntity.ReModule:return DataType.Re;case ExpressionEntity.Pattern:return DataType.Pattern;case ExpressionEntity.Match:return DataType.Match;case ExpressionEntity.Sys:return DataType.Sys;default:return DataType.Unknown}}exports.Expression=Expression;var keywordMap=function(e,t){return{entity:e,category:t}},keywordLookup=function(e){switch(e){case"class":return keywordMap(ExpressionEntity.ClassDefinition,ExpressionCategory.BlockDefinitions);case"def":return keywordMap(ExpressionEntity.FunctionDefinition,ExpressionCategory.BlockDefinitions);case"elif":return keywordMap(ExpressionEntity.ElifDefinition,ExpressionCategory.BlockDefinitions);case"else":return keywordMap(ExpressionEntity.ElseDefinition,ExpressionCategory.BlockDefinitions);case"except":return keywordMap(ExpressionEntity.ExceptDefinition,ExpressionCategory.BlockDefinitions);case"finally":return keywordMap(ExpressionEntity.FinallyDefinition,ExpressionCategory.BlockDefinitions);case"for":return keywordMap(ExpressionEntity.ForDefinition,ExpressionCategory.BlockDefinitions);case"if":return keywordMap(ExpressionEntity.IfDefinition,ExpressionCategory.BlockDefinitions);case"lambda":return keywordMap(ExpressionEntity.LambdaDefinition,ExpressionCategory.BlockDefinitions);case"try":return keywordMap(ExpressionEntity.TryDefinition,ExpressionCategory.BlockDefinitions);case"while":return keywordMap(ExpressionEntity.WhileDefinition,ExpressionCategory.BlockDefinitions);case"and":return keywordMap(ExpressionEntity.AndOperator,ExpressionCategory.LogicalOperators);case"not":return keywordMap(ExpressionEntity.NotOperator,ExpressionCategory.LogicalOperators);case"or":return keywordMap(ExpressionEntity.OrOperator,ExpressionCategory.LogicalOperators);case"False":return keywordMap(ExpressionEntity.FalseType,ExpressionCategory.Types);case"None":return keywordMap(ExpressionEntity.NoneType,ExpressionCategory.Types);case"True":return keywordMap(ExpressionEntity.TrueType,ExpressionCategory.Types);case"as":return keywordMap(ExpressionEntity.AsKeyword,ExpressionCategory.OtherKeywords);case"global":return keywordMap(ExpressionEntity.GlobalKeyword,ExpressionCategory.OtherKeywords);case"assert":return keywordMap(ExpressionEntity.AssertKeyword,ExpressionCategory.OtherKeywords);case"break":return keywordMap(ExpressionEntity.BreakKeyword,ExpressionCategory.OtherKeywords);case"continue":return keywordMap(ExpressionEntity.ContinueKeyword,ExpressionCategory.OtherKeywords);case"del":return keywordMap(ExpressionEntity.DelKeyword,ExpressionCategory.OtherKeywords);case"from":return keywordMap(ExpressionEntity.FromKeyword,ExpressionCategory.OtherKeywords);case"import":return keywordMap(ExpressionEntity.ImportKeyword,ExpressionCategory.OtherKeywords);case"in":return keywordMap(ExpressionEntity.InKeyword,ExpressionCategory.OtherKeywords);case"is":return keywordMap(ExpressionEntity.IsKeyword,ExpressionCategory.OtherKeywords);case"pass":return keywordMap(ExpressionEntity.PassKeyword,ExpressionCategory.OtherKeywords);case"raise":return keywordMap(ExpressionEntity.RaiseKeyword,ExpressionCategory.OtherKeywords);case"return":return keywordMap(ExpressionEntity.ReturnKeyword,ExpressionCategory.OtherKeywords);case"with":return keywordMap(ExpressionEntity.WithKeyword,ExpressionCategory.OtherKeywords);case"yield":return keywordMap(ExpressionEntity.YieldKeyword,ExpressionCategory.OtherKeywords);case"+":return keywordMap(ExpressionEntity.AddOperator,ExpressionCategory.MathsOperators);case"-":return keywordMap(ExpressionEntity.SubtractOperator,ExpressionCategory.MathsOperators);case"*":return keywordMap(ExpressionEntity.MultiplyOperator,ExpressionCategory.MathsOperators);case"/":return keywordMap(ExpressionEntity.DivideOperator,ExpressionCategory.MathsOperators);case"%":return keywordMap(ExpressionEntity.ModulusOperator,ExpressionCategory.MathsOperators);case"**":return keywordMap(ExpressionEntity.ExponentOperator,ExpressionCategory.MathsOperators);case"//":return keywordMap(ExpressionEntity.IntDivideOperator,ExpressionCategory.MathsOperators);case"=":return keywordMap(ExpressionEntity.AssignmentOperator,ExpressionCategory.MathsOperators);case"+=":return keywordMap(ExpressionEntity.IncrementOperator,ExpressionCategory.MathsOperators);case"-=":return keywordMap(ExpressionEntity.DecrementOperator,ExpressionCategory.MathsOperators);case"*=":return keywordMap(ExpressionEntity.MultiplyAssignOperator,ExpressionCategory.MathsOperators);case"/=":return keywordMap(ExpressionEntity.DivideAssignOperator,ExpressionCategory.MathsOperators);case"%=":return keywordMap(ExpressionEntity.RemainderAssignOperator,ExpressionCategory.MathsOperators);case"//=":return keywordMap(ExpressionEntity.IntDivideAssignOperator,ExpressionCategory.MathsOperators);case"**=":return keywordMap(ExpressionEntity.ExponentAssignOperator,ExpressionCategory.MathsOperators);case"==":return keywordMap(ExpressionEntity.EqualOperator,ExpressionCategory.ComparisonOperators);case"!=":return keywordMap(ExpressionEntity.NotEqualOperator,ExpressionCategory.ComparisonOperators);case">":return keywordMap(ExpressionEntity.GreaterThanOperator,ExpressionCategory.ComparisonOperators);case"<":return keywordMap(ExpressionEntity.LessThanOperator,ExpressionCategory.ComparisonOperators);case">=":return keywordMap(ExpressionEntity.GreaterThanOrEqualOperator,ExpressionCategory.ComparisonOperators);case"<=":return keywordMap(ExpressionEntity.LessThanOrEqualOperator,ExpressionCategory.ComparisonOperators);case"->":return keywordMap(ExpressionEntity.TypeHintReturn,ExpressionCategory.TypeHint);case"abs":return keywordMap(ExpressionEntity.AbsFunction,ExpressionCategory.BuiltInFunctions);case"all":return keywordMap(ExpressionEntity.AllFunction,ExpressionCategory.BuiltInFunctions);case"any":return keywordMap(ExpressionEntity.AnyFunction,ExpressionCategory.BuiltInFunctions);case"ascii":return keywordMap(ExpressionEntity.AsciiFunction,ExpressionCategory.BuiltInFunctions);case"bin":return keywordMap(ExpressionEntity.BinFunction,ExpressionCategory.BuiltInFunctions);case"bool":return keywordMap(ExpressionEntity.BoolFunction,ExpressionCategory.BuiltInFunctions);case"callable":return keywordMap(ExpressionEntity.CallableFunction,ExpressionCategory.BuiltInFunctions);case"chr":return keywordMap(ExpressionEntity.ChrFunction,ExpressionCategory.BuiltInFunctions);case"dict":return keywordMap(ExpressionEntity.DictDefinition,ExpressionCategory.BuiltInFunctions);case"divmod":return keywordMap(ExpressionEntity.DivModFunction,ExpressionCategory.BuiltInFunctions);case"enumerate":return keywordMap(ExpressionEntity.EnumerateFunction,ExpressionCategory.BuiltInFunctions);case"eval":return keywordMap(ExpressionEntity.EvalFunction,ExpressionCategory.BuiltInFunctions);case"exec":return keywordMap(ExpressionEntity.ExecFunction,ExpressionCategory.BuiltInFunctions);case"exit":return keywordMap(ExpressionEntity.ExitFunction,ExpressionCategory.BuiltInFunctions);case"filter":return keywordMap(ExpressionEntity.FilterFunction,ExpressionCategory.BuiltInFunctions);case"float":return keywordMap(ExpressionEntity.FloatFunction,ExpressionCategory.BuiltInFunctions);case"getattr":return keywordMap(ExpressionEntity.GetAttrFunction,ExpressionCategory.BuiltInFunctions);case"globals":return keywordMap(ExpressionEntity.GlobalsFunction,ExpressionCategory.BuiltInFunctions);case"hasattr":return keywordMap(ExpressionEntity.HasAttrFunction,ExpressionCategory.BuiltInFunctions);case"input":return keywordMap(ExpressionEntity.InputFunction,ExpressionCategory.BuiltInFunctions);case"int":return keywordMap(ExpressionEntity.IntFunction,ExpressionCategory.BuiltInFunctions);case"isinstance":return keywordMap(ExpressionEntity.IsInstanceFunction,ExpressionCategory.BuiltInFunctions);case"len":return keywordMap(ExpressionEntity.LenFunction,ExpressionCategory.BuiltInFunctions);case"list":return keywordMap(ExpressionEntity.ListFunction,ExpressionCategory.BuiltInFunctions);case"map":return keywordMap(ExpressionEntity.MapFunction,ExpressionCategory.BuiltInFunctions);case"max":return keywordMap(ExpressionEntity.MaxFunction,ExpressionCategory.BuiltInFunctions);case"min":return keywordMap(ExpressionEntity.MinFunction,ExpressionCategory.BuiltInFunctions);case"open":return keywordMap(ExpressionEntity.OpenFunction,ExpressionCategory.BuiltInFunctions);case"ord":return keywordMap(ExpressionEntity.OrdFunction,ExpressionCategory.BuiltInFunctions);case"pow":return keywordMap(ExpressionEntity.PowFunction,ExpressionCategory.BuiltInFunctions);case"print":return keywordMap(ExpressionEntity.PrintFunction,ExpressionCategory.BuiltInFunctions);case"quit":return keywordMap(ExpressionEntity.QuitFunction,ExpressionCategory.BuiltInFunctions);case"range":return keywordMap(ExpressionEntity.RangeFunction,ExpressionCategory.BuiltInFunctions);case"reversed":return keywordMap(ExpressionEntity.ReversedFunction,ExpressionCategory.BuiltInFunctions);case"round":return keywordMap(ExpressionEntity.RoundFunction,ExpressionCategory.BuiltInFunctions);case"set":return keywordMap(ExpressionEntity.SetFunction,ExpressionCategory.BuiltInFunctions);case"sorted":return keywordMap(ExpressionEntity.SortedFunction,ExpressionCategory.BuiltInFunctions);case"str":return keywordMap(ExpressionEntity.StrFunction,ExpressionCategory.BuiltInFunctions);case"sum":return keywordMap(ExpressionEntity.SumFunction,ExpressionCategory.BuiltInFunctions);case"tuple":return keywordMap(ExpressionEntity.TupleFunction,ExpressionCategory.BuiltInFunctions);case"type":return keywordMap(ExpressionEntity.TypeFunction,ExpressionCategory.BuiltInFunctions);case"zip":return keywordMap(ExpressionEntity.ZipFunction,ExpressionCategory.BuiltInFunctions);case"__main__":return keywordMap(ExpressionEntity.Main,ExpressionCategory.MagicMethods);case"__cmp__":return keywordMap(ExpressionEntity.Cmp,ExpressionCategory.MagicMethods);case"__eq__":return keywordMap(ExpressionEntity.Eq,ExpressionCategory.MagicMethods);case"__ne__":return keywordMap(ExpressionEntity.Ne,ExpressionCategory.MagicMethods);case"__lt__":return keywordMap(ExpressionEntity.Lt,ExpressionCategory.MagicMethods);case"__gt__":return keywordMap(ExpressionEntity.Gt,ExpressionCategory.MagicMethods);case"__le__":return keywordMap(ExpressionEntity.Le,ExpressionCategory.MagicMethods);case"__ge__":return keywordMap(ExpressionEntity.Ge,ExpressionCategory.MagicMethods);case"__str__":return keywordMap(ExpressionEntity.Str,ExpressionCategory.MagicMethods);case"__contains__":return keywordMap(ExpressionEntity.SpecialContains,ExpressionCategory.MagicMethods);case"__len__":return keywordMap(ExpressionEntity.SpecialLen,ExpressionCategory.MagicMethods);case"__name__":return keywordMap(ExpressionEntity.Name,ExpressionCategory.SpecialVariables);case"__self__":return keywordMap(ExpressionEntity.Self,ExpressionCategory.SpecialVariables);case"__doc__":return keywordMap(ExpressionEntity.Doc,ExpressionCategory.SpecialVariables);case"__getattr__":return keywordMap(ExpressionEntity.GetAttrVariable,ExpressionCategory.SpecialVariables);case"__setattr__":return keywordMap(ExpressionEntity.SetAttrVariable,ExpressionCategory.SpecialVariables);case"__class__":return keywordMap(ExpressionEntity.ClassVariable,ExpressionCategory.SpecialVariables);case"r":return keywordMap(ExpressionEntity.R,ExpressionCategory.SpecialVariables);case"f":return keywordMap(ExpressionEntity.F,ExpressionCategory.SpecialVariables);case"sep":return keywordMap(ExpressionEntity.Sep,ExpressionCategory.SpecialVariables);case"end":return keywordMap(ExpressionEntity.End,ExpressionCategory.SpecialVariables);case"ArtithmeticError":case"AssertionError":case"AttributeError":case"BlockingIOError":case"BrokenPipeError":case"BufferError":case"ChildProcessError":case"ConnectionAbortedError":case"ConnectionError":case"ConnectionRefusedError":case"ConnectionResetError":case"Exception":case"EOFError":case"EnvironmentError":case"FileExistsError":case"FileNotFoundError":case"FloatingPointError":case"GeneratorExit":case"ImportError":case"IndentationError":case"IndexError":case"InterruptedError":case"IOError":case"IsADirectoryError":case"KeyError":case"KeyboardInterrupt":case"LookupError":case"MemoryError":case"ModuleNotFoundError":case"NameError":case"NotADirectoryError":case"NotImplementedError":case"OSError":case"OverflowError":case"PermissionError":case"ProcessLookupError":case"RecursionError":case"ReferenceError":case"RuntimeError":case"StopIteration":case"SyntaxError":case"TabError":case"TimeoutError":case"SystemError":case"SystemExit":case"TypeError":case"UnboundLocalError":case"UnicodeError":case"UnicodeEncodeError":case"UnicodeDecodeError":case"UnicodeTranslateError":case"ValueError":case"Warning":case"ZeroDivisionError":return keywordMap(ExpressionEntity.ExceptionName,ExpressionCategory.BuiltInExceptions);case"capitalize":return keywordMap(ExpressionEntity.Capitalize,ExpressionCategory.BuiltInMethods);case"casefold":return keywordMap(ExpressionEntity.Casefold,ExpressionCategory.BuiltInMethods);case"center":return keywordMap(ExpressionEntity.Center,ExpressionCategory.BuiltInMethods);case"count":return keywordMap(ExpressionEntity.Count,ExpressionCategory.BuiltInMethods);case"encode":return keywordMap(ExpressionEntity.Encode,ExpressionCategory.BuiltInMethods);case"endswith":return keywordMap(ExpressionEntity.EndsWith,ExpressionCategory.BuiltInMethods);case"expandtabs":return keywordMap(ExpressionEntity.ExpandTabs,ExpressionCategory.BuiltInMethods);case"find":return keywordMap(ExpressionEntity.Find,ExpressionCategory.BuiltInMethods);case"format":return keywordMap(ExpressionEntity.Format,ExpressionCategory.BuiltInMethods);case"format_map":return keywordMap(ExpressionEntity.FormatMap,ExpressionCategory.BuiltInMethods);case"index":return keywordMap(ExpressionEntity.Index,ExpressionCategory.BuiltInMethods);case"isalnum":return keywordMap(ExpressionEntity.IsAlnum,ExpressionCategory.BuiltInMethods);case"isalpha":return keywordMap(ExpressionEntity.IsAlpha,ExpressionCategory.BuiltInMethods);case"isascii":return keywordMap(ExpressionEntity.IsAscii,ExpressionCategory.BuiltInMethods);case"isdecimal":return keywordMap(ExpressionEntity.IsDecimal,ExpressionCategory.BuiltInMethods);case"isdigit":return keywordMap(ExpressionEntity.IsDigit,ExpressionCategory.BuiltInMethods);case"isidentifier":return keywordMap(ExpressionEntity.IsIdentifier,ExpressionCategory.BuiltInMethods);case"islower":return keywordMap(ExpressionEntity.IsLower,ExpressionCategory.BuiltInMethods);case"isnumeric":return keywordMap(ExpressionEntity.IsNumeric,ExpressionCategory.BuiltInMethods);case"isprintable":return keywordMap(ExpressionEntity.IsPrintable,ExpressionCategory.BuiltInMethods);case"isspace":return keywordMap(ExpressionEntity.IsSpace,ExpressionCategory.BuiltInMethods);case"istitle":return keywordMap(ExpressionEntity.IsTitle,ExpressionCategory.BuiltInMethods);case"isupper":return keywordMap(ExpressionEntity.IsUpper,ExpressionCategory.BuiltInMethods);case"join":return keywordMap(ExpressionEntity.Join,ExpressionCategory.BuiltInMethods);case"ljust":return keywordMap(ExpressionEntity.LJust,ExpressionCategory.BuiltInMethods);case"lower":return keywordMap(ExpressionEntity.Lower,ExpressionCategory.BuiltInMethods);case"lstrip":return keywordMap(ExpressionEntity.LStrip,ExpressionCategory.BuiltInMethods);case"maketrans":return keywordMap(ExpressionEntity.MakeTrans,ExpressionCategory.BuiltInMethods);case"partition":return keywordMap(ExpressionEntity.Partition,ExpressionCategory.BuiltInMethods);case"replace":return keywordMap(ExpressionEntity.Replace,ExpressionCategory.BuiltInMethods);case"rfind":return keywordMap(ExpressionEntity.RFind,ExpressionCategory.BuiltInMethods);case"rindex":return keywordMap(ExpressionEntity.RIndex,ExpressionCategory.BuiltInMethods);case"rjust":return keywordMap(ExpressionEntity.RJust,ExpressionCategory.BuiltInMethods);case"rpartition":return keywordMap(ExpressionEntity.RPartition,ExpressionCategory.BuiltInMethods);case"rsplit":return keywordMap(ExpressionEntity.RSplit,ExpressionCategory.BuiltInMethods);case"rstrip":return keywordMap(ExpressionEntity.RStrip,ExpressionCategory.BuiltInMethods);case"split":return keywordMap(ExpressionEntity.Split,ExpressionCategory.BuiltInMethods);case"splitlines":return keywordMap(ExpressionEntity.SplitLines,ExpressionCategory.BuiltInMethods);case"startswith":return keywordMap(ExpressionEntity.StartsWith,ExpressionCategory.BuiltInMethods);case"strip":return keywordMap(ExpressionEntity.Strip,ExpressionCategory.BuiltInMethods);case"swapcase":return keywordMap(ExpressionEntity.SwapCase,ExpressionCategory.BuiltInMethods);case"title":return keywordMap(ExpressionEntity.Title,ExpressionCategory.BuiltInMethods);case"translate":return keywordMap(ExpressionEntity.Translate,ExpressionCategory.BuiltInMethods);case"upper":return keywordMap(ExpressionEntity.Upper,ExpressionCategory.BuiltInMethods);case"zfill":return keywordMap(ExpressionEntity.ZFill,ExpressionCategory.BuiltInMethods);case"append":return keywordMap(ExpressionEntity.Append,ExpressionCategory.BuiltInMethods);case"clear":return keywordMap(ExpressionEntity.Clear,ExpressionCategory.BuiltInMethods);case"copy":return keywordMap(ExpressionEntity.Copy,ExpressionCategory.BuiltInMethods);case"extend":return keywordMap(ExpressionEntity.Extend,ExpressionCategory.BuiltInMethods);case"insert":return keywordMap(ExpressionEntity.Insert,ExpressionCategory.BuiltInMethods);case"pop":return keywordMap(ExpressionEntity.Pop,ExpressionCategory.BuiltInMethods);case"remove":return keywordMap(ExpressionEntity.Remove,ExpressionCategory.BuiltInMethods);case"reverse":return keywordMap(ExpressionEntity.Reverse,ExpressionCategory.BuiltInMethods);case"sort":return keywordMap(ExpressionEntity.Sort,ExpressionCategory.BuiltInMethods);case"fromkeys":return keywordMap(ExpressionEntity.FromKeys,ExpressionCategory.BuiltInMethods);case"get":return keywordMap(ExpressionEntity.Get,ExpressionCategory.BuiltInMethods);case"items":return keywordMap(ExpressionEntity.Items,ExpressionCategory.BuiltInMethods);case"keys":return keywordMap(ExpressionEntity.Keys,ExpressionCategory.BuiltInMethods);case"popitem":return keywordMap(ExpressionEntity.PopItem,ExpressionCategory.BuiltInMethods);case"setdefault":return keywordMap(ExpressionEntity.SetDefault,ExpressionCategory.BuiltInMethods);case"update":return keywordMap(ExpressionEntity.Update,ExpressionCategory.BuiltInMethods);case"values":return keywordMap(ExpressionEntity.Values,ExpressionCategory.BuiltInMethods);case"add":return keywordMap(ExpressionEntity.Add,ExpressionCategory.BuiltInMethods);case"difference":return keywordMap(ExpressionEntity.Difference,ExpressionCategory.BuiltInMethods);case"difference_update":return keywordMap(ExpressionEntity.DifferenceUpdate,ExpressionCategory.BuiltInMethods);case"discard":return keywordMap(ExpressionEntity.Discard,ExpressionCategory.BuiltInMethods);case"intersection":return keywordMap(ExpressionEntity.Intersection,ExpressionCategory.BuiltInMethods);case"intersection_update":return keywordMap(ExpressionEntity.IntersectionUpdate,ExpressionCategory.BuiltInMethods);case"isdisjoint":return keywordMap(ExpressionEntity.IsDisjoint,ExpressionCategory.BuiltInMethods);case"issubset":return keywordMap(ExpressionEntity.IsSubset,ExpressionCategory.BuiltInMethods);case"issuperset":return keywordMap(ExpressionEntity.IsSuperset,ExpressionCategory.BuiltInMethods);case"symmetric_difference":return keywordMap(ExpressionEntity.SymmetricDifference,ExpressionCategory.BuiltInMethods);case"symmetric_difference_update":return keywordMap(ExpressionEntity.SymmetricDifferenceUpdate,ExpressionCategory.BuiltInMethods);case"union":return keywordMap(ExpressionEntity.Union,ExpressionCategory.BuiltInMethods);case"close":return keywordMap(ExpressionEntity.Close,ExpressionCategory.BuiltInMethods);case"detach":return keywordMap(ExpressionEntity.Detach,ExpressionCategory.BuiltInMethods);case"fileno":return keywordMap(ExpressionEntity.FileNo,ExpressionCategory.BuiltInMethods);case"flush":return keywordMap(ExpressionEntity.Flush,ExpressionCategory.BuiltInMethods);case"isatty":return keywordMap(ExpressionEntity.IsAtty,ExpressionCategory.BuiltInMethods);case"read":return keywordMap(ExpressionEntity.Read,ExpressionCategory.BuiltInMethods);case"readable":return keywordMap(ExpressionEntity.Readable,ExpressionCategory.BuiltInMethods);case"readline":return keywordMap(ExpressionEntity.ReadLine,ExpressionCategory.BuiltInMethods);case"readlines":return keywordMap(ExpressionEntity.ReadLines,ExpressionCategory.BuiltInMethods);case"seek":return keywordMap(ExpressionEntity.Seek,ExpressionCategory.BuiltInMethods);case"seekable":return keywordMap(ExpressionEntity.Seekable,ExpressionCategory.BuiltInMethods);case"tell":return keywordMap(ExpressionEntity.Tell,ExpressionCategory.BuiltInMethods);case"truncate":return keywordMap(ExpressionEntity.Truncate,ExpressionCategory.BuiltInMethods);case"writable":return keywordMap(ExpressionEntity.Writable,ExpressionCategory.BuiltInMethods);case"write":return keywordMap(ExpressionEntity.Write,ExpressionCategory.BuiltInMethods);case"writelines":return keywordMap(ExpressionEntity.WriteLines,ExpressionCategory.BuiltInMethods);case"(":return keywordMap(ExpressionEntity.OpenParenthesis,ExpressionCategory.Other);case")":return keywordMap(ExpressionEntity.CloseParenthesis,ExpressionCategory.Other);case"[":return keywordMap(ExpressionEntity.OpenSquareBracket,ExpressionCategory.Other);case"]":return keywordMap(ExpressionEntity.CloseSquareBracket,ExpressionCategory.Other);case"{":return keywordMap(ExpressionEntity.OpenBrace,ExpressionCategory.Other);case"}":return keywordMap(ExpressionEntity.CloseBrace,ExpressionCategory.Other);case",":return keywordMap(ExpressionEntity.Comma,ExpressionCategory.Other);case":":return keywordMap(ExpressionEntity.Colon,ExpressionCategory.Other);case".":return keywordMap(ExpressionEntity.Dot,ExpressionCategory.Other);case"\\":return keywordMap(ExpressionEntity.ContinuationLine,ExpressionCategory.Other);case";":return keywordMap(ExpressionEntity.Separator,ExpressionCategory.Other);case"'":return keywordMap(ExpressionEntity.SingleQuote,ExpressionCategory.Other);case'"':return keywordMap(ExpressionEntity.DoubleQuote,ExpressionCategory.Other);case"random":return keywordMap(ExpressionEntity.RandomModule,ExpressionCategory.BuiltInModules);case"math":return keywordMap(ExpressionEntity.MathModule,ExpressionCategory.BuiltInModules);case"string":return keywordMap(ExpressionEntity.StringModule,ExpressionCategory.BuiltInModules);case"re":return keywordMap(ExpressionEntity.ReModule,ExpressionCategory.BuiltInModules);case"sys":return keywordMap(ExpressionEntity.Sys,ExpressionCategory.BuiltInModules);case"seed":return keywordMap(ExpressionEntity.Seed,ExpressionCategory.ModuleFunctions);case"getstate":return keywordMap(ExpressionEntity.GetState,ExpressionCategory.ModuleFunctions);case"setstate":return keywordMap(ExpressionEntity.SetState,ExpressionCategory.ModuleFunctions);case"getrandbits":return keywordMap(ExpressionEntity.GetRandBits,ExpressionCategory.ModuleFunctions);case"randrange":return keywordMap(ExpressionEntity.RandRange,ExpressionCategory.ModuleFunctions);case"randint":return keywordMap(ExpressionEntity.RandInt,ExpressionCategory.ModuleFunctions);case"choice":return keywordMap(ExpressionEntity.Choice,ExpressionCategory.ModuleFunctions);case"choices":return keywordMap(ExpressionEntity.Choices,ExpressionCategory.ModuleFunctions);case"shuffle":return keywordMap(ExpressionEntity.Shuffle,ExpressionCategory.ModuleFunctions);case"sample":return keywordMap(ExpressionEntity.Sample,ExpressionCategory.ModuleFunctions);case"uniform":return keywordMap(ExpressionEntity.Uniform,ExpressionCategory.ModuleFunctions);case"triangular":return keywordMap(ExpressionEntity.Triangular,ExpressionCategory.ModuleFunctions);case"betavariate":return keywordMap(ExpressionEntity.BetaVariate,ExpressionCategory.ModuleFunctions);case"expovariate":return keywordMap(ExpressionEntity.ExpoVariate,ExpressionCategory.ModuleFunctions);case"gammavariate":return keywordMap(ExpressionEntity.GammaVariate,ExpressionCategory.ModuleFunctions);case"gauss":return keywordMap(ExpressionEntity.Gauss,ExpressionCategory.ModuleFunctions);case"lognormvariate":return keywordMap(ExpressionEntity.LogNormVariate,ExpressionCategory.ModuleFunctions);case"normalvariate":return keywordMap(ExpressionEntity.NormalVariate,ExpressionCategory.ModuleFunctions);case"vonmisesvariate":return keywordMap(ExpressionEntity.VonMisesVariate,ExpressionCategory.ModuleFunctions);case"paretovariate":return keywordMap(ExpressionEntity.ParetoVariate,ExpressionCategory.ModuleFunctions);case"weibullvariate":return keywordMap(ExpressionEntity.WeibullVariate,ExpressionCategory.ModuleFunctions);case"acos":return keywordMap(ExpressionEntity.Acos,ExpressionCategory.ModuleFunctions);case"acosh":return keywordMap(ExpressionEntity.Acosh,ExpressionCategory.ModuleFunctions);case"asin":return keywordMap(ExpressionEntity.Asin,ExpressionCategory.ModuleFunctions);case"asinh":return keywordMap(ExpressionEntity.Asinh,ExpressionCategory.ModuleFunctions);case"atan":return keywordMap(ExpressionEntity.Atan,ExpressionCategory.ModuleFunctions);case"atan2":return keywordMap(ExpressionEntity.Atan2,ExpressionCategory.ModuleFunctions);case"atanh":return keywordMap(ExpressionEntity.Atanh,ExpressionCategory.ModuleFunctions);case"ceil":return keywordMap(ExpressionEntity.Ceil,ExpressionCategory.ModuleFunctions);case"comb":return keywordMap(ExpressionEntity.Comb,ExpressionCategory.ModuleFunctions);case"copysign":return keywordMap(ExpressionEntity.Copysign,ExpressionCategory.ModuleFunctions);case"cos":return keywordMap(ExpressionEntity.Cos,ExpressionCategory.ModuleFunctions);case"cosh":return keywordMap(ExpressionEntity.Cosh,ExpressionCategory.ModuleFunctions);case"degrees":return keywordMap(ExpressionEntity.Degrees,ExpressionCategory.ModuleFunctions);case"dist":return keywordMap(ExpressionEntity.Dist,ExpressionCategory.ModuleFunctions);case"erf":return keywordMap(ExpressionEntity.Erf,ExpressionCategory.ModuleFunctions);case"erfc":return keywordMap(ExpressionEntity.Erfc,ExpressionCategory.ModuleFunctions);case"exp":return keywordMap(ExpressionEntity.Exp,ExpressionCategory.ModuleFunctions);case"expm1":return keywordMap(ExpressionEntity.Expm1,ExpressionCategory.ModuleFunctions);case"fabs":return keywordMap(ExpressionEntity.Fabs,ExpressionCategory.ModuleFunctions);case"factorial":return keywordMap(ExpressionEntity.Factorial,ExpressionCategory.ModuleFunctions);case"floor":return keywordMap(ExpressionEntity.Floor,ExpressionCategory.ModuleFunctions);case"fmod":return keywordMap(ExpressionEntity.Fmod,ExpressionCategory.ModuleFunctions);case"frexp":return keywordMap(ExpressionEntity.Frexp,ExpressionCategory.ModuleFunctions);case"fsum":return keywordMap(ExpressionEntity.Fsum,ExpressionCategory.ModuleFunctions);case"gamma":return keywordMap(ExpressionEntity.Gamma,ExpressionCategory.ModuleFunctions);case"gcd":return keywordMap(ExpressionEntity.Gcd,ExpressionCategory.ModuleFunctions);case"hypot":return keywordMap(ExpressionEntity.Hypot,ExpressionCategory.ModuleFunctions);case"isclose":return keywordMap(ExpressionEntity.IsClose,ExpressionCategory.ModuleFunctions);case"isfinite":return keywordMap(ExpressionEntity.IsFinite,ExpressionCategory.ModuleFunctions);case"isinf":return keywordMap(ExpressionEntity.IsInf,ExpressionCategory.ModuleFunctions);case"isnan":return keywordMap(ExpressionEntity.IsNaN,ExpressionCategory.ModuleFunctions);case"isqrt":return keywordMap(ExpressionEntity.ISqrt,ExpressionCategory.ModuleFunctions);case"ldexp":return keywordMap(ExpressionEntity.Ldexp,ExpressionCategory.ModuleFunctions);case"lgamma":return keywordMap(ExpressionEntity.LGamma,ExpressionCategory.ModuleFunctions);case"log":return keywordMap(ExpressionEntity.Log,ExpressionCategory.ModuleFunctions);case"log10":return keywordMap(ExpressionEntity.Log10,ExpressionCategory.ModuleFunctions);case"log1p":return keywordMap(ExpressionEntity.Log1P,ExpressionCategory.ModuleFunctions);case"log2":return keywordMap(ExpressionEntity.Log2,ExpressionCategory.ModuleFunctions);case"perm":return keywordMap(ExpressionEntity.Perm,ExpressionCategory.ModuleFunctions);case"pow":return keywordMap(ExpressionEntity.Pow,ExpressionCategory.ModuleFunctions);case"prod":return keywordMap(ExpressionEntity.Prod,ExpressionCategory.ModuleFunctions);case"radians":return keywordMap(ExpressionEntity.Radians,ExpressionCategory.ModuleFunctions);case"remainder":return keywordMap(ExpressionEntity.Remainder,ExpressionCategory.ModuleFunctions);case"sin":return keywordMap(ExpressionEntity.Sin,ExpressionCategory.ModuleFunctions);case"sinh":return keywordMap(ExpressionEntity.Sinh,ExpressionCategory.ModuleFunctions);case"sqrt":return keywordMap(ExpressionEntity.Sqrt,ExpressionCategory.ModuleFunctions);case"tan":return keywordMap(ExpressionEntity.Tan,ExpressionCategory.ModuleFunctions);case"tanh":return keywordMap(ExpressionEntity.Tanh,ExpressionCategory.ModuleFunctions);case"trun":return keywordMap(ExpressionEntity.Trunc,ExpressionCategory.ModuleFunctions);case"e":return keywordMap(ExpressionEntity.E,ExpressionCategory.ModuleProperties);case"inf":return keywordMap(ExpressionEntity.Inf,ExpressionCategory.ModuleProperties);case"nan":return keywordMap(ExpressionEntity.Nan,ExpressionCategory.ModuleProperties);case"pi":return keywordMap(ExpressionEntity.Pi,ExpressionCategory.ModuleProperties);case"tau":return keywordMap(ExpressionEntity.Tau,ExpressionCategory.ModuleProperties);case"ascii_letters":return keywordMap(ExpressionEntity.AsciiLetters,ExpressionCategory.ModuleProperties);case"ascii_lowercase":return keywordMap(ExpressionEntity.AsciiLowercase,ExpressionCategory.ModuleProperties);case"ascii_uppercase":return keywordMap(ExpressionEntity.AsciiUppercase,ExpressionCategory.ModuleProperties);case"digits":return keywordMap(ExpressionEntity.Digits,ExpressionCategory.ModuleProperties);case"hexdigits":return keywordMap(ExpressionEntity.Hexdigits,ExpressionCategory.ModuleProperties);case"octdigits":return keywordMap(ExpressionEntity.Octdigits,ExpressionCategory.ModuleProperties);case"punctuation":return keywordMap(ExpressionEntity.Punctuation,ExpressionCategory.ModuleProperties);case"printable":return keywordMap(ExpressionEntity.Printable,ExpressionCategory.ModuleProperties);case"whitespace":return keywordMap(ExpressionEntity.Whitespace,ExpressionCategory.ModuleProperties);case"Formatter":return keywordMap(ExpressionEntity.Formatter,ExpressionCategory.ModuleFunctions);case"Template":return keywordMap(ExpressionEntity.Template,ExpressionCategory.ModuleFunctions);case"capwords":return keywordMap(ExpressionEntity.Capwords,ExpressionCategory.ModuleFunctions);case"Pattern":return keywordMap(ExpressionEntity.Pattern,ExpressionCategory.Types);case"Match":return keywordMap(ExpressionEntity.Match,ExpressionCategory.Types);case"A":return keywordMap(ExpressionEntity.ReA,ExpressionCategory.ModuleProperties);case"ASCII":return keywordMap(ExpressionEntity.ReASCII,ExpressionCategory.ModuleProperties);case"DEBUG":return keywordMap(ExpressionEntity.ReDebug,ExpressionCategory.ModuleProperties);case"I":return keywordMap(ExpressionEntity.ReI,ExpressionCategory.ModuleProperties);case"IGNORECASE":return keywordMap(ExpressionEntity.ReIGNORECASE,ExpressionCategory.ModuleProperties);case"L":return keywordMap(ExpressionEntity.ReL,ExpressionCategory.ModuleProperties);case"LOCALE":return keywordMap(ExpressionEntity.ReLOCALE,ExpressionCategory.ModuleProperties);case"M":return keywordMap(ExpressionEntity.ReM,ExpressionCategory.ModuleProperties);case"MULTILINE":return keywordMap(ExpressionEntity.ReMULTILINE,ExpressionCategory.ModuleProperties);case"S":return keywordMap(ExpressionEntity.ReS,ExpressionCategory.ModuleProperties);case"DOTALL":return keywordMap(ExpressionEntity.ReDOTALL,ExpressionCategory.ModuleProperties);case"X":return keywordMap(ExpressionEntity.ReX,ExpressionCategory.ModuleProperties);case"VERBOSE":return keywordMap(ExpressionEntity.ReVERBOSE,ExpressionCategory.ModuleProperties);case"compile":return keywordMap(ExpressionEntity.Compile,ExpressionCategory.ModuleFunctions);case"search":return keywordMap(ExpressionEntity.Search,ExpressionCategory.ModuleFunctions);case"match":return keywordMap(ExpressionEntity.Match,ExpressionCategory.ModuleFunctions);case"fullmatch":return keywordMap(ExpressionEntity.FullMatch,ExpressionCategory.ModuleFunctions);case"findall":return keywordMap(ExpressionEntity.FindAll,ExpressionCategory.ModuleFunctions);case"finditer":return keywordMap(ExpressionEntity.FindIter,ExpressionCategory.ModuleFunctions);case"sub":return keywordMap(ExpressionEntity.Sub,ExpressionCategory.ModuleFunctions);case"subn":return keywordMap(ExpressionEntity.SubN,ExpressionCategory.ModuleFunctions);case"escape":return keywordMap(ExpressionEntity.Escape,ExpressionCategory.ModuleFunctions);case"purge":return keywordMap(ExpressionEntity.Purge,ExpressionCategory.ModuleFunctions);case"addaudithook":return keywordMap(ExpressionEntity.AddAuditHook,ExpressionCategory.ModuleFunctions);case"audit":return keywordMap(ExpressionEntity.Audit,ExpressionCategory.ModuleFunctions);case"call_tracing":return keywordMap(ExpressionEntity.CallTracing,ExpressionCategory.ModuleFunctions);case"_clear_type_cache":return keywordMap(ExpressionEntity.ClearTypeCache,ExpressionCategory.ModuleFunctions);case"_current_frames":return keywordMap(ExpressionEntity.CurrentFrames,ExpressionCategory.ModuleFunctions);case"_current_exceptions":return keywordMap(ExpressionEntity.CurrentExceptions,ExpressionCategory.ModuleFunctions);case"breakpointhook":return keywordMap(ExpressionEntity.BreakpointHook,ExpressionCategory.ModuleFunctions);case"_debugmallocstats":return keywordMap(ExpressionEntity.DebugMallocStats,ExpressionCategory.ModuleFunctions);case"displayhook":return keywordMap(ExpressionEntity.DisplayHook,ExpressionCategory.ModuleFunctions);case"excepthook":return keywordMap(ExpressionEntity.ExceptHook,ExpressionCategory.ModuleFunctions);case"exc_info":return keywordMap(ExpressionEntity.ExcInfo,ExpressionCategory.ModuleFunctions);case"getallocatedblocks":return keywordMap(ExpressionEntity.GetAllocatedBlocks,ExpressionCategory.ModuleFunctions);case"getandroidapilevel":return keywordMap(ExpressionEntity.GetAndroidApiLevel,ExpressionCategory.ModuleFunctions);case"getdefaultencoding":return keywordMap(ExpressionEntity.GetDefaultEncoding,ExpressionCategory.ModuleFunctions);case"getdlopenflags":return keywordMap(ExpressionEntity.GetDLOpenFlags,ExpressionCategory.ModuleFunctions);case"getfilesystemencoding":return keywordMap(ExpressionEntity.GetFileSystemEncoding,ExpressionCategory.ModuleFunctions);case"getfilesystemencodeerrors":return keywordMap(ExpressionEntity.GetFileSystemEncodeErrors,ExpressionCategory.ModuleFunctions);case"getrefcount":return keywordMap(ExpressionEntity.GetRefCount,ExpressionCategory.ModuleFunctions);case"getrecursionlimit":return keywordMap(ExpressionEntity.GetRecursionLimit,ExpressionCategory.ModuleFunctions);case"getsizeof":return keywordMap(ExpressionEntity.GetSizeOf,ExpressionCategory.ModuleFunctions);case"getswitchinterval":return keywordMap(ExpressionEntity.GetSwitchInterval,ExpressionCategory.ModuleFunctions);case"_getframe":return keywordMap(ExpressionEntity.GetFrame,ExpressionCategory.ModuleFunctions);case"getprofile":return keywordMap(ExpressionEntity.GetProfile,ExpressionCategory.ModuleFunctions);case"gettrace":return keywordMap(ExpressionEntity.GetTrace,ExpressionCategory.ModuleFunctions);case"getwindowsversion":return keywordMap(ExpressionEntity.GetWindowsVersion,ExpressionCategory.ModuleFunctions);case"get_asyncgen_hooks":return keywordMap(ExpressionEntity.GetAsyncGenHooks,ExpressionCategory.ModuleFunctions);case"get_coroutine_origin_tracking_depth":return keywordMap(ExpressionEntity.GetCoroutineOriginTrackingDepth,ExpressionCategory.ModuleFunctions);case"intern":return keywordMap(ExpressionEntity.Intern,ExpressionCategory.ModuleFunctions);case"is_finalizing":return keywordMap(ExpressionEntity.IsFinalizing,ExpressionCategory.ModuleFunctions);case"setdlopenflags":return keywordMap(ExpressionEntity.SetDLOpenFlags,ExpressionCategory.ModuleFunctions);case"setprofile":return keywordMap(ExpressionEntity.SetProfile,ExpressionCategory.ModuleFunctions);case"setrecursionlimit":return keywordMap(ExpressionEntity.SetRecursionLimit,ExpressionCategory.ModuleFunctions);case"setswitchinterval":return keywordMap(ExpressionEntity.SetSwitchInterval,ExpressionCategory.ModuleFunctions);case"settrace":return keywordMap(ExpressionEntity.SetTrace,ExpressionCategory.ModuleFunctions);case"set_asyncgen_hooks":return keywordMap(ExpressionEntity.SetAsyncgenHooks,ExpressionCategory.ModuleFunctions);case"_enablelegacywindowsfsencoding":return keywordMap(ExpressionEntity.EnableLegacyWindowsFSEncoding,ExpressionCategory.ModuleFunctions);case"abiflags":return keywordMap(ExpressionEntity.ABIFlags,ExpressionCategory.ModuleProperties);case"argv":return keywordMap(ExpressionEntity.Argv,ExpressionCategory.ModuleProperties);case"base_exec_prefix":return keywordMap(ExpressionEntity.BaseExecPrefix,ExpressionCategory.ModuleProperties);case"base_prefix":return keywordMap(ExpressionEntity.BasePrefix,ExpressionCategory.ModuleProperties);case"byte_order":return keywordMap(ExpressionEntity.ByteOrder,ExpressionCategory.ModuleProperties);case"built_in_module_names":return keywordMap(ExpressionEntity.BuiltInModuleNames,ExpressionCategory.ModuleProperties);case"copyright":return keywordMap(ExpressionEntity.Copyright,ExpressionCategory.ModuleProperties);case"dllhandle":return keywordMap(ExpressionEntity.DllHandle,ExpressionCategory.ModuleProperties);case"dont_write_bytecode":return keywordMap(ExpressionEntity.DontWriteBytecode,ExpressionCategory.ModuleProperties);case"pycache_prefix":return keywordMap(ExpressionEntity.PycachePrefix,ExpressionCategory.ModuleProperties);case"exec_prefix":return keywordMap(ExpressionEntity.ExecPrefix,ExpressionCategory.ModuleProperties);case"executable":return keywordMap(ExpressionEntity.Executable,ExpressionCategory.ModuleProperties);case"flags":return keywordMap(ExpressionEntity.Flags,ExpressionCategory.ModuleProperties);case"float_info":return keywordMap(ExpressionEntity.FloatInfo,ExpressionCategory.ModuleProperties);case"float_repr_style":return keywordMap(ExpressionEntity.FloatReprStyle,ExpressionCategory.ModuleProperties);case"hash_info":return keywordMap(ExpressionEntity.HashInfo,ExpressionCategory.ModuleProperties);case"hexversion":return keywordMap(ExpressionEntity.HexVersion,ExpressionCategory.ModuleProperties);case"implementation":return keywordMap(ExpressionEntity.Implementation,ExpressionCategory.ModuleProperties);case"int_info":return keywordMap(ExpressionEntity.IntInfo,ExpressionCategory.ModuleProperties);case"last_type":return keywordMap(ExpressionEntity.LastType,ExpressionCategory.ModuleProperties);case"last_value":return keywordMap(ExpressionEntity.LastValue,ExpressionCategory.ModuleProperties);case"last_traceback":return keywordMap(ExpressionEntity.LastTraceback,ExpressionCategory.ModuleProperties);case"maxsize":return keywordMap(ExpressionEntity.MaxSize,ExpressionCategory.ModuleProperties);case"maxunicode":return keywordMap(ExpressionEntity.MaxUnicode,ExpressionCategory.ModuleProperties);case"meta_path":return keywordMap(ExpressionEntity.MetaPath,ExpressionCategory.ModuleProperties);case"modules":return keywordMap(ExpressionEntity.Modules,ExpressionCategory.ModuleProperties);case"orig_argv":return keywordMap(ExpressionEntity.OrigArgv,ExpressionCategory.ModuleProperties);case"path":return keywordMap(ExpressionEntity.Path,ExpressionCategory.ModuleProperties);case"path_hooks":return keywordMap(ExpressionEntity.PathHooks,ExpressionCategory.ModuleProperties);case"path_importer_cache":return keywordMap(ExpressionEntity.PathImporterCache,ExpressionCategory.ModuleProperties);case"platform":return keywordMap(ExpressionEntity.Platform,ExpressionCategory.ModuleProperties);case"prefix":return keywordMap(ExpressionEntity.Prefix,ExpressionCategory.ModuleProperties);case"ps1":return keywordMap(ExpressionEntity.PS1,ExpressionCategory.ModuleProperties);case"ps2":return keywordMap(ExpressionEntity.PS2,ExpressionCategory.ModuleProperties);case"stdin":return keywordMap(ExpressionEntity.StdIn,ExpressionCategory.ModuleProperties);case"stdout":return keywordMap(ExpressionEntity.StdOut,ExpressionCategory.ModuleProperties);case"stderr":return keywordMap(ExpressionEntity.StdErr,ExpressionCategory.ModuleProperties);case"stdlib_module_names":return keywordMap(ExpressionEntity.StdLibModuleNames,ExpressionCategory.ModuleProperties);case"thread_info":return keywordMap(ExpressionEntity.ThreadInfo,ExpressionCategory.ModuleProperties);case"tracebacklimit":return keywordMap(ExpressionEntity.TracebackLimit,ExpressionCategory.ModuleProperties);case"version":return keywordMap(ExpressionEntity.Version,ExpressionCategory.ModuleProperties);case"api_version":return keywordMap(ExpressionEntity.ApiVersion,ExpressionCategory.ModuleProperties);case"version_info":return keywordMap(ExpressionEntity.VersionInfo,ExpressionCategory.ModuleProperties);case"warnoptions":return keywordMap(ExpressionEntity.WarnOptions,ExpressionCategory.ModuleProperties);case"winver":return keywordMap(ExpressionEntity.WinVer,ExpressionCategory.ModuleProperties);case"_xoptions":return keywordMap(ExpressionEntity.XOptions,ExpressionCategory.ModuleProperties);default:return keywordMap(ExpressionEntity.Unknown,ExpressionCategory.Unknown)}};exports.keywordLookup=keywordLookup;var typeLookup=function(e){switch(e){case"str":return keywordMap(ExpressionEntity.StrType,ExpressionCategory.Types);case"int":return keywordMap(ExpressionEntity.IntType,ExpressionCategory.Types);case"float":return keywordMap(ExpressionEntity.FloatType,ExpressionCategory.Types);case"bool":return keywordMap(ExpressionEntity.BoolType,ExpressionCategory.Types);case"list":return keywordMap(ExpressionEntity.ListType,ExpressionCategory.Types);case"set":return keywordMap(ExpressionEntity.SetType,ExpressionCategory.Types);case"dict":return keywordMap(ExpressionEntity.DictType,ExpressionCategory.Types);case"tuple":return keywordMap(ExpressionEntity.TupleType,ExpressionCategory.Types);default:return keywordMap(ExpressionEntity.Unknown,ExpressionCategory.Unknown)}};exports.typeLookup=typeLookup;var UsageType=function(e){_inherits(n,_enum["default"]);var t=_createSuper(n);function n(){return _classCallCheck(this,n),t.apply(this,arguments)}return _createClass(n)}();exports.UsageType=UsageType,_defineProperty(UsageType,"AssignmentModification",new UsageType("assignmentOrMod")),_defineProperty(UsageType,"ArgValue",new UsageType("argValue")),_defineProperty(UsageType,"ReturnValue",new UsageType("returnValue")),_defineProperty(UsageType,"IndexOrKey",new UsageType("indexOrKey")),_defineProperty(UsageType,"OtherOperation",new UsageType("otherOperation")),_defineProperty(UsageType,"None",new UsageType("not used"));var ExpressionCategory=function(e){_inherits(n,_enum["default"]);var t=_createSuper(n);function n(){return _classCallCheck(this,n),t.apply(this,arguments)}return _createClass(n)}();exports.ExpressionCategory=ExpressionCategory,_defineProperty(ExpressionCategory,"BlockDefinitions",new ExpressionCategory("BlockDefinitions")),_defineProperty(ExpressionCategory,"LogicalOperators",new ExpressionCategory("LogicalOperators")),_defineProperty(ExpressionCategory,"Types",new ExpressionCategory("Types")),_defineProperty(ExpressionCategory,"MathsOperators",new ExpressionCategory("MathsOperators")),_defineProperty(ExpressionCategory,"ComparisonOperators",new ExpressionCategory("ComparisonOperators")),_defineProperty(ExpressionCategory,"OtherKeywords",new ExpressionCategory("OtherKeywords")),_defineProperty(ExpressionCategory,"BuiltInFunctions",new ExpressionCategory("BuiltInFunctions")),_defineProperty(ExpressionCategory,"BuiltInMethods",new ExpressionCategory("BuiltInMethods")),_defineProperty(ExpressionCategory,"OtherMethods",new ExpressionCategory("OtherMethods")),_defineProperty(ExpressionCategory,"Identifiers",new ExpressionCategory("Identifiers")),_defineProperty(ExpressionCategory,"MagicMethods",new ExpressionCategory("MagicMethods")),_defineProperty(ExpressionCategory,"SpecialVariables",new ExpressionCategory("SpecialVariables")),_defineProperty(ExpressionCategory,"Properties",new ExpressionCategory("Properties")),_defineProperty(ExpressionCategory,"BuiltInExceptions",new ExpressionCategory("BuiltInExceptions")),_defineProperty(ExpressionCategory,"Literals",new ExpressionCategory("Literals")),_defineProperty(ExpressionCategory,"CompoundTypes",new ExpressionCategory("CompoundTypes")),_defineProperty(ExpressionCategory,"Other",new ExpressionCategory("Other")),_defineProperty(ExpressionCategory,"Comment",new ExpressionCategory("Comment")),_defineProperty(ExpressionCategory,"Unknown",new ExpressionCategory("Unknown")),_defineProperty(ExpressionCategory,"BuiltInModules",new ExpressionCategory("BuiltInModules")),_defineProperty(ExpressionCategory,"ModuleFunctions",new ExpressionCategory("ModuleFunctions")),_defineProperty(ExpressionCategory,"ModuleProperties",new ExpressionCategory("ModuleProperties")),_defineProperty(ExpressionCategory,"ImportedEntities",new ExpressionCategory("ImportedEntities")),_defineProperty(ExpressionCategory,"TypeHint",new ExpressionCategory("TypeHint"));var ExpressionEntity=function(e){_inherits(n,_enum["default"]);var t=_createSuper(n);function n(){return _classCallCheck(this,n),t.apply(this,arguments)}return _createClass(n)}();exports.ExpressionEntity=ExpressionEntity,_defineProperty(ExpressionEntity,"ClassDefinition",new ExpressionEntity("class")),_defineProperty(ExpressionEntity,"FunctionDefinition",new ExpressionEntity("def")),_defineProperty(ExpressionEntity,"ElifDefinition",new ExpressionEntity("elif")),_defineProperty(ExpressionEntity,"ElseDefinition",new ExpressionEntity("else")),_defineProperty(ExpressionEntity,"ExceptDefinition",new ExpressionEntity("except")),_defineProperty(ExpressionEntity,"FinallyDefinition",new ExpressionEntity("finally")),_defineProperty(ExpressionEntity,"ForDefinition",new ExpressionEntity("for")),_defineProperty(ExpressionEntity,"IfDefinition",new ExpressionEntity("if")),_defineProperty(ExpressionEntity,"LambdaDefinition",new ExpressionEntity("lambda")),_defineProperty(ExpressionEntity,"TryDefinition",new ExpressionEntity("try")),_defineProperty(ExpressionEntity,"WhileDefinition",new ExpressionEntity("while")),_defineProperty(ExpressionEntity,"DocumentDefinition",new ExpressionEntity("document")),_defineProperty(ExpressionEntity,"ListComprehension",new ExpressionEntity("listComprehension")),_defineProperty(ExpressionEntity,"AndOperator",new ExpressionEntity("and")),_defineProperty(ExpressionEntity,"NotOperator",new ExpressionEntity("not")),_defineProperty(ExpressionEntity,"OrOperator",new ExpressionEntity("or")),_defineProperty(ExpressionEntity,"FalseType",new ExpressionEntity("False")),_defineProperty(ExpressionEntity,"NoneType",new ExpressionEntity("None")),_defineProperty(ExpressionEntity,"TrueType",new ExpressionEntity("True")),_defineProperty(ExpressionEntity,"AsKeyword",new ExpressionEntity("AsKeyword")),_defineProperty(ExpressionEntity,"AssertKeyword",new ExpressionEntity("AssertKeyword")),_defineProperty(ExpressionEntity,"BreakKeyword",new ExpressionEntity("BreakKeyword")),_defineProperty(ExpressionEntity,"ContinueKeyword",new ExpressionEntity("continue")),_defineProperty(ExpressionEntity,"DelKeyword",new ExpressionEntity("del")),_defineProperty(ExpressionEntity,"FromKeyword",new ExpressionEntity("from")),_defineProperty(ExpressionEntity,"ImportKeyword",new ExpressionEntity("import")),_defineProperty(ExpressionEntity,"InKeyword",new ExpressionEntity("in")),_defineProperty(ExpressionEntity,"IsKeyword",new ExpressionEntity("is")),_defineProperty(ExpressionEntity,"PassKeyword",new ExpressionEntity("pass")),_defineProperty(ExpressionEntity,"RaiseKeyword",new ExpressionEntity("raise")),_defineProperty(ExpressionEntity,"ReturnKeyword",new ExpressionEntity("return")),_defineProperty(ExpressionEntity,"WithKeyword",new ExpressionEntity("with")),_defineProperty(ExpressionEntity,"YieldKeyword",new ExpressionEntity("yield")),_defineProperty(ExpressionEntity,"GlobalKeyword",new ExpressionEntity("global")),_defineProperty(ExpressionEntity,"AddOperator",new ExpressionEntity("+")),_defineProperty(ExpressionEntity,"SubtractOperator",new ExpressionEntity("-")),_defineProperty(ExpressionEntity,"MultiplyOperator",new ExpressionEntity("*")),_defineProperty(ExpressionEntity,"DivideOperator",new ExpressionEntity("/")),_defineProperty(ExpressionEntity,"ModulusOperator",new ExpressionEntity("%")),_defineProperty(ExpressionEntity,"ExponentOperator",new ExpressionEntity("**")),_defineProperty(ExpressionEntity,"IntDivideOperator",new ExpressionEntity("//")),_defineProperty(ExpressionEntity,"AssignmentOperator",new ExpressionEntity("=")),_defineProperty(ExpressionEntity,"IncrementOperator",new ExpressionEntity("+=")),_defineProperty(ExpressionEntity,"DecrementOperator",new ExpressionEntity("-=")),_defineProperty(ExpressionEntity,"MultiplyAssignOperator",new ExpressionEntity("*=")),_defineProperty(ExpressionEntity,"DivideAssignOperator",new ExpressionEntity("/=")),_defineProperty(ExpressionEntity,"RemainderAssignOperator",new ExpressionEntity("%=")),_defineProperty(ExpressionEntity,"IntDivideAssignOperator",new ExpressionEntity("//=")),_defineProperty(ExpressionEntity,"ExponentAssignOperator",new ExpressionEntity("**=")),_defineProperty(ExpressionEntity,"EqualOperator",new ExpressionEntity("==")),_defineProperty(ExpressionEntity,"NotEqualOperator",new ExpressionEntity("!=")),_defineProperty(ExpressionEntity,"GreaterThanOperator",new ExpressionEntity(">")),_defineProperty(ExpressionEntity,"LessThanOperator",new ExpressionEntity("<")),_defineProperty(ExpressionEntity,"GreaterThanOrEqualOperator",new ExpressionEntity(">=")),_defineProperty(ExpressionEntity,"LessThanOrEqualOperator",new ExpressionEntity("<=")),_defineProperty(ExpressionEntity,"TypeHintReturn",new ExpressionEntity("->")),_defineProperty(ExpressionEntity,"AbsFunction",new ExpressionEntity("abs")),_defineProperty(ExpressionEntity,"AllFunction",new ExpressionEntity("all")),_defineProperty(ExpressionEntity,"AnyFunction",new ExpressionEntity("any")),_defineProperty(ExpressionEntity,"AsciiFunction",new ExpressionEntity("ascii")),_defineProperty(ExpressionEntity,"AssertFunction",new ExpressionEntity("assert")),_defineProperty(ExpressionEntity,"BinFunction",new ExpressionEntity("bin")),_defineProperty(ExpressionEntity,"BoolFunction",new ExpressionEntity("bool")),_defineProperty(ExpressionEntity,"CallableFunction",new ExpressionEntity("callable")),_defineProperty(ExpressionEntity,"ChrFunction",new ExpressionEntity("chr")),_defineProperty(ExpressionEntity,"DictFunction",new ExpressionEntity("dict")),_defineProperty(ExpressionEntity,"DivModFunction",new ExpressionEntity("divmod")),_defineProperty(ExpressionEntity,"EnumerateFunction",new ExpressionEntity("enumerate")),_defineProperty(ExpressionEntity,"EvalFunction",new ExpressionEntity("eval")),_defineProperty(ExpressionEntity,"ExecFunction",new ExpressionEntity("exec")),_defineProperty(ExpressionEntity,"ExitFunction",new ExpressionEntity("exit")),_defineProperty(ExpressionEntity,"FilterFunction",new ExpressionEntity("filter")),_defineProperty(ExpressionEntity,"FloatFunction",new ExpressionEntity("float")),_defineProperty(ExpressionEntity,"FormatFunction",new ExpressionEntity("format")),_defineProperty(ExpressionEntity,"GetAttrFunction",new ExpressionEntity("getattr")),_defineProperty(ExpressionEntity,"GlobalsFunction",new ExpressionEntity("globals")),_defineProperty(ExpressionEntity,"HasAttrFunction",new ExpressionEntity("hasattr")),_defineProperty(ExpressionEntity,"InputFunction",new ExpressionEntity("input")),_defineProperty(ExpressionEntity,"IntFunction",new ExpressionEntity("int")),_defineProperty(ExpressionEntity,"IsInstanceFunction",new ExpressionEntity("isinstance")),_defineProperty(ExpressionEntity,"LenFunction",new ExpressionEntity("len")),_defineProperty(ExpressionEntity,"ListFunction",new ExpressionEntity("list")),_defineProperty(ExpressionEntity,"MapFunction",new ExpressionEntity("map")),_defineProperty(ExpressionEntity,"MaxFunction",new ExpressionEntity("max")),_defineProperty(ExpressionEntity,"MinFunction",new ExpressionEntity("min")),_defineProperty(ExpressionEntity,"OpenFunction",new ExpressionEntity("open")),_defineProperty(ExpressionEntity,"OrdFunction",new ExpressionEntity("ord")),_defineProperty(ExpressionEntity,"PowFunction",new ExpressionEntity("pow")),_defineProperty(ExpressionEntity,"PrintFunction",new ExpressionEntity("print")),_defineProperty(ExpressionEntity,"QuitFunction",new ExpressionEntity("quit")),_defineProperty(ExpressionEntity,"RangeFunction",new ExpressionEntity("range")),_defineProperty(ExpressionEntity,"ReversedFunction",new ExpressionEntity("reversed")),_defineProperty(ExpressionEntity,"RoundFunction",new ExpressionEntity("round")),_defineProperty(ExpressionEntity,"SetFunction",new ExpressionEntity("set")),_defineProperty(ExpressionEntity,"SortedFunction",new ExpressionEntity("sorted")),_defineProperty(ExpressionEntity,"StrFunction",new ExpressionEntity("str")),_defineProperty(ExpressionEntity,"SumFunction",new ExpressionEntity("sum")),_defineProperty(ExpressionEntity,"TupleFunction",new ExpressionEntity("tuple")),_defineProperty(ExpressionEntity,"TypeFunction",new ExpressionEntity("type")),_defineProperty(ExpressionEntity,"ZipFunction",new ExpressionEntity("zip")),_defineProperty(ExpressionEntity,"Capitalize",new ExpressionEntity("capitalize")),_defineProperty(ExpressionEntity,"Casefold",new ExpressionEntity("casefold")),_defineProperty(ExpressionEntity,"Center",new ExpressionEntity("center")),_defineProperty(ExpressionEntity,"Count",new ExpressionEntity("count")),_defineProperty(ExpressionEntity,"Encode",new ExpressionEntity("encode")),_defineProperty(ExpressionEntity,"EndsWith",new ExpressionEntity("endswith")),_defineProperty(ExpressionEntity,"ExpandTabs",new ExpressionEntity("expandtabs")),_defineProperty(ExpressionEntity,"Find",new ExpressionEntity("find")),_defineProperty(ExpressionEntity,"Format",new ExpressionEntity("format")),_defineProperty(ExpressionEntity,"FormatMap",new ExpressionEntity("format_map")),_defineProperty(ExpressionEntity,"Index",new ExpressionEntity("index")),_defineProperty(ExpressionEntity,"IsAlnum",new ExpressionEntity("isalnum")),_defineProperty(ExpressionEntity,"IsAlpha",new ExpressionEntity("isalpha")),_defineProperty(ExpressionEntity,"IsAscii",new ExpressionEntity("isascii")),_defineProperty(ExpressionEntity,"IsDecimal",new ExpressionEntity("isdecimal")),_defineProperty(ExpressionEntity,"IsDigit",new ExpressionEntity("isdigit")),_defineProperty(ExpressionEntity,"IsIdentifier",new ExpressionEntity("isidentifier")),_defineProperty(ExpressionEntity,"IsLower",new ExpressionEntity("islower")),_defineProperty(ExpressionEntity,"IsNumeric",new ExpressionEntity("isnumeric")),_defineProperty(ExpressionEntity,"IsPrintable",new ExpressionEntity("isprintable")),_defineProperty(ExpressionEntity,"IsSpace",new ExpressionEntity("isspace")),_defineProperty(ExpressionEntity,"IsTitle",new ExpressionEntity("istitle")),_defineProperty(ExpressionEntity,"IsUpper",new ExpressionEntity("isupper")),_defineProperty(ExpressionEntity,"Join",new ExpressionEntity("join")),_defineProperty(ExpressionEntity,"LJust",new ExpressionEntity("ljust")),_defineProperty(ExpressionEntity,"Lower",new ExpressionEntity("lower")),_defineProperty(ExpressionEntity,"LStrip",new ExpressionEntity("lstrip")),_defineProperty(ExpressionEntity,"MakeTrans",new ExpressionEntity("maketrans")),_defineProperty(ExpressionEntity,"Partition",new ExpressionEntity("partition")),_defineProperty(ExpressionEntity,"Replace",new ExpressionEntity("replace")),_defineProperty(ExpressionEntity,"RFind",new ExpressionEntity("rfind")),_defineProperty(ExpressionEntity,"RIndex",new ExpressionEntity("rindex")),_defineProperty(ExpressionEntity,"RJust",new ExpressionEntity("rjust")),_defineProperty(ExpressionEntity,"RPartition",new ExpressionEntity("rpartition")),_defineProperty(ExpressionEntity,"RSplit",new ExpressionEntity("rsplit")),_defineProperty(ExpressionEntity,"RStrip",new ExpressionEntity("rstrip")),_defineProperty(ExpressionEntity,"Split",new ExpressionEntity("split")),_defineProperty(ExpressionEntity,"SplitLines",new ExpressionEntity("splitlines")),_defineProperty(ExpressionEntity,"StartsWith",new ExpressionEntity("startswith")),_defineProperty(ExpressionEntity,"Strip",new ExpressionEntity("strip")),_defineProperty(ExpressionEntity,"SwapCase",new ExpressionEntity("swapcase")),_defineProperty(ExpressionEntity,"Title",new ExpressionEntity("title")),_defineProperty(ExpressionEntity,"Translate",new ExpressionEntity("translate")),_defineProperty(ExpressionEntity,"Upper",new ExpressionEntity("upper")),_defineProperty(ExpressionEntity,"ZFill",new ExpressionEntity("zfill")),_defineProperty(ExpressionEntity,"Append",new ExpressionEntity("append")),_defineProperty(ExpressionEntity,"Clear",new ExpressionEntity("clear")),_defineProperty(ExpressionEntity,"Copy",new ExpressionEntity("copy")),_defineProperty(ExpressionEntity,"Extend",new ExpressionEntity("extend")),_defineProperty(ExpressionEntity,"Insert",new ExpressionEntity("insert")),_defineProperty(ExpressionEntity,"Pop",new ExpressionEntity("pop")),_defineProperty(ExpressionEntity,"Remove",new ExpressionEntity("remove")),_defineProperty(ExpressionEntity,"Reverse",new ExpressionEntity("reverse")),_defineProperty(ExpressionEntity,"Sort",new ExpressionEntity("sort")),_defineProperty(ExpressionEntity,"FromKeys",new ExpressionEntity("fromkeys")),_defineProperty(ExpressionEntity,"Get",new ExpressionEntity("get")),_defineProperty(ExpressionEntity,"Items",new ExpressionEntity("items")),_defineProperty(ExpressionEntity,"Keys",new ExpressionEntity("keys")),_defineProperty(ExpressionEntity,"PopItem",new ExpressionEntity("popitem")),_defineProperty(ExpressionEntity,"SetDefault",new ExpressionEntity("setdefault")),_defineProperty(ExpressionEntity,"Update",new ExpressionEntity("update")),_defineProperty(ExpressionEntity,"Values",new ExpressionEntity("values")),_defineProperty(ExpressionEntity,"Add",new ExpressionEntity("add")),_defineProperty(ExpressionEntity,"Difference",new ExpressionEntity("difference")),_defineProperty(ExpressionEntity,"DifferenceUpdate",new ExpressionEntity("difference_update")),_defineProperty(ExpressionEntity,"Discard",new ExpressionEntity("discard")),_defineProperty(ExpressionEntity,"Intersection",new ExpressionEntity("intersection")),_defineProperty(ExpressionEntity,"IntersectionUpdate",new ExpressionEntity("intersection_update")),_defineProperty(ExpressionEntity,"IsDisjoint",new ExpressionEntity("isdisjoint")),_defineProperty(ExpressionEntity,"IsSubset",new ExpressionEntity("issubset")),_defineProperty(ExpressionEntity,"IsSuperset",new ExpressionEntity("issuperset")),_defineProperty(ExpressionEntity,"SymmetricDifference",new ExpressionEntity("symmetric_difference")),_defineProperty(ExpressionEntity,"SymmetricDifferenceUpdate",new ExpressionEntity("symmetric_difference_update")),_defineProperty(ExpressionEntity,"Union",new ExpressionEntity("union")),_defineProperty(ExpressionEntity,"Close",new ExpressionEntity("close")),_defineProperty(ExpressionEntity,"Detach",new ExpressionEntity("detach")),_defineProperty(ExpressionEntity,"FileNo",new ExpressionEntity("fileno")),_defineProperty(ExpressionEntity,"Flush",new ExpressionEntity("flush")),_defineProperty(ExpressionEntity,"IsAtty",new ExpressionEntity("isatty")),_defineProperty(ExpressionEntity,"Read",new ExpressionEntity("read")),_defineProperty(ExpressionEntity,"Readable",new ExpressionEntity("readable")),_defineProperty(ExpressionEntity,"ReadLine",new ExpressionEntity("readline")),_defineProperty(ExpressionEntity,"ReadLines",new ExpressionEntity("readlines")),_defineProperty(ExpressionEntity,"Seek",new ExpressionEntity("seek")),_defineProperty(ExpressionEntity,"Seekable",new ExpressionEntity("seekable")),_defineProperty(ExpressionEntity,"Tell",new ExpressionEntity("tell")),_defineProperty(ExpressionEntity,"Truncate",new ExpressionEntity("truncate")),_defineProperty(ExpressionEntity,"Writable",new ExpressionEntity("writable")),_defineProperty(ExpressionEntity,"Write",new ExpressionEntity("write")),_defineProperty(ExpressionEntity,"WriteLines",new ExpressionEntity("writelines")),_defineProperty(ExpressionEntity,"Main",new ExpressionEntity("__main__")),_defineProperty(ExpressionEntity,"Cmp",new ExpressionEntity("__cmp__")),_defineProperty(ExpressionEntity,"Eq",new ExpressionEntity("__eq__")),_defineProperty(ExpressionEntity,"Ne",new ExpressionEntity("__ne__")),_defineProperty(ExpressionEntity,"Lt",new ExpressionEntity("__lt__")),_defineProperty(ExpressionEntity,"Gt",new ExpressionEntity("__gt__")),_defineProperty(ExpressionEntity,"Le",new ExpressionEntity("__le__")),_defineProperty(ExpressionEntity,"Ge",new ExpressionEntity("__ge__")),_defineProperty(ExpressionEntity,"Str",new ExpressionEntity("__str__")),_defineProperty(ExpressionEntity,"SpecialContains",new ExpressionEntity("__contains__")),_defineProperty(ExpressionEntity,"SpecialLen",new ExpressionEntity("__len__")),_defineProperty(ExpressionEntity,"Name",new ExpressionEntity("__name__")),_defineProperty(ExpressionEntity,"Self",new ExpressionEntity("__self__")),_defineProperty(ExpressionEntity,"Doc",new ExpressionEntity("__doc__")),_defineProperty(ExpressionEntity,"GetAttrVariable",new ExpressionEntity("__getattr__")),_defineProperty(ExpressionEntity,"SetAttrVariable",new ExpressionEntity("__setattr__")),_defineProperty(ExpressionEntity,"ClassVariable",new ExpressionEntity("__class__")),_defineProperty(ExpressionEntity,"R",new ExpressionEntity("r")),_defineProperty(ExpressionEntity,"F",new ExpressionEntity("f")),_defineProperty(ExpressionEntity,"Sep",new ExpressionEntity("sep")),_defineProperty(ExpressionEntity,"End",new ExpressionEntity("end")),_defineProperty(ExpressionEntity,"Dot",new ExpressionEntity(".")),_defineProperty(ExpressionEntity,"OpenParenthesis",new ExpressionEntity("(")),_defineProperty(ExpressionEntity,"CloseParenthesis",new ExpressionEntity(")")),_defineProperty(ExpressionEntity,"OpenSquareBracket",new ExpressionEntity("[")),_defineProperty(ExpressionEntity,"CloseSquareBracket",new ExpressionEntity("]")),_defineProperty(ExpressionEntity,"OpenBrace",new ExpressionEntity("{")),_defineProperty(ExpressionEntity,"CloseBrace",new ExpressionEntity("}")),_defineProperty(ExpressionEntity,"Comma",new ExpressionEntity(",")),_defineProperty(ExpressionEntity,"Colon",new ExpressionEntity(":")),_defineProperty(ExpressionEntity,"SingleQuote",new ExpressionEntity("'")),_defineProperty(ExpressionEntity,"DoubleQuote",new ExpressionEntity('"')),_defineProperty(ExpressionEntity,"MultiLineCommentDelimiter",new ExpressionEntity("'''")),_defineProperty(ExpressionEntity,"ImportAll",new ExpressionEntity("import all (*)")),_defineProperty(ExpressionEntity,"NamedImport",new ExpressionEntity("named import")),_defineProperty(ExpressionEntity,"ExceptionName",new ExpressionEntity("exceptionName")),_defineProperty(ExpressionEntity,"VariableName",new ExpressionEntity("variableName")),_defineProperty(ExpressionEntity,"FunctionName",new ExpressionEntity("functionName")),_defineProperty(ExpressionEntity,"MethodName",new ExpressionEntity("methodName")),_defineProperty(ExpressionEntity,"ClassName",new ExpressionEntity("className")),_defineProperty(ExpressionEntity,"PropertyName",new ExpressionEntity("propertyName")),_defineProperty(ExpressionEntity,"ModuleName",new ExpressionEntity("moduleName")),_defineProperty(ExpressionEntity,"IntLiteral",new ExpressionEntity("intLiteral")),_defineProperty(ExpressionEntity,"StringLiteral",new ExpressionEntity("stringLiteral")),_defineProperty(ExpressionEntity,"ContinuationLine",new ExpressionEntity("continuationLine")),_defineProperty(ExpressionEntity,"Separator",new ExpressionEntity("separator")),_defineProperty(ExpressionEntity,"FloatLiteral",new ExpressionEntity("floatLiteral")),_defineProperty(ExpressionEntity,"SingleLineComment",new ExpressionEntity("singleLineComment")),_defineProperty(ExpressionEntity,"MultiLineComment",new ExpressionEntity("multilineComment")),_defineProperty(ExpressionEntity,"TypeHint",new ExpressionEntity("typeHint")),_defineProperty(ExpressionEntity,"StrType",new ExpressionEntity("strType")),_defineProperty(ExpressionEntity,"IntType",new ExpressionEntity("intType")),_defineProperty(ExpressionEntity,"FloatType",new ExpressionEntity("floatType")),_defineProperty(ExpressionEntity,"BoolType",new ExpressionEntity("boolType")),_defineProperty(ExpressionEntity,"ListType",new ExpressionEntity("listType")),_defineProperty(ExpressionEntity,"SetType",new ExpressionEntity("setType")),_defineProperty(ExpressionEntity,"DictType",new ExpressionEntity("dictType")),_defineProperty(ExpressionEntity,"TupleType",new ExpressionEntity("tupleType")),_defineProperty(ExpressionEntity,"ListDefinition",new ExpressionEntity("listDefinition")),_defineProperty(ExpressionEntity,"TupleDefinition",new ExpressionEntity("tupleDefinition")),_defineProperty(ExpressionEntity,"SetDefinition",new ExpressionEntity("setDefinition")),_defineProperty(ExpressionEntity,"DictDefinition",new ExpressionEntity("dictDefinition")),_defineProperty(ExpressionEntity,"IndexKey",new ExpressionEntity("indexKey")),_defineProperty(ExpressionEntity,"Slice",new ExpressionEntity("slice")),_defineProperty(ExpressionEntity,"Unknown",new ExpressionEntity("unknown")),_defineProperty(ExpressionEntity,"RandomModule",new ExpressionEntity("randomModule")),_defineProperty(ExpressionEntity,"MathModule",new ExpressionEntity("mathModule")),_defineProperty(ExpressionEntity,"StringModule",new ExpressionEntity("stringModule")),_defineProperty(ExpressionEntity,"ReModule",new ExpressionEntity("reModule")),_defineProperty(ExpressionEntity,"Pattern",new ExpressionEntity("Pattern")),_defineProperty(ExpressionEntity,"Match",new ExpressionEntity("Match")),_defineProperty(ExpressionEntity,"Sys",new ExpressionEntity("sys")),_defineProperty(ExpressionEntity,"Seed",new ExpressionEntity("seed")),_defineProperty(ExpressionEntity,"GetState",new ExpressionEntity("getstate")),_defineProperty(ExpressionEntity,"SetState",new ExpressionEntity("setstate")),_defineProperty(ExpressionEntity,"GetRandBits",new ExpressionEntity("getrandbits")),_defineProperty(ExpressionEntity,"RandRange",new ExpressionEntity("randrange")),_defineProperty(ExpressionEntity,"RandInt",new ExpressionEntity("randint")),_defineProperty(ExpressionEntity,"Choice",new ExpressionEntity("choice")),_defineProperty(ExpressionEntity,"Choices",new ExpressionEntity("choices")),_defineProperty(ExpressionEntity,"Shuffle",new ExpressionEntity("shuffle")),_defineProperty(ExpressionEntity,"Sample",new ExpressionEntity("sample")),_defineProperty(ExpressionEntity,"RandomMethod",new ExpressionEntity("random")),_defineProperty(ExpressionEntity,"Uniform",new ExpressionEntity("uniform")),_defineProperty(ExpressionEntity,"Triangular",new ExpressionEntity("triangular")),_defineProperty(ExpressionEntity,"BetaVariate",new ExpressionEntity("betavariate")),_defineProperty(ExpressionEntity,"ExpoVariate",new ExpressionEntity("expovariate")),_defineProperty(ExpressionEntity,"GammaVariate",new ExpressionEntity("gammavariate")),_defineProperty(ExpressionEntity,"Gauss",new ExpressionEntity("gauss")),_defineProperty(ExpressionEntity,"LogNormVariate",new ExpressionEntity("lognormvariate")),_defineProperty(ExpressionEntity,"NormalVariate",new ExpressionEntity("normalvariate")),_defineProperty(ExpressionEntity,"VonMisesVariate",new ExpressionEntity("vonmisesvariate")),_defineProperty(ExpressionEntity,"ParetoVariate",new ExpressionEntity("paretovariate")),_defineProperty(ExpressionEntity,"WeibullVariate",new ExpressionEntity("weibullvariate")),_defineProperty(ExpressionEntity,"Acos",new ExpressionEntity("acos")),_defineProperty(ExpressionEntity,"Acosh",new ExpressionEntity("acosh")),_defineProperty(ExpressionEntity,"Asin",new ExpressionEntity("asin")),_defineProperty(ExpressionEntity,"Asinh",new ExpressionEntity("asinh")),_defineProperty(ExpressionEntity,"Atan",new ExpressionEntity("atan")),_defineProperty(ExpressionEntity,"Atan2",new ExpressionEntity("atan2")),_defineProperty(ExpressionEntity,"Atanh",new ExpressionEntity("atanh")),_defineProperty(ExpressionEntity,"Ceil",new ExpressionEntity("ceil")),_defineProperty(ExpressionEntity,"Comb",new ExpressionEntity("comb")),_defineProperty(ExpressionEntity,"CopySign",new ExpressionEntity("copysign")),_defineProperty(ExpressionEntity,"Cos",new ExpressionEntity("cos")),_defineProperty(ExpressionEntity,"Cosh",new ExpressionEntity("cosh")),_defineProperty(ExpressionEntity,"Degrees",new ExpressionEntity("degrees")),_defineProperty(ExpressionEntity,"Dist",new ExpressionEntity("dist")),_defineProperty(ExpressionEntity,"Erf",new ExpressionEntity("erf")),_defineProperty(ExpressionEntity,"Erfc",new ExpressionEntity("erfc")),_defineProperty(ExpressionEntity,"Exp",new ExpressionEntity("exp")),_defineProperty(ExpressionEntity,"Expm1",new ExpressionEntity("expm1")),_defineProperty(ExpressionEntity,"Fabs",new ExpressionEntity("fabs")),_defineProperty(ExpressionEntity,"Factorial",new ExpressionEntity("factorial")),_defineProperty(ExpressionEntity,"Floor",new ExpressionEntity("floor")),_defineProperty(ExpressionEntity,"Fmod",new ExpressionEntity("fmod")),_defineProperty(ExpressionEntity,"Frexp",new ExpressionEntity("frexp")),_defineProperty(ExpressionEntity,"Fsum",new ExpressionEntity("fsum")),_defineProperty(ExpressionEntity,"Gamma",new ExpressionEntity("gamma")),_defineProperty(ExpressionEntity,"Gcd",new ExpressionEntity("gcd")),_defineProperty(ExpressionEntity,"Hypot",new ExpressionEntity("hypot")),_defineProperty(ExpressionEntity,"IsClose",new ExpressionEntity("isclose")),_defineProperty(ExpressionEntity,"IsFinite",new ExpressionEntity("isfinite")),_defineProperty(ExpressionEntity,"IsInf",new ExpressionEntity("isinf")),_defineProperty(ExpressionEntity,"IsNaN",new ExpressionEntity("isnan")),_defineProperty(ExpressionEntity,"ISqrt",new ExpressionEntity("isqrt")),_defineProperty(ExpressionEntity,"Ldexp",new ExpressionEntity("ldexp")),_defineProperty(ExpressionEntity,"LGamma",new ExpressionEntity("lgamma")),_defineProperty(ExpressionEntity,"Log",new ExpressionEntity("log")),_defineProperty(ExpressionEntity,"Log10",new ExpressionEntity("log10")),_defineProperty(ExpressionEntity,"Log1P",new ExpressionEntity("log1p")),_defineProperty(ExpressionEntity,"Log2",new ExpressionEntity("log2")),_defineProperty(ExpressionEntity,"Perm",new ExpressionEntity("perm")),_defineProperty(ExpressionEntity,"Pow",new ExpressionEntity("pow")),_defineProperty(ExpressionEntity,"Prod",new ExpressionEntity("prod")),_defineProperty(ExpressionEntity,"Radians",new ExpressionEntity("radians")),_defineProperty(ExpressionEntity,"Remainder",new ExpressionEntity("remainder")),_defineProperty(ExpressionEntity,"Sin",new ExpressionEntity("sin")),_defineProperty(ExpressionEntity,"Sinh",new ExpressionEntity("sinh")),_defineProperty(ExpressionEntity,"Sqrt",new ExpressionEntity("sqrt")),_defineProperty(ExpressionEntity,"Tan",new ExpressionEntity("tan")),_defineProperty(ExpressionEntity,"Tanh",new ExpressionEntity("tanh")),_defineProperty(ExpressionEntity,"Trunc",new ExpressionEntity("trunc")),_defineProperty(ExpressionEntity,"E",new ExpressionEntity("e")),_defineProperty(ExpressionEntity,"Inf",new ExpressionEntity("inf")),_defineProperty(ExpressionEntity,"Nan",new ExpressionEntity("nan")),_defineProperty(ExpressionEntity,"Pi",new ExpressionEntity("pi")),_defineProperty(ExpressionEntity,"Tau",new ExpressionEntity("tau")),_defineProperty(ExpressionEntity,"AsciiLetters",new ExpressionEntity("ascii_letters")),_defineProperty(ExpressionEntity,"AsciiLowercase",new ExpressionEntity("ascii_lowercase")),_defineProperty(ExpressionEntity,"AsciiUppercase",new ExpressionEntity("ascii_uppercase")),_defineProperty(ExpressionEntity,"Digits",new ExpressionEntity("digits")),_defineProperty(ExpressionEntity,"Hexdigits",new ExpressionEntity("hexdigits")),_defineProperty(ExpressionEntity,"Octdigits",new ExpressionEntity("octdigits")),_defineProperty(ExpressionEntity,"Punctuation",new ExpressionEntity("punctuation")),_defineProperty(ExpressionEntity,"Printable",new ExpressionEntity("printable")),_defineProperty(ExpressionEntity,"Whitespace",new ExpressionEntity("whitespace")),_defineProperty(ExpressionEntity,"Formatter",new ExpressionEntity("Formatter")),_defineProperty(ExpressionEntity,"Template",new ExpressionEntity("Template")),_defineProperty(ExpressionEntity,"Capwords",new ExpressionEntity("capwords")),_defineProperty(ExpressionEntity,"ReA",new ExpressionEntity("A")),_defineProperty(ExpressionEntity,"ReASCII",new ExpressionEntity("ASCII")),_defineProperty(ExpressionEntity,"ReDebug",new ExpressionEntity("DEBUG")),_defineProperty(ExpressionEntity,"ReI",new ExpressionEntity("I")),_defineProperty(ExpressionEntity,"ReIGNORECASE",new ExpressionEntity("IGNORECASE")),_defineProperty(ExpressionEntity,"ReL",new ExpressionEntity("L")),_defineProperty(ExpressionEntity,"ReLOCALE",new ExpressionEntity("LOCALE")),_defineProperty(ExpressionEntity,"ReM",new ExpressionEntity("M")),_defineProperty(ExpressionEntity,"ReMULTILINE",new ExpressionEntity("MULTILINE")),_defineProperty(ExpressionEntity,"ReS",new ExpressionEntity("S")),_defineProperty(ExpressionEntity,"ReDOTALL",new ExpressionEntity("DOTALL")),_defineProperty(ExpressionEntity,"ReX",new ExpressionEntity("X")),_defineProperty(ExpressionEntity,"ReVERBOSE",new ExpressionEntity("VERBOSE")),_defineProperty(ExpressionEntity,"Compile",new ExpressionEntity("compile")),_defineProperty(ExpressionEntity,"Search",new ExpressionEntity("search")),_defineProperty(ExpressionEntity,"Match",new ExpressionEntity("match")),_defineProperty(ExpressionEntity,"FullMatch",new ExpressionEntity("fullmatch")),_defineProperty(ExpressionEntity,"FindAll",new ExpressionEntity("findall")),_defineProperty(ExpressionEntity,"FindIter",new ExpressionEntity("finditer")),_defineProperty(ExpressionEntity,"Sub",new ExpressionEntity("sub")),_defineProperty(ExpressionEntity,"SubN",new ExpressionEntity("subn")),_defineProperty(ExpressionEntity,"Escape",new ExpressionEntity("escape")),_defineProperty(ExpressionEntity,"Purge",new ExpressionEntity("purge")),_defineProperty(ExpressionEntity,"AddAuditHook",new ExpressionEntity("addaudithook")),_defineProperty(ExpressionEntity,"Audit",new ExpressionEntity("audit")),_defineProperty(ExpressionEntity,"CallTracing",new ExpressionEntity("call_tracing")),_defineProperty(ExpressionEntity,"ClearTypeCache",new ExpressionEntity("_clear_type_cache")),_defineProperty(ExpressionEntity,"CurrentFrames",new ExpressionEntity("_current_frames")),_defineProperty(ExpressionEntity,"CurrentExceptions",new ExpressionEntity("_current_exceptions")),_defineProperty(ExpressionEntity,"BreakpointHook",new ExpressionEntity("breakpointhook")),_defineProperty(ExpressionEntity,"DebugMallocStats",new ExpressionEntity("_debugmallocstats")),_defineProperty(ExpressionEntity,"DisplayHook",new ExpressionEntity("displayhook")),_defineProperty(ExpressionEntity,"ExceptHook",new ExpressionEntity("excepthook")),_defineProperty(ExpressionEntity,"ExcInfo",new ExpressionEntity("exc_info")),_defineProperty(ExpressionEntity,"SysExit",new ExpressionEntity("exit")),_defineProperty(ExpressionEntity,"GetAllocatedBlocks",new ExpressionEntity("getallocatedblocks")),_defineProperty(ExpressionEntity,"GetAndroidApiLevel",new ExpressionEntity("getandroidapilevel")),_defineProperty(ExpressionEntity,"GetDefaultEncoding",new ExpressionEntity("getdefaultencoding")),_defineProperty(ExpressionEntity,"GetDLOpenFlags",new ExpressionEntity("getdlopenflags")),_defineProperty(ExpressionEntity,"GetFileSystemEncoding",new ExpressionEntity("getfilesystemencoding")),_defineProperty(ExpressionEntity,"GetFileSystemEncodeErrors",new ExpressionEntity("getfilesystemencodeerrors")),_defineProperty(ExpressionEntity,"GetRefCount",new ExpressionEntity("getrefcount")),_defineProperty(ExpressionEntity,"GetRecursionLimit",new ExpressionEntity("getrecursionlimit")),_defineProperty(ExpressionEntity,"GetSizeOf",new ExpressionEntity("getsizeof")),_defineProperty(ExpressionEntity,"GetSwitchInterval",new ExpressionEntity("getswitchinterval")),_defineProperty(ExpressionEntity,"GetFrame",new ExpressionEntity("_getframe")),_defineProperty(ExpressionEntity,"GetProfile",new ExpressionEntity("getprofile")),_defineProperty(ExpressionEntity,"GetTrace",new ExpressionEntity("gettrace")),_defineProperty(ExpressionEntity,"GetWindowsVersion",new ExpressionEntity("getwindowsversion")),_defineProperty(ExpressionEntity,"GetAsyncGenHooks",new ExpressionEntity("get_asyncgen_hooks")),_defineProperty(ExpressionEntity,"GetCoroutineOriginTrackingDepth",new ExpressionEntity("get_coroutine_origin_tracking_depth")),_defineProperty(ExpressionEntity,"Intern",new ExpressionEntity("intern")),_defineProperty(ExpressionEntity,"IsFinalizing",new ExpressionEntity("is_finalizing")),_defineProperty(ExpressionEntity,"SetDLOpenFlags",new ExpressionEntity("setdlopenflags")),_defineProperty(ExpressionEntity,"SetProfile",new ExpressionEntity("setprofile")),_defineProperty(ExpressionEntity,"SetRecursionLimit",new ExpressionEntity("setrecursionlimit")),_defineProperty(ExpressionEntity,"SetSwitchInterval",new ExpressionEntity("setswitchinterval")),_defineProperty(ExpressionEntity,"SetTrace",new ExpressionEntity("settrace")),_defineProperty(ExpressionEntity,"SetAsyncgenHooks",new ExpressionEntity("set_asyncgen_hooks")),_defineProperty(ExpressionEntity,"EnableLegacyWindowsFSEncoding",new ExpressionEntity("_enablelegacywindowsfsencoding")),_defineProperty(ExpressionEntity,"ABIFlags",new ExpressionEntity("abiflags")),_defineProperty(ExpressionEntity,"Argv",new ExpressionEntity("argv")),_defineProperty(ExpressionEntity,"BaseExecPrefix",new ExpressionEntity("base_exec_prefix")),_defineProperty(ExpressionEntity,"BasePrefix",new ExpressionEntity("base_prefix")),_defineProperty(ExpressionEntity,"ByteOrder",new ExpressionEntity("byte_order")),_defineProperty(ExpressionEntity,"BuiltInModuleNames",new ExpressionEntity("built_in_module_names")),_defineProperty(ExpressionEntity,"Copyright",new ExpressionEntity("copyright")),_defineProperty(ExpressionEntity,"DllHandle",new ExpressionEntity("dllhandle")),_defineProperty(ExpressionEntity,"DontWriteBytecode",new ExpressionEntity("dont_write_bytecode")),_defineProperty(ExpressionEntity,"PycachePrefix",new ExpressionEntity("pycache_prefix")),_defineProperty(ExpressionEntity,"ExecPrefix",new ExpressionEntity("exec_prefix")),_defineProperty(ExpressionEntity,"Executable",new ExpressionEntity("executable")),_defineProperty(ExpressionEntity,"Flags",new ExpressionEntity("flags")),_defineProperty(ExpressionEntity,"FloatInfo",new ExpressionEntity("float_info")),_defineProperty(ExpressionEntity,"FloatReprStyle",new ExpressionEntity("float_repr_style")),_defineProperty(ExpressionEntity,"HashInfo",new ExpressionEntity("hash_info")),_defineProperty(ExpressionEntity,"HexVersion",new ExpressionEntity("hexversion")),_defineProperty(ExpressionEntity,"Implementation",new ExpressionEntity("implementation")),_defineProperty(ExpressionEntity,"IntInfo",new ExpressionEntity("int_info")),_defineProperty(ExpressionEntity,"LastType",new ExpressionEntity("last_type")),_defineProperty(ExpressionEntity,"LastValue",new ExpressionEntity("last_value")),_defineProperty(ExpressionEntity,"LastTraceback",new ExpressionEntity("last_traceback")),_defineProperty(ExpressionEntity,"MaxSize",new ExpressionEntity("maxsize")),_defineProperty(ExpressionEntity,"MaxUnicode",new ExpressionEntity("maxunicode")),_defineProperty(ExpressionEntity,"MetaPath",new ExpressionEntity("meta_path")),_defineProperty(ExpressionEntity,"Modules",new ExpressionEntity("modules")),_defineProperty(ExpressionEntity,"OrigArgv",new ExpressionEntity("orig_argv")),_defineProperty(ExpressionEntity,"Path",new ExpressionEntity("path")),_defineProperty(ExpressionEntity,"PathHooks",new ExpressionEntity("path_hooks")),_defineProperty(ExpressionEntity,"PathImporterCache",new ExpressionEntity("path_importer_cache")),_defineProperty(ExpressionEntity,"Platform",new ExpressionEntity("platform")),_defineProperty(ExpressionEntity,"Prefix",new ExpressionEntity("prefix")),_defineProperty(ExpressionEntity,"PS1",new ExpressionEntity("ps1")),_defineProperty(ExpressionEntity,"PS2",new ExpressionEntity("ps2")),_defineProperty(ExpressionEntity,"StdIn",new ExpressionEntity("stdin")),_defineProperty(ExpressionEntity,"StdOut",new ExpressionEntity("stdout")),_defineProperty(ExpressionEntity,"StdErr",new ExpressionEntity("stderr")),_defineProperty(ExpressionEntity,"StdLibModuleNames",new ExpressionEntity("stdlib_module_names")),_defineProperty(ExpressionEntity,"ThreadInfo",new ExpressionEntity("thread_info")),_defineProperty(ExpressionEntity,"TracebackLimit",new ExpressionEntity("tracebacklimit")),_defineProperty(ExpressionEntity,"Version",new ExpressionEntity("version")),_defineProperty(ExpressionEntity,"ApiVersion",new ExpressionEntity("api_version")),_defineProperty(ExpressionEntity,"VersionInfo",new ExpressionEntity("version_info")),_defineProperty(ExpressionEntity,"WarnOptions",new ExpressionEntity("warnoptions")),_defineProperty(ExpressionEntity,"WinVer",new ExpressionEntity("winver")),_defineProperty(ExpressionEntity,"XOptions",new ExpressionEntity("_xoptions"));var DataType=function(e){_inherits(n,_enum["default"]);var t=_createSuper(n);function n(){return _classCallCheck(this,n),t.apply(this,arguments)}return _createClass(n)}();exports.DataType=DataType,_defineProperty(DataType,"Int",new DataType("int")),_defineProperty(DataType,"Float",new DataType("float")),_defineProperty(DataType,"Number",new DataType("number (int or float)")),_defineProperty(DataType,"String",new DataType("string")),_defineProperty(DataType,"Bool",new DataType("bool")),_defineProperty(DataType,"List",new DataType("list")),_defineProperty(DataType,"Set",new DataType("set")),_defineProperty(DataType,"Tuple",new DataType("tuple")),_defineProperty(DataType,"Dict",new DataType("dictionary")),_defineProperty(DataType,"File",new DataType("file")),_defineProperty(DataType,"Class",new DataType("class")),_defineProperty(DataType,"None",new DataType("none")),_defineProperty(DataType,"Exception",new DataType("exception")),_defineProperty(DataType,"Unknown",new DataType("unknown data type")),_defineProperty(DataType,"NA",new DataType("N/A")),_defineProperty(DataType,"NotParsed",new DataType("not parsed")),_defineProperty(DataType,"Invalid",new DataType("invalid")),_defineProperty(DataType,"Random",new DataType("random")),_defineProperty(DataType,"Math",new DataType("math")),_defineProperty(DataType,"StringModule",new DataType("string module")),_defineProperty(DataType,"Re",new DataType("re")),_defineProperty(DataType,"Pattern",new DataType("Pattern")),_defineProperty(DataType,"Match",new DataType("Match")),_defineProperty(DataType,"Sys",new DataType("sys"));var builtInReturnLookup=new Map([[ExpressionEntity.AbsFunction,DataType.Number],[ExpressionEntity.AllFunction,DataType.Bool],[ExpressionEntity.AnyFunction,DataType.Bool],[ExpressionEntity.AsciiFunction,DataType.String],[ExpressionEntity.AssertFunction,DataType.None],[ExpressionEntity.BinFunction,DataType.String],[ExpressionEntity.BoolFunction,DataType.Bool],[ExpressionEntity.CallableFunction,DataType.Bool],[ExpressionEntity.ChrFunction,DataType.String],[ExpressionEntity.DictFunction,DataType.Dict],[ExpressionEntity.DivModFunction,DataType.Tuple],[ExpressionEntity.EnumerateFunction,DataType.Tuple],[ExpressionEntity.EvalFunction,DataType.Unknown],[ExpressionEntity.ExecFunction,DataType.None],[ExpressionEntity.ExitFunction,DataType.None],[ExpressionEntity.FilterFunction,DataType.Unknown],[ExpressionEntity.FloatFunction,DataType.Float],[ExpressionEntity.GetAttrFunction,DataType.Unknown],[ExpressionEntity.GlobalsFunction,DataType.Dict],[ExpressionEntity.HasAttrFunction,DataType.Bool],[ExpressionEntity.InputFunction,DataType.String],[ExpressionEntity.IntFunction,DataType.Int],[ExpressionEntity.IsInstanceFunction,DataType.Bool],[ExpressionEntity.LenFunction,DataType.Int],[ExpressionEntity.ListFunction,DataType.List],[ExpressionEntity.MapFunction,DataType.Unknown],[ExpressionEntity.MaxFunction,DataType.Number],[ExpressionEntity.MinFunction,DataType.Number],[ExpressionEntity.OpenFunction,DataType.File],[ExpressionEntity.OrdFunction,DataType.Int],[ExpressionEntity.PowFunction,DataType.Number],[ExpressionEntity.PrintFunction,DataType.None],[ExpressionEntity.QuitFunction,DataType.None],[ExpressionEntity.RangeFunction,DataType.Unknown],[ExpressionEntity.ReversedFunction,DataType.Unknown],[ExpressionEntity.RoundFunction,DataType.Float],[ExpressionEntity.SetFunction,DataType.Set],[ExpressionEntity.SortedFunction,DataType.List],[ExpressionEntity.StrFunction,DataType.String],[ExpressionEntity.SumFunction,DataType.Number],[ExpressionEntity.TupleFunction,DataType.Tuple],[ExpressionEntity.TypeFunction,DataType.Class],[ExpressionEntity.Capitalize,DataType.String],[ExpressionEntity.Casefold,DataType.String],[ExpressionEntity.Center,DataType.String],[ExpressionEntity.Count,DataType.Int],[ExpressionEntity.Encode,DataType.String],[ExpressionEntity.EndsWith,DataType.Bool],[ExpressionEntity.ExpandTabs,DataType.String],[ExpressionEntity.Find,DataType.Int],[ExpressionEntity.Format,DataType.String],[ExpressionEntity.FormatFunction,DataType.String],[ExpressionEntity.Index,DataType.Int],[ExpressionEntity.IsAlnum,DataType.Bool],[ExpressionEntity.IsAlpha,DataType.Bool],[ExpressionEntity.IsAscii,DataType.Bool],[ExpressionEntity.IsDecimal,DataType.Bool],[ExpressionEntity.IsDigit,DataType.Bool],[ExpressionEntity.IsIdentifier,DataType.Bool],[ExpressionEntity.IsLower,DataType.Bool],[ExpressionEntity.IsNumeric,DataType.Bool],[ExpressionEntity.IsPrintable,DataType.Bool],[ExpressionEntity.IsSpace,DataType.Bool],[ExpressionEntity.IsTitle,DataType.Bool],[ExpressionEntity.IsUpper,DataType.Bool],[ExpressionEntity.Join,DataType.String],[ExpressionEntity.LJust,DataType.String],[ExpressionEntity.Lower,DataType.String],[ExpressionEntity.LStrip,DataType.String],[ExpressionEntity.MakeTrans,DataType.Dict],[ExpressionEntity.Partition,DataType.Tuple],[ExpressionEntity.Replace,DataType.String],[ExpressionEntity.RFind,DataType.Int],[ExpressionEntity.RIndex,DataType.Int],[ExpressionEntity.RJust,DataType.String],[ExpressionEntity.RPartition,DataType.Tuple],[ExpressionEntity.RSplit,DataType.List],[ExpressionEntity.RStrip,DataType.String],[ExpressionEntity.Split,DataType.List],[ExpressionEntity.SplitLines,DataType.List],[ExpressionEntity.StartsWith,DataType.Bool],[ExpressionEntity.Strip,DataType.String],[ExpressionEntity.SwapCase,DataType.String],[ExpressionEntity.Title,DataType.String],[ExpressionEntity.Translate,DataType.String],[ExpressionEntity.Upper,DataType.String],[ExpressionEntity.ZFill,DataType.String],[ExpressionEntity.Append,DataType.None],[ExpressionEntity.Clear,DataType.None],[ExpressionEntity.Copy,DataType.Unknown],[ExpressionEntity.Extend,DataType.None],[ExpressionEntity.Insert,DataType.None],[ExpressionEntity.Pop,DataType.Unknown],[ExpressionEntity.Remove,DataType.None],[ExpressionEntity.Reverse,DataType.None],[ExpressionEntity.Sort,DataType.None],[ExpressionEntity.FromKeys,DataType.Dict],[ExpressionEntity.Get,DataType.Unknown],[ExpressionEntity.Items,DataType.List],[ExpressionEntity.Keys,DataType.Unknown],[ExpressionEntity.PopItem,DataType.None],[ExpressionEntity.SetDefault,DataType.Unknown],[ExpressionEntity.Update,DataType.None],[ExpressionEntity.Values,DataType.Unknown],[ExpressionEntity.Add,DataType.None],[ExpressionEntity.Difference,DataType.Set],[ExpressionEntity.DifferenceUpdate,DataType.None],[ExpressionEntity.Discard,DataType.None],[ExpressionEntity.Intersection,DataType.Set],[ExpressionEntity.IntersectionUpdate,DataType.None],[ExpressionEntity.IsDisjoint,DataType.Bool],[ExpressionEntity.IsSubset,DataType.Bool],[ExpressionEntity.IsSuperset,DataType.Bool],[ExpressionEntity.SymmetricDifference,DataType.Set],[ExpressionEntity.SymmetricDifferenceUpdate,DataType.None],[ExpressionEntity.Union,DataType.Set],[ExpressionEntity.Close,DataType.None],[ExpressionEntity.FileNo,DataType.Int],[ExpressionEntity.Flush,DataType.None],[ExpressionEntity.IsAtty,DataType.Bool],[ExpressionEntity.Read,DataType.String],[ExpressionEntity.Readable,DataType.Bool],[ExpressionEntity.ReadLine,DataType.String],[ExpressionEntity.ReadLines,DataType.List],[ExpressionEntity.Seek,DataType.None],[ExpressionEntity.Seekable,DataType.Bool],[ExpressionEntity.Tell,DataType.Unknown],[ExpressionEntity.Truncate,DataType.None],[ExpressionEntity.Writable,DataType.Bool],[ExpressionEntity.Write,DataType.None],[ExpressionEntity.WriteLines,DataType.None],[ExpressionEntity.Main,DataType.None],[ExpressionEntity.Cmp,DataType.Int],[ExpressionEntity.Eq,DataType.Bool],[ExpressionEntity.Ne,DataType.Bool],[ExpressionEntity.Lt,DataType.Bool],[ExpressionEntity.Gt,DataType.Bool],[ExpressionEntity.Le,DataType.Bool],[ExpressionEntity.Ge,DataType.Bool],[ExpressionEntity.Str,DataType.String],[ExpressionEntity.SpecialContains,DataType.Bool],[ExpressionEntity.SpecialLen,DataType.Int],[ExpressionEntity.ZipFunction,DataType.Unknown],[ExpressionEntity.Seed,DataType.None],[ExpressionEntity.GetState,DataType.Unknown],[ExpressionEntity.SetState,DataType.None],[ExpressionEntity.GetRandBits,DataType.Int],[ExpressionEntity.RandRange,DataType.Int],[ExpressionEntity.RandInt,DataType.Int],[ExpressionEntity.Choice,DataType.Unknown],[ExpressionEntity.Choices,DataType.List],[ExpressionEntity.Shuffle,DataType.Shuffle],[ExpressionEntity.Sample,DataType.List],[ExpressionEntity.RandomMethod,DataType.Float],[ExpressionEntity.Uniform,DataType.Float],[ExpressionEntity.Triangular,DataType.Float],[ExpressionEntity.BetaVariate,DataType.Float],[ExpressionEntity.ExpoVariate,DataType.Float],[ExpressionEntity.GammaVariate,DataType.Float],[ExpressionEntity.Gauss,DataType.Float],[ExpressionEntity.LogNormVariate,DataType.Float],[ExpressionEntity.NormalVariate,DataType.Float],[ExpressionEntity.VonMisesVariate,DataType.Float],[ExpressionEntity.ParetoVariate,DataType.Float],[ExpressionEntity.WeibullVariate,DataType.Float],[ExpressionEntity.Acos,DataType.Float],[ExpressionEntity.Acosh,DataType.Float],[ExpressionEntity.Asin,DataType.Float],[ExpressionEntity.Asinh,DataType.Float],[ExpressionEntity.Atan,DataType.Float],[ExpressionEntity.Atan2,DataType.Float],[ExpressionEntity.Atanh,DataType.Float],[ExpressionEntity.Ceil,DataType.Int],[ExpressionEntity.Comb,DataType.Int],[ExpressionEntity.CopySign,DataType.Float],[ExpressionEntity.Cos,DataType.Float],[ExpressionEntity.Cosh,DataType.Float],[ExpressionEntity.Degrees,DataType.Float],[ExpressionEntity.Dist,DataType.Float],[ExpressionEntity.Erf,DataType.Float],[ExpressionEntity.Erfc,DataType.Float],[ExpressionEntity.Exp,DataType.Float],[ExpressionEntity.Expm1,DataType.Float],[ExpressionEntity.Fabs,DataType.Float],[ExpressionEntity.Factorial,DataType.Int],[ExpressionEntity.Floor,DataType.Int],[ExpressionEntity.Fmod,DataType.Float],[ExpressionEntity.Frexp,DataType.Tuple],[ExpressionEntity.Fsum,DataType.Float],[ExpressionEntity.Gamma,DataType.Float],[ExpressionEntity.Gcd,DataType.Int],[ExpressionEntity.Hypot,DataType.Float],[ExpressionEntity.IsClose,DataType.Bool],[ExpressionEntity.IsFinite,DataType.Bool],[ExpressionEntity.IsInf,DataType.Bool],[ExpressionEntity.IsNaN,DataType.Bool],[ExpressionEntity.ISqrt,DataType.Int],[ExpressionEntity.Ldexp,DataType.Float],[ExpressionEntity.LGamma,DataType.Float],[ExpressionEntity.Log,DataType.Float],[ExpressionEntity.Log10,DataType.Float],[ExpressionEntity.Log1P,DataType.Float],[ExpressionEntity.Log2,DataType.Float],[ExpressionEntity.Perm,DataType.Int],[ExpressionEntity.Pow,DataType.Float],[ExpressionEntity.Prod,DataType.Float],[ExpressionEntity.Radians,DataType.Float],[ExpressionEntity.Remainder,DataType.Float],[ExpressionEntity.Sin,DataType.Float],[ExpressionEntity.Sinh,DataType.Float],[ExpressionEntity.Sqrt,DataType.Float],[ExpressionEntity.Tan,DataType.Float],[ExpressionEntity.Tanh,DataType.Float],[ExpressionEntity.Trunc,DataType.Int],[ExpressionEntity.E,DataType.Float],[ExpressionEntity.Inf,DataType.Float],[ExpressionEntity.Nan,DataType.Float],[ExpressionEntity.Pi,DataType.Float],[ExpressionEntity.Tau,DataType.Float],[ExpressionEntity.AsciiLetters,DataType.String],[ExpressionEntity.AsciiLowercase,DataType.String],[ExpressionEntity.AsciiUppercase,DataType.String],[ExpressionEntity.Digits,DataType.String],[ExpressionEntity.Hexdigits,DataType.String],[ExpressionEntity.Octdigits,DataType.String],[ExpressionEntity.Punctuation,DataType.String],[ExpressionEntity.Printable,DataType.String],[ExpressionEntity.Whitespace,DataType.String],[ExpressionEntity.Formatter,DataType.String],[ExpressionEntity.Template,DataType.String],[ExpressionEntity.Capwords,DataType.String],[ExpressionEntity.ReA,DataType.Unknown],[ExpressionEntity.ReASCII,DataType.Unknown],[ExpressionEntity.ReDebug,DataType.Unknown],[ExpressionEntity.ReI,DataType.Unknown],[ExpressionEntity.ReIGNORECASE,DataType.Unknown],[ExpressionEntity.ReL,DataType.Unknown],[ExpressionEntity.ReLOCALE,DataType.Unknown],[ExpressionEntity.ReM,DataType.Unknown],[ExpressionEntity.ReMULTILINE,DataType.Unknown],[ExpressionEntity.ReS,DataType.Unknown],[ExpressionEntity.ReDOTALL,DataType.Unknown],[ExpressionEntity.ReX,DataType.Unknown],[ExpressionEntity.ReVERBOSE,DataType.Unknown],[ExpressionEntity.Compile,DataType.Pattern],[ExpressionEntity.Search,DataType.Unknown],[ExpressionEntity.Match,DataType.Unknown],[ExpressionEntity.FullMatch,DataType.Unknown],[ExpressionEntity.FindAll,DataType.List],[ExpressionEntity.FindIter,DataType.Unknown],[ExpressionEntity.Sub,DataType.String],[ExpressionEntity.SubN,DataType.Tuple],[ExpressionEntity.Escape,DataType.String],[ExpressionEntity.Purge,DataType.None],[ExpressionEntity.AddAuditHook,DataType.None],[ExpressionEntity.Audit,DataType.None],[ExpressionEntity.CallTracing,DataType.Unknown],[ExpressionEntity.ClearTypeCache,DataType.None],[ExpressionEntity.CurrentFrames,DataType.Dict],[ExpressionEntity.CurrentExceptions,DataType.Dict],[ExpressionEntity.BreakpointHook,DataType.None],[ExpressionEntity.DebugMallocStats,DataType.None],[ExpressionEntity.DisplayHook,DataType.None],[ExpressionEntity.ExceptHook,DataType.None],[ExpressionEntity.ExcInfo,DataType.Tuple],[ExpressionEntity.SysExit,DataType.None],[ExpressionEntity.GetAllocatedBlocks,DataType.Int],[ExpressionEntity.GetAndroidApiLevel,DataType.Int],[ExpressionEntity.GetDefaultEncoding,DataType.String],[ExpressionEntity.GetDLOpenFlags,DataType.Int],[ExpressionEntity.GetFileSystemEncoding,DataType.String],[ExpressionEntity.GetFileSystemEncodeErrors,DataType.String],[ExpressionEntity.GetRefCount,DataType.Int],[ExpressionEntity.GetRecursionLimit,DataType.Int],[ExpressionEntity.GetSizeOf,DataType.Int],[ExpressionEntity.GetSwitchInterval,DataType.Float],[ExpressionEntity.GetFrame,DataType.Unknown],[ExpressionEntity.GetProfile,DataType.None],[ExpressionEntity.GetTrace,DataType.None],[ExpressionEntity.GetWindowsVersion,DataType.Tuple],[ExpressionEntity.GetAsyncGenHooks,DataType.Unknown],[ExpressionEntity.GetCoroutineOriginTrackingDepth,DataType.Int],[ExpressionEntity.Intern,DataType.Unknown],[ExpressionEntity.IsFinalizing,DataType.Bool],[ExpressionEntity.SetDLOpenFlags,DataType.None],[ExpressionEntity.SetProfile,DataType.Unknown],[ExpressionEntity.SetRecursionLimit,DataType.None],[ExpressionEntity.SetSwitchInterval,DataType.None],[ExpressionEntity.SetTrace,DataType.None],[ExpressionEntity.SetAsyncgenHooks,DataType.None],[ExpressionEntity.EnableLegacyWindowsFSEncoding,DataType.None],[ExpressionEntity.ABIFlags,DataType.String],[ExpressionEntity.Argv,DataType.List],[ExpressionEntity.BaseExecPrefix,DataType.String],[ExpressionEntity.BasePrefix,DataType.String],[ExpressionEntity.ByteOrder,DataType.String],[ExpressionEntity.BuiltInModuleNames,DataType.Tuple],[ExpressionEntity.Copyright,DataType.String],[ExpressionEntity.DllHandle,DataType.Int],[ExpressionEntity.DontWriteBytecode,DataType.Bool],[ExpressionEntity.PycachePrefix,DataType.Unknown],[ExpressionEntity.ExecPrefix,DataType.String],[ExpressionEntity.Executable,DataType.String],[ExpressionEntity.Flags,DataType.Unknown],[ExpressionEntity.FloatInfo,DataType.Unknown],[ExpressionEntity.FloatReprStyle,DataType.String],[ExpressionEntity.HashInfo,DataType.Unknown],[ExpressionEntity.HexVersion,DataType.Int],[ExpressionEntity.Implementation,DataType.Unknown],[ExpressionEntity.IntInfo,DataType.Unknown],[ExpressionEntity.LastType,DataType.Unknown],[ExpressionEntity.LastValue,DataType.Unknown],[ExpressionEntity.LastTraceback,DataType.Unknown],[ExpressionEntity.MaxSize,DataType.Int],[ExpressionEntity.MaxUnicode,DataType.Int],[ExpressionEntity.MetaPath,DataType.List],[ExpressionEntity.Modules,DataType.Dict],[ExpressionEntity.OrigArgv,DataType.List],[ExpressionEntity.Path,DataType.List],[ExpressionEntity.PathHooks,DataType.List],[ExpressionEntity.PathImporterCache,DataType.Dict],[ExpressionEntity.Platform,DataType.String],[ExpressionEntity.Prefix,DataType.String],[ExpressionEntity.PS1,DataType.String],[ExpressionEntity.PS2,DataType.String],[ExpressionEntity.StdIn,DataType.Unknown],[ExpressionEntity.StdOut,DataType.Unknown],[ExpressionEntity.StdErr,DataType.Unknown],[ExpressionEntity.StdLibModuleNames,DataType.Unknown],[ExpressionEntity.ThreadInfo,DataType.Unknown],[ExpressionEntity.TracebackLimit,DataType.Unknown],[ExpressionEntity.Version,DataType.String],[ExpressionEntity.ApiVersion,DataType.Int],[ExpressionEntity.VersionInfo,DataType.Tuple],[ExpressionEntity.WarnOptions,DataType.List],[ExpressionEntity.WinVer,DataType.Int],[ExpressionEntity.XOptions,DataType.Dict]]);exports.builtInReturnLookup=builtInReturnLookup;var modifyingMethodsLookup=new Set([ExpressionEntity.Add,ExpressionEntity.Append,ExpressionEntity.Clear,ExpressionEntity.DifferenceUpdate,ExpressionEntity.Discard,ExpressionEntity.Extend,ExpressionEntity.Insert,ExpressionEntity.IntersectionUpdate,ExpressionEntity.Pop,ExpressionEntity.PopItem,ExpressionEntity.Remove,ExpressionEntity.Reverse,ExpressionEntity.SetDefault,ExpressionEntity.Sort,ExpressionEntity.SymmetricDifferenceUpdate,ExpressionEntity.Update]);exports.modifyingMethodsLookup=modifyingMethodsLookup;var stringMethodsLookup=new Set([ExpressionEntity.Capitalize,ExpressionEntity.Casefold,ExpressionEntity.Center,ExpressionEntity.Encode,ExpressionEntity.ExpandTabs,ExpressionEntity.Format,ExpressionEntity.FormatMap,ExpressionEntity.LJust,ExpressionEntity.Lower,ExpressionEntity.LStrip,ExpressionEntity.Replace,ExpressionEntity.RJust,ExpressionEntity.RStrip,ExpressionEntity.Strip,ExpressionEntity.SwapCase,ExpressionEntity.Title,ExpressionEntity.Translate,ExpressionEntity.Upper,ExpressionEntity.ZFill]);exports.stringMethodsLookup=stringMethodsLookup;var moduleLookup=new Map([[ExpressionEntity.Seed,ExpressionEntity.RandomModule],[ExpressionEntity.GetState,ExpressionEntity.RandomModule],[ExpressionEntity.SetState,ExpressionEntity.RandomModule],[ExpressionEntity.GetRandBits,ExpressionEntity.RandomModule],[ExpressionEntity.RandRange,ExpressionEntity.RandomModule],[ExpressionEntity.RandInt,ExpressionEntity.RandomModule],[ExpressionEntity.Choice,ExpressionEntity.RandomModule],[ExpressionEntity.Choices,ExpressionEntity.RandomModule],[ExpressionEntity.Shuffle,ExpressionEntity.RandomModule],[ExpressionEntity.Sample,ExpressionEntity.RandomModule],[ExpressionEntity.RandomMethod,ExpressionEntity.RandomModule],[ExpressionEntity.Uniform,ExpressionEntity.RandomModule],[ExpressionEntity.Triangular,ExpressionEntity.RandomModule],[ExpressionEntity.BetaVariate,ExpressionEntity.RandomModule],[ExpressionEntity.ExpoVariate,ExpressionEntity.RandomModule],[ExpressionEntity.GammaVariate,ExpressionEntity.RandomModule],[ExpressionEntity.Gauss,ExpressionEntity.RandomModule],[ExpressionEntity.LogNormVariate,ExpressionEntity.RandomModule],[ExpressionEntity.NormalVariate,ExpressionEntity.RandomModule],[ExpressionEntity.VonMisesVariate,ExpressionEntity.RandomModule],[ExpressionEntity.ParetoVariate,ExpressionEntity.RandomModule],[ExpressionEntity.WeibullVariate,ExpressionEntity.RandomModule],[ExpressionEntity.Acos,ExpressionEntity.MathModule],[ExpressionEntity.Acosh,ExpressionEntity.MathModule],[ExpressionEntity.Asin,ExpressionEntity.MathModule],[ExpressionEntity.Asinh,ExpressionEntity.MathModule],[ExpressionEntity.Atan,ExpressionEntity.MathModule],[ExpressionEntity.Atan2,ExpressionEntity.MathModule],[ExpressionEntity.Atanh,ExpressionEntity.MathModule],[ExpressionEntity.Ceil,ExpressionEntity.MathModule],[ExpressionEntity.Comb,ExpressionEntity.MathModule],[ExpressionEntity.CopySign,ExpressionEntity.MathModule],[ExpressionEntity.Cos,ExpressionEntity.MathModule],[ExpressionEntity.Cosh,ExpressionEntity.MathModule],[ExpressionEntity.Degrees,ExpressionEntity.MathModule],[ExpressionEntity.Dist,ExpressionEntity.MathModule],[ExpressionEntity.Erf,ExpressionEntity.MathModule],[ExpressionEntity.Erfc,ExpressionEntity.MathModule],[ExpressionEntity.Exp,ExpressionEntity.MathModule],[ExpressionEntity.Expm1,ExpressionEntity.MathModule],[ExpressionEntity.Fabs,ExpressionEntity.MathModule],[ExpressionEntity.Factorial,ExpressionEntity.MathModule],[ExpressionEntity.Floor,ExpressionEntity.MathModule],[ExpressionEntity.Fmod,ExpressionEntity.MathModule],[ExpressionEntity.Frexp,ExpressionEntity.MathModule],[ExpressionEntity.Fsum,ExpressionEntity.MathModule],[ExpressionEntity.Gamma,ExpressionEntity.MathModule],[ExpressionEntity.Gcd,ExpressionEntity.MathModule],[ExpressionEntity.Hypot,ExpressionEntity.MathModule],[ExpressionEntity.IsClose,ExpressionEntity.MathModule],[ExpressionEntity.IsFinite,ExpressionEntity.MathModule],[ExpressionEntity.IsInf,ExpressionEntity.MathModule],[ExpressionEntity.IsNaN,ExpressionEntity.MathModule],[ExpressionEntity.ISqrt,ExpressionEntity.MathModule],[ExpressionEntity.Ldexp,ExpressionEntity.MathModule],[ExpressionEntity.LGamma,ExpressionEntity.MathModule],[ExpressionEntity.Log,ExpressionEntity.MathModule],[ExpressionEntity.Log10,ExpressionEntity.MathModule],[ExpressionEntity.Log1P,ExpressionEntity.MathModule],[ExpressionEntity.Log2,ExpressionEntity.MathModule],[ExpressionEntity.Perm,ExpressionEntity.MathModule],[ExpressionEntity.Pow,ExpressionEntity.MathModule],[ExpressionEntity.Prod,ExpressionEntity.MathModule],[ExpressionEntity.Radians,ExpressionEntity.MathModule],[ExpressionEntity.Remainder,ExpressionEntity.MathModule],[ExpressionEntity.Sin,ExpressionEntity.MathModule],[ExpressionEntity.Sinh,ExpressionEntity.MathModule],[ExpressionEntity.Sqrt,ExpressionEntity.MathModule],[ExpressionEntity.Tan,ExpressionEntity.MathModule],[ExpressionEntity.Tanh,ExpressionEntity.MathModule],[ExpressionEntity.Trunc,ExpressionEntity.MathModule],[ExpressionEntity.E,ExpressionEntity.MathModule],[ExpressionEntity.Inf,ExpressionEntity.MathModule],[ExpressionEntity.Nan,ExpressionEntity.MathModule],[ExpressionEntity.Pi,ExpressionEntity.MathModule],[ExpressionEntity.Tau,ExpressionEntity.MathModule],[ExpressionEntity.AsciiLetters,ExpressionEntity.StringModule],[ExpressionEntity.AsciiLowercase,ExpressionEntity.StringModule],[ExpressionEntity.AsciiUppercase,ExpressionEntity.StringModule],[ExpressionEntity.Digits,ExpressionEntity.StringModule],[ExpressionEntity.Hexdigits,ExpressionEntity.StringModule],[ExpressionEntity.Octdigits,ExpressionEntity.StringModule],[ExpressionEntity.Punctuation,ExpressionEntity.StringModule],[ExpressionEntity.Printable,ExpressionEntity.StringModule],[ExpressionEntity.Whitespace,ExpressionEntity.StringModule],[ExpressionEntity.Formatter,ExpressionEntity.StringModule],[ExpressionEntity.Template,ExpressionEntity.StringModule],[ExpressionEntity.Capwords,ExpressionEntity.StringModule],[ExpressionEntity.Pattern,ExpressionEntity.ReModule],[ExpressionEntity.Match,ExpressionEntity.ReModule],[ExpressionEntity.ReA,ExpressionEntity.ReModule],[ExpressionEntity.ReASCII,ExpressionEntity.ReModule],[ExpressionEntity.ReDebug,ExpressionEntity.ReModule],[ExpressionEntity.ReI,ExpressionEntity.ReModule],[ExpressionEntity.ReIGNORECASE,ExpressionEntity.ReModule],[ExpressionEntity.ReL,ExpressionEntity.ReModule],[ExpressionEntity.ReLOCALE,ExpressionEntity.ReModule],[ExpressionEntity.ReM,ExpressionEntity.ReModule],[ExpressionEntity.ReMULTILINE,ExpressionEntity.ReModule],[ExpressionEntity.ReS,ExpressionEntity.ReModule],[ExpressionEntity.ReDOTALL,ExpressionEntity.ReModule],[ExpressionEntity.ReX,ExpressionEntity.ReModule],[ExpressionEntity.ReVERBOSE,ExpressionEntity.ReModule],[ExpressionEntity.Compile,ExpressionEntity.ReModule],[ExpressionEntity.Search,ExpressionEntity.ReModule],[ExpressionEntity.Match,ExpressionEntity.ReModule],[ExpressionEntity.FullMatch,ExpressionEntity.ReModule],[ExpressionEntity.FindAll,ExpressionEntity.ReModule],[ExpressionEntity.FindIter,ExpressionEntity.ReModule],[ExpressionEntity.Sub,ExpressionEntity.ReModule],[ExpressionEntity.SubN,ExpressionEntity.ReModule],[ExpressionEntity.Escape,ExpressionEntity.ReModule],[ExpressionEntity.Purge,ExpressionEntity.ReModule],[ExpressionEntity.Split,ExpressionEntity.ReModule],[ExpressionEntity.AddAuditHook,ExpressionEntity.Sys],[ExpressionEntity.Audit,ExpressionEntity.Sys],[ExpressionEntity.CallTracing,ExpressionEntity.Sys],[ExpressionEntity.ClearTypeCache,ExpressionEntity.Sys],[ExpressionEntity.CurrentFrames,ExpressionEntity.Sys],[ExpressionEntity.CurrentExceptions,ExpressionEntity.Sys],[ExpressionEntity.BreakpointHook,ExpressionEntity.Sys],[ExpressionEntity.DebugMallocStats,ExpressionEntity.Sys],[ExpressionEntity.DisplayHook,ExpressionEntity.Sys],[ExpressionEntity.ExceptHook,ExpressionEntity.Sys],[ExpressionEntity.ExcInfo,ExpressionEntity.Sys],[ExpressionEntity.SysExit,ExpressionEntity.Sys],[ExpressionEntity.GetAllocatedBlocks,ExpressionEntity.Sys],[ExpressionEntity.GetAndroidApiLevel,ExpressionEntity.Sys],[ExpressionEntity.GetDefaultEncoding,ExpressionEntity.Sys],[ExpressionEntity.GetDLOpenFlags,ExpressionEntity.Sys],[ExpressionEntity.GetFileSystemEncoding,ExpressionEntity.Sys],[ExpressionEntity.GetFileSystemEncodeErrors,ExpressionEntity.Sys],[ExpressionEntity.GetRefCount,ExpressionEntity.Sys],[ExpressionEntity.GetRecursionLimit,ExpressionEntity.Sys],[ExpressionEntity.GetSizeOf,ExpressionEntity.Sys],[ExpressionEntity.GetSwitchInterval,ExpressionEntity.Sys],[ExpressionEntity.GetFrame,ExpressionEntity.Sys],[ExpressionEntity.GetProfile,ExpressionEntity.Sys],[ExpressionEntity.GetTrace,ExpressionEntity.Sys],[ExpressionEntity.GetWindowsVersion,ExpressionEntity.Sys],[ExpressionEntity.GetAsyncGenHooks,ExpressionEntity.Sys],[ExpressionEntity.GetCoroutineOriginTrackingDepth,ExpressionEntity.Sys],[ExpressionEntity.Intern,ExpressionEntity.Sys],[ExpressionEntity.IsFinalizing,ExpressionEntity.Sys],[ExpressionEntity.SetDLOpenFlags,ExpressionEntity.Sys],[ExpressionEntity.SetProfile,ExpressionEntity.Sys],[ExpressionEntity.SetRecursionLimit,ExpressionEntity.Sys],[ExpressionEntity.SetSwitchInterval,ExpressionEntity.Sys],[ExpressionEntity.SetTrace,ExpressionEntity.Sys],[ExpressionEntity.SetAsyncgenHooks,ExpressionEntity.Sys],[ExpressionEntity.EnableLegacyWindowsFSEncoding,ExpressionEntity.Sys],[ExpressionEntity.ABIFlags,ExpressionEntity.Sys],[ExpressionEntity.Argv,ExpressionEntity.Sys],[ExpressionEntity.BaseExecPrefix,ExpressionEntity.Sys],[ExpressionEntity.BasePrefix,ExpressionEntity.Sys],[ExpressionEntity.ByteOrder,ExpressionEntity.Sys],[ExpressionEntity.BuiltInModuleNames,ExpressionEntity.Sys],[ExpressionEntity.Copyright,ExpressionEntity.Sys],[ExpressionEntity.DllHandle,ExpressionEntity.Sys],[ExpressionEntity.DontWriteBytecode,ExpressionEntity.Sys],[ExpressionEntity.PycachePrefix,ExpressionEntity.Sys],[ExpressionEntity.ExecPrefix,ExpressionEntity.Sys],[ExpressionEntity.Executable,ExpressionEntity.Sys],[ExpressionEntity.Flags,ExpressionEntity.Sys],[ExpressionEntity.FloatInfo,ExpressionEntity.Sys],[ExpressionEntity.FloatReprStyle,ExpressionEntity.Sys],[ExpressionEntity.HashInfo,ExpressionEntity.Sys],[ExpressionEntity.HexVersion,ExpressionEntity.Sys],[ExpressionEntity.Implementation,ExpressionEntity.Sys],[ExpressionEntity.IntInfo,ExpressionEntity.Sys],[ExpressionEntity.LastType,ExpressionEntity.Sys],[ExpressionEntity.LastValue,ExpressionEntity.Sys],[ExpressionEntity.LastTraceback,ExpressionEntity.Sys],[ExpressionEntity.MaxSize,ExpressionEntity.Sys],[ExpressionEntity.MaxUnicode,ExpressionEntity.Sys],[ExpressionEntity.MetaPath,ExpressionEntity.Sys],[ExpressionEntity.Modules,ExpressionEntity.Sys],[ExpressionEntity.OrigArgv,ExpressionEntity.Sys],[ExpressionEntity.Path,ExpressionEntity.Sys],[ExpressionEntity.PathHooks,ExpressionEntity.Sys],[ExpressionEntity.PathImporterCache,ExpressionEntity.Sys],[ExpressionEntity.Platform,ExpressionEntity.Sys],[ExpressionEntity.Prefix,ExpressionEntity.Sys],[ExpressionEntity.PS1,ExpressionEntity.Sys],[ExpressionEntity.PS2,ExpressionEntity.Sys],[ExpressionEntity.StdIn,ExpressionEntity.Sys],[ExpressionEntity.StdOut,ExpressionEntity.Sys],[ExpressionEntity.StdErr,ExpressionEntity.Sys],[ExpressionEntity.StdLibModuleNames,ExpressionEntity.Sys],[ExpressionEntity.ThreadInfo,ExpressionEntity.Sys],[ExpressionEntity.TracebackLimit,ExpressionEntity.Sys],[ExpressionEntity.Version,ExpressionEntity.Sys],[ExpressionEntity.ApiVersion,ExpressionEntity.Sys],[ExpressionEntity.VersionInfo,ExpressionEntity.Sys],[ExpressionEntity.WarnOptions,ExpressionEntity.Sys],[ExpressionEntity.WinVer,ExpressionEntity.Sys],[ExpressionEntity.XOptions,ExpressionEntity.Sys]]);exports.moduleLookup=moduleLookup;var specialCaseLookup={assert:{entity:ExpressionEntity.AssertFunction,category:ExpressionCategory.BuiltInFunctions},random:{entity:ExpressionEntity.RandomMethod,category:ExpressionCategory.BuiltInMethods},exit:{entity:ExpressionEntity.SysExit,category:ExpressionCategory.ModuleFunctions}};exports.specialCaseLookup=specialCaseLookup;
