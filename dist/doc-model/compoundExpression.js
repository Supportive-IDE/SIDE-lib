"use strict";function _typeof(e){return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_typeof(e)}Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompoundExpressionFeedback=exports.CompoundExpression=void 0;var _expression=require("./expression.js"),_observers=require("./observers.js");function _defineProperty(e,s,t){return s in e?Object.defineProperty(e,s,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[s]=t,e}function _createForOfIteratorHelper(e,s){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=_unsupportedIterableToArray(e))||s&&e&&"number"==typeof e.length){t&&(e=t);var i=0,n=function(){};return{s:n,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,r=!0,p=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return r=e.done,e},e:function(e){p=!0,o=e},f:function(){try{r||null==t.return||t.return()}finally{if(p)throw o}}}}function _unsupportedIterableToArray(e,s){if(e){if("string"==typeof e)return _arrayLikeToArray(e,s);var t=Object.prototype.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(e,s):void 0}}function _arrayLikeToArray(e,s){(null==s||s>e.length)&&(s=e.length);for(var t=0,i=new Array(s);t<s;t++)i[t]=e[t];return i}function _classCallCheck(e,s){if(!(e instanceof s))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,s){for(var t=0;t<s.length;t++){var i=s[t];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,s,t){return s&&_defineProperties(e.prototype,s),t&&_defineProperties(e,t),Object.defineProperty(e,"prototype",{writable:!1}),e}function _get(){return _get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,s,t){var i=_superPropBase(e,s);if(i){var n=Object.getOwnPropertyDescriptor(i,s);return n.get?n.get.call(arguments.length<3?e:t):n.value}},_get.apply(this,arguments)}function _superPropBase(e,s){for(;!Object.prototype.hasOwnProperty.call(e,s)&&null!==(e=_getPrototypeOf(e)););return e}function _inherits(e,s){if("function"!=typeof s&&null!==s)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(s&&s.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),s&&_setPrototypeOf(e,s)}function _setPrototypeOf(e,s){return _setPrototypeOf=Object.setPrototypeOf||function(e,s){return e.__proto__=s,e},_setPrototypeOf(e,s)}function _createSuper(e){var s=_isNativeReflectConstruct();return function(){var t,i=_getPrototypeOf(e);if(s){var n=_getPrototypeOf(this).constructor;t=Reflect.construct(i,arguments,n)}else t=i.apply(this,arguments);return _possibleConstructorReturn(this,t)}}function _possibleConstructorReturn(e,s){if(s&&("object"===_typeof(s)||"function"==typeof s))return s;if(void 0!==s)throw new TypeError("Derived constructors may only return object or undefined");return _assertThisInitialized(e)}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function _getPrototypeOf(e){return _getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_getPrototypeOf(e)}function _classPrivateMethodInitSpec(e,s){_checkPrivateRedeclaration(e,s),s.add(e)}function _classPrivateFieldInitSpec(e,s,t){_checkPrivateRedeclaration(e,s),s.set(e,t)}function _checkPrivateRedeclaration(e,s){if(s.has(e))throw new TypeError("Cannot initialize the same private elements twice on an object")}function _classPrivateMethodGet(e,s,t){if(!s.has(e))throw new TypeError("attempted to get private field on non-instance");return t}function _classPrivateFieldGet(e,s){return _classApplyDescriptorGet(e,_classExtractFieldDescriptor(e,s,"get"))}function _classApplyDescriptorGet(e,s){return s.get?s.get.call(e):s.value}function _classPrivateFieldSet(e,s,t){return _classApplyDescriptorSet(e,_classExtractFieldDescriptor(e,s,"set"),t),t}function _classExtractFieldDescriptor(e,s,t){if(!s.has(e))throw new TypeError("attempted to "+t+" private field on non-instance");return s.get(e)}function _classApplyDescriptorSet(e,s,t){if(s.set)s.set.call(e,t);else{if(!s.writable)throw new TypeError("attempted to set read only private field");s.value=t}}var _nodeList=new WeakMap,_indexInLine=new WeakMap,_nestedCompoundExpressions=new WeakMap,_isInContinuationParens=new WeakMap,_createFirstNode=new WeakSet,_feedbackIsAvailable=new WeakSet,_nodeFactory=new WeakSet,CompoundExpression=function(e){_inherits(t,_observers.TypeChangeObserverNotifier);var s=_createSuper(t);function t(){var e,i=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return _classCallCheck(this,t),_classPrivateMethodInitSpec(_assertThisInitialized(e=s.call(this)),_nodeFactory),_classPrivateMethodInitSpec(_assertThisInitialized(e),_feedbackIsAvailable),_classPrivateMethodInitSpec(_assertThisInitialized(e),_createFirstNode),_classPrivateFieldInitSpec(_assertThisInitialized(e),_nodeList,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(e),_indexInLine,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(_assertThisInitialized(e),_nestedCompoundExpressions,{writable:!0,value:[]}),_classPrivateFieldInitSpec(_assertThisInitialized(e),_isInContinuationParens,{writable:!0,value:void 0}),_classPrivateFieldSet(_assertThisInitialized(e),_isInContinuationParens,i),e}return _createClass(t,[{key:"addExpression",value:function(e,s){var i=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e.addObserver(this);var n=this.getEvaluatedType();_classPrivateFieldGet(this,_nodeList)?_classPrivateFieldSet(this,_nodeList,_classPrivateFieldGet(this,_nodeList).addNextEntity(e,_classPrivateFieldGet(this,_nodeList).getCompoundType())):_classPrivateMethodGet(this,_createFirstNode,_createFirstNode2).call(this,e,s),i||this.getEvaluatedType()===n||_get(_getPrototypeOf(t.prototype),"sendUpdate",this).call(this,this.getEvaluatedType())}},{key:"overwrite",value:function(e,s){_classPrivateMethodGet(this,_createFirstNode,_createFirstNode2).call(this,e,s),_get(_getPrototypeOf(t.prototype),"sendUpdate",this).call(this,this.getEvaluatedType())}},{key:"typeUpdateReceived",value:function(e){var s=this.getEvaluatedType();if(_classPrivateFieldGet(this,_nodeList)){var i=_classPrivateFieldGet(this,_nodeList).getAllExpressions();_classPrivateFieldSet(this,_nodeList,void 0);var n,o=_createForOfIteratorHelper(i);try{for(o.s();!(n=o.n()).done;){var r=n.value;this.addExpression(r,_classPrivateFieldGet(this,_indexInLine),!0)}}catch(e){o.e(e)}finally{o.f()}this.getEvaluatedType()!==s&&_get(_getPrototypeOf(t.prototype),"sendUpdate",this).call(this,this.getEvaluatedType())}}},{key:"getLastEntry",value:function(){if(_classPrivateFieldGet(this,_nodeList))return _classPrivateFieldGet(this,_nodeList).getExpression()}},{key:"getEvaluatedType",value:function(){return _classPrivateFieldGet(this,_nodeList)?_classPrivateFieldGet(this,_nodeList).getCompoundType():_expression.DataType.None}},{key:"getIndexInLine",value:function(){return _classPrivateFieldGet(this,_indexInLine)}},{key:"isValid",value:function(){return!(void 0!==_classPrivateFieldGet(this,_nodeList)&&!_classPrivateFieldGet(this,_nodeList).getIsValid())||!_classPrivateMethodGet(this,_feedbackIsAvailable,_feedbackIsAvailable2).call(this)}},{key:"setContinuation",value:function(){_classPrivateFieldSet(this,_isInContinuationParens,!0)}},{key:"numberOfParts",value:function(){return _classPrivateFieldGet(this,_nodeList)?_classPrivateFieldGet(this,_nodeList).countExpressions():0}},{key:"getFeedback",value:function(){if(_classPrivateFieldGet(this,_nodeList)){var e=_classPrivateFieldGet(this,_nodeList).getFeedback();return void 0===e&&(e=new CompoundExpressionFeedback(0,"No feedback available")),e}return new CompoundExpressionFeedback(0,"There is no compound expression")}},{key:"getAllFeedback",value:function(){var e=[];if(void 0===_classPrivateFieldGet(this,_nodeList))return e;!this.isValid()&&_classPrivateMethodGet(this,_feedbackIsAvailable,_feedbackIsAvailable2).call(this)&&this.numberOfParts()>1&&e.push(this.getFeedback());var s,t=_createForOfIteratorHelper(_classPrivateFieldGet(this,_nestedCompoundExpressions));try{for(t.s();!(s=t.n()).done;){var i=s.value;e=e.concat(i.getAllFeedback())}}catch(e){t.e(e)}finally{t.f()}return Array.from(new Set(e))}},{key:"getNestedCompoundExpressions",value:function(){return _classPrivateFieldGet(this,_nestedCompoundExpressions)}},{key:"getTypesOfCompoundExpressionsBeginningAt",value:function(e){var s=[];this.getIndexInLine()===e&&s.push(this.getEvaluatedType());var t,i=_createForOfIteratorHelper(_classPrivateFieldGet(this,_nestedCompoundExpressions));try{for(i.s();!(t=i.n()).done;){var n=t.value;s=s.concat(n.getTypesOfCompoundExpressionsBeginningAt(e))}}catch(e){i.e(e)}finally{i.f()}return s}},{key:"toString",value:function(){return _classPrivateFieldGet(this,_nodeList)?_classPrivateFieldGet(this,_nodeList).toString():""}}]),t}();function _createFirstNode2(e,s){e.isOneOfEntities([_expression.ExpressionEntity.NotOperator,_expression.ExpressionEntity.SubtractOperator,_expression.ExpressionEntity.AddOperator])?_classPrivateFieldSet(this,_nodeList,new OperatorNode(e,e.is(_expression.ExpressionEntity.NotOperator)?_expression.DataType.Bool:_expression.DataType.Number)):_classPrivateFieldSet(this,_nodeList,_classPrivateMethodGet(this,_nodeFactory,_nodeFactory2).call(this,e)),_classPrivateFieldGet(this,_nodeList).isInContinuationParens=_classPrivateFieldGet(this,_isInContinuationParens),_classPrivateFieldSet(this,_indexInLine,s)}function _feedbackIsAvailable2(){return void 0!==_classPrivateFieldGet(this,_nodeList).getFeedback()}function _nodeFactory2(e){var s=e.getDataType();switch(s){case _expression.DataType.Int:return new IntValue(e,s);case _expression.DataType.Float:return new FloatValue(e,s);case _expression.DataType.Number:return new NumberValue(e,s);case _expression.DataType.String:return new StringValue(e,s);case _expression.DataType.Bool:return new BoolValue(e,s);case _expression.DataType.List:return new ListValue(e,s);case _expression.DataType.Tuple:return new TupleValue(e,s);case _expression.DataType.Set:return new SetValue(e,s);case _expression.DataType.Dict:return new DictValue(e,s);case _expression.DataType.None:return new NoneValue(e,s);case _expression.DataType.File:return new FileValue(e,s);case _expression.DataType.Random:return new RandomModuleValue(e,s);case _expression.DataType.Math:return new MathModuleValue(e,s);case _expression.DataType.StringModule:return new StringModuleValue(e,s);case _expression.DataType.Re:return new ReModuleValue(e,s);case _expression.DataType.Sys:return new SysModuleValue(e,s);default:return new UnknownValue(e,s===_expression.DataType.Invalid?s:_expression.DataType.Unknown)}}exports.CompoundExpression=CompoundExpression;var Node=function(){function e(s,t){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;_classCallCheck(this,e),_defineProperty(this,"expression",void 0),_defineProperty(this,"compoundType",void 0),_defineProperty(this,"prevNode",void 0),_defineProperty(this,"feedback",void 0),_defineProperty(this,"isInContinuationParens",!1),this.expression=s,this.compoundType=t,this.prevNode=i,void 0!==this.prevNode&&(this.isInContinuationParens=this.prevNode.isInContinuationParens)}return _createClass(e,[{key:"addNextEntity",value:function(s,t){return new e(s,t,this)}},{key:"computeSubExpressionType",value:function(e,s){return(0,_expression.keywordLookup)(e.name).category!==_expression.ExpressionCategory.MathsOperators||s===_expression.DataType.None?_expression.DataType.Invalid:_expression.DataType.Unknown}},{key:"getCompoundType",value:function(){return this.compoundType}},{key:"getIsValid",value:function(){return this.compoundType!==_expression.DataType.Invalid}},{key:"getDocumentIndex",value:function(){return this.expression.getLocalIndex()}},{key:"countExpressions",value:function(){return void 0===this.prevNode?1:1+this.prevNode.countExpressions()}},{key:"getFirstExpression",value:function(){return void 0===this.prevNode?this.expression:this.prevNode.expression}},{key:"getLastExpression",value:function(){return this.expression}},{key:"getAllExpressions",value:function(){if(void 0===this.prevNode)return[this.expression];var e=this.prevNode.getAllExpressions();return e.push(this.expression),e}},{key:"getValue",value:function(){return this.expression.getValue()}},{key:"setFeedback",value:function(e,s){this.feedback=new CompoundExpressionFeedback(e,s)}},{key:"getFeedback",value:function(){return this.feedback?this.feedback:this.prevNode?this.prevNode.getFeedback():void 0}},{key:"isValidMethod",value:function(e){return e.isOneOfCategories([_expression.ExpressionCategory.BuiltInMethods,_expression.ExpressionCategory.OtherMethods,_expression.ExpressionCategory.ModuleFunctions,_expression.ExpressionCategory.ImportedEntities])&&this.compoundType===_expression.DataType.Unknown}},{key:"isValidProperty",value:function(e){return e.isOneOfCategories([_expression.ExpressionCategory.Properties,_expression.ExpressionCategory.ModuleProperties])&&this.compoundType===_expression.DataType.Unknown}},{key:"compoundTypeEqualsNodeType",value:function(){return this.compoundType===this.expression.getDataType()}},{key:"toString",value:function(){return void 0===this.prevNode?" ".concat(this.expression.getValue()):"".concat(this.prevNode.toString()," ").concat(this.expression.getValue())}},{key:"valueNodeFactory",value:function(e,s){switch(s=this.compoundType!==_expression.DataType.Invalid?s:_expression.DataType.Invalid,e.getDataType()){case _expression.DataType.Int:return new IntValue(e,s,this);case _expression.DataType.Float:return new FloatValue(e,s,this);case _expression.DataType.Number:return new NumberValue(e,s,this);case _expression.DataType.String:return new StringValue(e,s,this);case _expression.DataType.Bool:return new BoolValue(e,s,this);case _expression.DataType.List:return new ListValue(e,s,this);case _expression.DataType.Tuple:return new TupleValue(e,s,this);case _expression.DataType.Set:return new SetValue(e,s,this);case _expression.DataType.Dict:return new DictValue(e,s,this);case _expression.DataType.File:return new FileValue(e,s,this);case _expression.DataType.None:return new NoneValue(e,s,this);case _expression.DataType.Random:return new RandomModuleValue(e,s,this);case _expression.DataType.Math:return new MathModuleValue(e,s,this);default:return new UnknownValue(e,s,this)}}}]),e}(),ValueNode=function(e){_inherits(t,Node);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return e.isOperator()?(this.updateUsedBy(e),new OperatorNode(e,s,this)):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"overwriteNode",value:function(e,s){if(void 0===this.prevNode){var t=this.valueNodeFactory(e,s);return t.prevNode=void 0,t}return this.prevNode.addNextEntity(e,this.prevNode.getCompoundType())}},{key:"updateUsedBy",value:function(e){this.expression.isOperator()||this.expression.setUsedBy(e)}}]),t}(),NumberValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return e.isOneOfEntities([_expression.ExpressionEntity.IntLiteral,_expression.ExpressionEntity.FloatLiteral])&&e.getValue().startsWith("-")?this.valueNodeFactory(e,s):_get(_getPrototypeOf(t.prototype),"addNextEntity",this).call(this,e,s)}},{key:"isValidMethod",value:function(e){return e.isOneOfCategories([_expression.ExpressionCategory.BuiltInMethods,_expression.ExpressionCategory.OtherMethods])&&this.setFeedback(this.expression.getLocalIndex(),"A method is being called on a numeric value (".concat(this.expression.getValue(),"). There are no valid methods for numeric values.")),!1}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid){if(s===_expression.DataType.Int||s===_expression.DataType.Float||s===_expression.DataType.Number||s===_expression.DataType.Bool)return _expression.DataType.Number;if(s===_expression.DataType.String||s===_expression.DataType.List||s===_expression.DataType.Tuple){if(e===_expression.ExpressionEntity.MultiplyOperator)return s}else if(s===_expression.DataType.Unknown)return _expression.DataType.Unknown}return _expression.DataType.Invalid}}]),t}(),IntValue=function(e){_inherits(t,NumberValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return e.isOneOfEntities([_expression.ExpressionEntity.IntLiteral,_expression.ExpressionEntity.FloatLiteral])&&e.getValue().startsWith("-")?this.valueNodeFactory(e,s):_get(_getPrototypeOf(t.prototype),"addNextEntity",this).call(this,e,s)}},{key:"computeSubExpressionType",value:function(e,s){var i=_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s);if(i===_expression.DataType.Number){if(s===_expression.DataType.Int||s===_expression.DataType.Bool)return _expression.DataType.Int;if(s===_expression.DataType.Float)return _expression.DataType.Float}return i}}]),t}(),FloatValue=function(e){_inherits(t,NumberValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return e.isOneOfEntities([_expression.ExpressionEntity.IntLiteral,_expression.ExpressionEntity.FloatLiteral])&&e.getValue().startsWith("-")?this.valueNodeFactory(e,s):_get(_getPrototypeOf(t.prototype),"addNextEntity",this).call(this,e,s)}},{key:"computeSubExpressionType",value:function(e,s){var i=_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s);return i===_expression.DataType.Number?_expression.DataType.Float:i!==_expression.DataType.Unknown?_expression.DataType.Invalid:i}}]),t}(),StringValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.IncrementOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.MultiplyAssignOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])||e.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])||e.getEntity()===_expression.ExpressionEntity.ModulusOperator?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a string (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):e.getEntity()===_expression.ExpressionEntity.IndexKey?(e.setDataType(_expression.DataType.String),this.overwriteNode(e,_expression.DataType.String)):e.getEntity()===_expression.ExpressionEntity.Slice?this:this.isInContinuationParens&&this.expression.getEntity()===_expression.ExpressionEntity.StringLiteral&&e.getEntity()===_expression.ExpressionEntity.StringLiteral?this.overwriteNode(e,_expression.DataType.String):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Capitalize,_expression.ExpressionEntity.Casefold,_expression.ExpressionEntity.Center,_expression.ExpressionEntity.Count,_expression.ExpressionEntity.Encode,_expression.ExpressionEntity.ExpandTabs,_expression.ExpressionEntity.Find,_expression.ExpressionEntity.Format,_expression.ExpressionEntity.Index,_expression.ExpressionEntity.IsAlnum,_expression.ExpressionEntity.IsAlpha,_expression.ExpressionEntity.IsAscii,_expression.ExpressionEntity.IsDecimal,_expression.ExpressionEntity.IsDigit,_expression.ExpressionEntity.IsIdentifier,_expression.ExpressionEntity.IsLower,_expression.ExpressionEntity.IsNumeric,_expression.ExpressionEntity.IsPrintable,_expression.ExpressionEntity.IsSpace,_expression.ExpressionEntity.IsTitle,_expression.ExpressionEntity.IsUpper,_expression.ExpressionEntity.Join,_expression.ExpressionEntity.LJust,_expression.ExpressionEntity.Lower,_expression.ExpressionEntity.LStrip,_expression.ExpressionEntity.MakeTrans,_expression.ExpressionEntity.Partition,_expression.ExpressionEntity.Replace,_expression.ExpressionEntity.RFind,_expression.ExpressionEntity.RIndex,_expression.ExpressionEntity.RJust,_expression.ExpressionEntity.RPartition,_expression.ExpressionEntity.RSplit,_expression.ExpressionEntity.RStrip,_expression.ExpressionEntity.Split,_expression.ExpressionEntity.SplitLines,_expression.ExpressionEntity.StartsWith,_expression.ExpressionEntity.Strip,_expression.ExpressionEntity.SwapCase,_expression.ExpressionEntity.Title,_expression.ExpressionEntity.Translate,_expression.ExpressionEntity.Upper,_expression.ExpressionEntity.ZFill])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a string (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid){if(e===_expression.ExpressionEntity.ModulusOperator)return _expression.DataType.String;if(s===_expression.DataType.String){if(e===_expression.ExpressionEntity.AddOperator)return _expression.DataType.String}else if(s===_expression.DataType.Int||s===_expression.DataType.Number||s===_expression.DataType.Bool){if(e===_expression.ExpressionEntity.MultiplyOperator)return _expression.DataType.String}else if(s===_expression.DataType.Unknown&&(e===_expression.ExpressionEntity.MultiplyOperator||e===_expression.ExpressionEntity.AddOperator))return _expression.DataType.Unknown}return _expression.DataType.Invalid}}]),t}(),BoolValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){return e.isOneOfCategories([_expression.ExpressionCategory.BuiltInMethods,_expression.ExpressionCategory.OtherMethods])&&this.setFeedback(this.expression.getLocalIndex(),"A method was called on a boolean value (".concat(this.expression.getValue(),"). There are no valid methods for boolean values.")),!1}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid){if(s===_expression.DataType.Int||_expression.DataType.Bool)return _expression.DataType.Int;if(s===_expression.DataType.Float||s===_expression.DataType.Number)return s;if(s===_expression.DataType.String||s===_expression.DataType.List||s===_expression.DataType.Tuple){if(e===_expression.ExpressionEntity.MultiplyOperator)return s}else if(s===_expression.DataType.Unknown)return _expression.DataType.Unknown}return _expression.DataType.Invalid}}]),t}(),ListValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])||e.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a ").concat(this.expression.getDataType()," (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):e.getEntity()===_expression.ExpressionEntity.IndexKey?this.overwriteNode(e,_expression.DataType.Unknown):e.getEntity()===_expression.ExpressionEntity.Slice?this:this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Append,_expression.ExpressionEntity.Clear,_expression.ExpressionEntity.Copy,_expression.ExpressionEntity.Count,_expression.ExpressionEntity.Extend,_expression.ExpressionEntity.Index,_expression.ExpressionEntity.Insert,_expression.ExpressionEntity.Pop,_expression.ExpressionEntity.Remove,_expression.ExpressionEntity.Reverse,_expression.ExpressionEntity.Sort])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a list (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid)if(s===_expression.DataType.Int||s===_expression.DataType.Number){if(e===_expression.ExpressionEntity.MultiplyOperator)return _expression.DataType.List}else if(s===_expression.DataType.List){if(e===_expression.ExpressionEntity.AddOperator)return _expression.DataType.List}else if(s===_expression.DataType.Unknown&&(e===_expression.ExpressionEntity.AddOperator||e===_expression.ExpressionEntity.MultiplyOperator))return _expression.DataType.Unknown;return _expression.DataType.Invalid}}]),t}(),TupleValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])||e.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a ").concat(this.expression.getDataType()," (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):e.getEntity()===_expression.ExpressionEntity.IndexKey?this.overwriteNode(e,_expression.DataType.Unknown):e.getEntity()===_expression.ExpressionEntity.Slice?this:this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Count,_expression.ExpressionEntity.Index])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a tuple (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid)if(s===_expression.DataType.Int||s===_expression.DataType.Number){if(e===_expression.ExpressionEntity.MultiplyOperator)return _expression.DataType.Tuple}else if(s===_expression.DataType.Tuple){if(e===_expression.ExpressionEntity.AddOperator)return _expression.DataType.Tuple}else if(s===_expression.DataType.Unknown&&(e===_expression.ExpressionEntity.AddOperator||e===_expression.ExpressionEntity.MultiplyOperator))return _expression.DataType.Unknown;return _expression.DataType.Invalid}}]),t}(),SetValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.SubtractOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])||e.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a set (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Add,_expression.ExpressionEntity.Clear,_expression.ExpressionEntity.Copy,_expression.ExpressionEntity.Difference,_expression.ExpressionEntity.DifferenceUpdate,_expression.ExpressionEntity.Discard,_expression.ExpressionEntity.Intersection,_expression.ExpressionEntity.IntersectionUpdate,_expression.ExpressionEntity.IsDisjoint,_expression.ExpressionEntity.IsSubset,_expression.ExpressionEntity.IsSuperset,_expression.ExpressionEntity.Pop,_expression.ExpressionEntity.Remove,_expression.ExpressionEntity.SymmetricDifference,_expression.ExpressionEntity.SymmetricDifferenceUpdate,_expression.ExpressionEntity.Union,_expression.ExpressionEntity.Update])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a set (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid)if(s===_expression.DataType.Set){if(e===_expression.ExpressionEntity.SubtractOperator)return _expression.DataType.Set}else if(s===_expression.DataType.Unknown&&e===_expression.ExpressionEntity.SubtractOperator)return _expression.DataType.Unknown;return _expression.DataType.Invalid}}]),t}(),DictValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])||e.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a dictionary (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):e.getEntity()===_expression.ExpressionEntity.IndexKey?this.overwriteNode(e,_expression.DataType.Unknown):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Clear,_expression.ExpressionEntity.Copy,_expression.ExpressionEntity.FromKeys,_expression.ExpressionEntity.Get,_expression.ExpressionEntity.Items,_expression.ExpressionEntity.Keys,_expression.ExpressionEntity.Pop,_expression.ExpressionEntity.PopItem,_expression.ExpressionEntity.SetDefault,_expression.ExpressionEntity.Update,_expression.ExpressionEntity.Values])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a dictionary (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){return _expression.DataType.Invalid}}]),t}(),FileValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot,_expression.ExpressionEntity.EqualOperator,_expression.ExpressionEntity.NotEqualOperator])||e.is(_expression.ExpressionCategory.LogicalOperators)?new OperatorNode(e,s,this):(e.isOneOfCategories([_expression.ExpressionCategory.MathsOperators,_expression.ExpressionCategory.ComparisonOperators])?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a file (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Close,_expression.ExpressionEntity.FileNo,_expression.ExpressionEntity.Flush,_expression.ExpressionEntity.IsAtty,_expression.ExpressionEntity.Read,_expression.ExpressionEntity.Readable,_expression.ExpressionEntity.ReadLine,_expression.ExpressionEntity.ReadLines,_expression.ExpressionEntity.Seek,_expression.ExpressionEntity.Seekable,_expression.ExpressionEntity.Tell,_expression.ExpressionEntity.Truncate,_expression.ExpressionEntity.Writable,_expression.ExpressionEntity.Write,_expression.ExpressionEntity.WriteLines])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a file (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){return _expression.DataType.Invalid}}]),t}(),ModuleValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot,_expression.ExpressionEntity.EqualOperator,_expression.ExpressionEntity.NotEqualOperator])||e.isOneOfCategories([_expression.ExpressionCategory.LogicalOperators])?new OperatorNode(e,s,this):(e.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow a module (").concat(this.expression.getValue(),").")):e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){var s=e.isOneOfCategories([_expression.ExpressionCategory.BuiltInMethods,_expression.ExpressionCategory.OtherMethods,_expression.ExpressionCategory.MagicMethods]);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}},{key:"computeSubExpressionType",value:function(e,s){return _expression.DataType.Invalid}}]),t}(),RandomModuleValue=function(e){_inherits(t,ModuleValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Seed,_expression.ExpressionEntity.GetState,_expression.ExpressionEntity.SetState,_expression.ExpressionEntity.GetRandBits,_expression.ExpressionEntity.RandRange,_expression.ExpressionEntity.RandInt,_expression.ExpressionEntity.Choice,_expression.ExpressionEntity.Choices,_expression.ExpressionEntity.Shuffle,_expression.ExpressionEntity.Sample,_expression.ExpressionEntity.RandomMethod,_expression.ExpressionEntity.Uniform,_expression.ExpressionEntity.Triangular,_expression.ExpressionEntity.BetaVariate,_expression.ExpressionEntity.ExpoVariate,_expression.ExpressionEntity.GammaVariate,_expression.ExpressionEntity.Gauss,_expression.ExpressionEntity.LogNormVariate,_expression.ExpressionEntity.NormalVariate,_expression.ExpressionEntity.VonMisesVariate,_expression.ExpressionEntity.ParetoVariate,_expression.ExpressionEntity.WeibullVariate])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}}]),t}(),MathModuleValue=function(e){_inherits(t,ModuleValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Acos,_expression.ExpressionEntity.Acosh,_expression.ExpressionEntity.Asin,_expression.ExpressionEntity.Asinh,_expression.ExpressionEntity.Atan,_expression.ExpressionEntity.Atan2,_expression.ExpressionEntity.Atanh,_expression.ExpressionEntity.Ceil,_expression.ExpressionEntity.Comb,_expression.ExpressionEntity.CopySign,_expression.ExpressionEntity.Cos,_expression.ExpressionEntity.Cosh,_expression.ExpressionEntity.Degrees,_expression.ExpressionEntity.Dist,_expression.ExpressionEntity.Erf,_expression.ExpressionEntity.Erfc,_expression.ExpressionEntity.Exp,_expression.ExpressionEntity.Expm1,_expression.ExpressionEntity.Fabs,_expression.ExpressionEntity.Factorial,_expression.ExpressionEntity.Floor,_expression.ExpressionEntity.Fmod,_expression.ExpressionEntity.Frexp,_expression.ExpressionEntity.Fsum,_expression.ExpressionEntity.Gamma,_expression.ExpressionEntity.Gcd,_expression.ExpressionEntity.Hypot,_expression.ExpressionEntity.IsClose,_expression.ExpressionEntity.IsFinite,_expression.ExpressionEntity.IsInf,_expression.ExpressionEntity.IsNaN,_expression.ExpressionEntity.ISqrt,_expression.ExpressionEntity.Ldexp,_expression.ExpressionEntity.LGamma,_expression.ExpressionEntity.Log,_expression.ExpressionEntity.Log10,_expression.ExpressionEntity.Log1P,_expression.ExpressionEntity.Log2,_expression.ExpressionEntity.Perm,_expression.ExpressionEntity.Pow,_expression.ExpressionEntity.Prod,_expression.ExpressionEntity.Radians,_expression.ExpressionEntity.Remainder,_expression.ExpressionEntity.Sin,_expression.ExpressionEntity.Sinh,_expression.ExpressionEntity.Sqrt,_expression.ExpressionEntity.Tan,_expression.ExpressionEntity.Tanh,_expression.ExpressionEntity.Trunc])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}},{key:"isValidProperty",value:function(e){var s=_expression.moduleLookup.has(e.getEntity())&&_expression.moduleLookup.get(e.getEntity())===_expression.ExpressionEntity.MathModule&&(0,_expression.keywordLookup)(e.getValue()).category===_expression.ExpressionCategory.ModuleProperties;return s||this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is not a known member of the math module")),s}}]),t}(),StringModuleValue=function(e){_inherits(t,ModuleValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Formatter,_expression.ExpressionEntity.Template,_expression.ExpressionEntity.Capwords])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}},{key:"isValidProperty",value:function(e){var s=_expression.moduleLookup.has(e.getEntity())&&_expression.moduleLookup.get(e.getEntity())===_expression.ExpressionEntity.StringModule&&(0,_expression.keywordLookup)(e.getValue()).category===_expression.ExpressionCategory.ModuleProperties;return s||this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is not a known member of the string module")),s}}]),t}(),ReModuleValue=function(e){_inherits(t,ModuleValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.Compile,_expression.ExpressionEntity.Search,_expression.ExpressionEntity.Match,_expression.ExpressionEntity.FullMatch,_expression.ExpressionEntity.FindAll,_expression.ExpressionEntity.FindIter,_expression.ExpressionEntity.Sub,_expression.ExpressionEntity.SubN,_expression.ExpressionEntity.Escape,_expression.ExpressionEntity.Purge,_expression.ExpressionEntity.Split])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}},{key:"isValidProperty",value:function(e){var s=_expression.moduleLookup.has(e.getEntity())&&_expression.moduleLookup.get(e.getEntity())===_expression.ExpressionEntity.ReModule&&(0,_expression.keywordLookup)(e.getValue()).category===_expression.ExpressionCategory.ModuleProperties;return s||this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is not a known member of the string module")),s}}]),t}(),SysModuleValue=function(e){_inherits(t,ModuleValue);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"isValidMethod",value:function(e){var s=e.isOneOfEntities([_expression.ExpressionEntity.AddAuditHook,_expression.ExpressionEntity.Audit,_expression.ExpressionEntity.CallTracing,_expression.ExpressionEntity.ClearTypeCache,_expression.ExpressionEntity.CurrentFrames,_expression.ExpressionEntity.CurrentExceptions,_expression.ExpressionEntity.BreakpointHook,_expression.ExpressionEntity.DebugMallocStats,_expression.ExpressionEntity.DisplayHook,_expression.ExpressionEntity.ExceptHook,_expression.ExpressionEntity.ExcInfo,_expression.ExpressionEntity.SysExit,_expression.ExpressionEntity.GetAllocatedBlocks,_expression.ExpressionEntity.GetAndroidApiLevel,_expression.ExpressionEntity.GetDefaultEncoding,_expression.ExpressionEntity.GetDLOpenFlags,_expression.ExpressionEntity.GetFileSystemEncoding,_expression.ExpressionEntity.GetFileSystemEncodeErrors,_expression.ExpressionEntity.GetRefCount,_expression.ExpressionEntity.GetRecursionLimit,_expression.ExpressionEntity.GetSizeOf,_expression.ExpressionEntity.GetSwitchInterval,_expression.ExpressionEntity.GetFrame,_expression.ExpressionEntity.GetProfile,_expression.ExpressionEntity.GetTrace,_expression.ExpressionEntity.GetWindowsVersion,_expression.ExpressionEntity.GetAsyncGenHooks,_expression.ExpressionEntity.GetCoroutineOriginTrackingDepth,_expression.ExpressionEntity.Intern,_expression.ExpressionEntity.IsFinalizing,_expression.ExpressionEntity.SetDLOpenFlags,_expression.ExpressionEntity.SetProfile,_expression.ExpressionEntity.SetRecursionLimit,_expression.ExpressionEntity.SetSwitchInterval,_expression.ExpressionEntity.SetTrace,_expression.ExpressionEntity.SetAsyncgenHooks,_expression.ExpressionEntity.EnableLegacyWindowsFSEncoding])||e.is(_expression.ExpressionCategory.MagicMethods);return s||this.setFeedback(this.expression.getLocalIndex(),"An unrecognised method (".concat(e.getValue(),") was called on a module (").concat(this.expression.getValue(),").")),s}},{key:"isValidProperty",value:function(e){var s=_expression.moduleLookup.has(e.getEntity())&&_expression.moduleLookup.get(e.getEntity())===_expression.ExpressionEntity.Sys&&(0,_expression.keywordLookup)(e.getValue()).category===_expression.ExpressionCategory.ModuleProperties;return s||this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is not a known member of the math module")),s}}]),t}(),NoneValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){return this.updateUsedBy(e),e.isOperator()?e.isOneOfEntities([_expression.ExpressionEntity.EqualOperator,_expression.ExpressionEntity.NotEqualOperator,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.NotOperator])?new OperatorNode(e,s,this):e.getCategory()===_expression.ExpressionCategory.MathsOperators?(this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow something with no value (").concat(this.expression.getValue(),"). ").concat(this.expression.getValue()," may not have been propertly assigned.")),new OperatorNode(e,_expression.DataType.Invalid,this)):e.getEntity()===_expression.ExpressionEntity.NotOperator?(this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator should only follow another logical operator (and, or).")),new OperatorNode(e,_expression.DataType.Invalid,this)):new OperatorNode(e,s,this):this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"isValidMethod",value:function(e){return e.isOneOfCategories([_expression.ExpressionCategory.BuiltInMethods,_expression.ExpressionCategory.OtherMethods])&&this.setFeedback(this.expression.getLocalIndex(),"".concat(this.expression.getValue()," has no value. There are no valid methods for None types.")),!1}},{key:"computeSubExpressionType",value:function(e,s){return _expression.DataType.Invalid}}]),t}(),UnknownValue=function(e){_inherits(t,ValueNode);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){if(this.updateUsedBy(e),e.isOperator())return e.isOneOfCategories([_expression.ExpressionCategory.MathsOperators,_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators])||e.isOneOfEntities([_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.InKeyword,_expression.ExpressionEntity.Dot])?new OperatorNode(e,s,this):(this.setFeedback(e.getLocalIndex(),"".concat(e.getValue()," cannot go here...")),new OperatorNode(e,_expression.DataType.Invalid,this));if(e.getCategory()===_expression.ExpressionCategory.BuiltInMethods){var t=_expression.builtInReturnLookup.hasOwnProperty(e.getEntity())?_expression.builtInReturnLookup.get(e.getEntity()):_expression.DataType.Unknown;if(t)return this.overwriteNode(e,t)}else{if(e.getEntity()===_expression.ExpressionEntity.IndexKey)return this;if(e.getEntity()===_expression.ExpressionEntity.Slice)return this}return this.valueNodeFactory(e,_expression.DataType.Invalid)}},{key:"computeSubExpressionType",value:function(e,s){if(_get(_getPrototypeOf(t.prototype),"computeSubExpressionType",this).call(this,e,s)!==_expression.DataType.Invalid){if(s===_expression.DataType.Int||s===_expression.DataType.Float||s===_expression.DataType.Number)return _expression.DataType.Unknown;if(s===_expression.DataType.String||s===_expression.DataType.List||s===_expression.DataType.Tuple){if(e===_expression.ExpressionEntity.AddOperator||e===_expression.ExpressionEntity.MultiplyOperator)return _expression.DataType.Unknown}else if(s===_expression.DataType.Set){if(e===_expression.ExpressionEntity.SubtractOperator)return _expression.DataType.Unknown}else if(s===_expression.DataType.Unknown)return _expression.DataType.Unknown}return _expression.DataType.Invalid}}]),t}(),OperatorNode=function(e){_inherits(t,Node);var s=_createSuper(t);function t(){return _classCallCheck(this,t),s.apply(this,arguments)}return _createClass(t,[{key:"addNextEntity",value:function(e,s){if(e.isOperator()||e.setUsedBy(this.expression),e.isOperator())return this.processOperator(e);if(this.expression.isOneOfEntities([_expression.ExpressionEntity.EqualOperator,_expression.ExpressionEntity.NotEqualOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.NotOperator])&&(void 0===this.prevNode||!this.prevNode.expression.isOneOfEntities([_expression.ExpressionEntity.AndOperator,_expression.ExpressionEntity.OrOperator])))return this.valueNodeFactory(e,_expression.DataType.Bool);if(this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.compoundType!==_expression.DataType.Dict&&this.expression.getDataType()!==_expression.DataType.Dict&&this.compoundType!==_expression.DataType.None&&this.expression.getDataType()!==_expression.DataType.None&&this.newTypeMatchesCompoundType(e.getDataType()))return this.valueNodeFactory(e,_expression.DataType.Bool);if(this.isNumeric(this.compoundType)&&this.isNumeric(e.getDataType())&&this.expression.isOneOfEntities([_expression.ExpressionEntity.AndOperator,_expression.ExpressionEntity.OrOperator]))return this.valueNodeFactory(e,_expression.DataType.Number);if(this.expression.isOneOfEntities([_expression.ExpressionEntity.AndOperator,_expression.ExpressionEntity.OrOperator])){var t=this.compoundType===e.getDataType()?this.compoundType:_expression.DataType.Unknown;return this.valueNodeFactory(e,t)}if(void 0!==this.prevNode&&this.compoundType!==_expression.DataType.Invalid&&this.expression.getEntity()===_expression.ExpressionEntity.NotOperator&&this.prevNode.getLastExpression().getEntity()===_expression.ExpressionEntity.AndOperator)return this.valueNodeFactory(e,_expression.DataType.Bool);if(void 0!==this.prevNode&&this.compoundType!==_expression.DataType.Invalid&&this.expression.getEntity()===_expression.ExpressionEntity.NotOperator&&this.prevNode.getLastExpression().getEntity()===_expression.ExpressionEntity.OrOperator)return this.compoundType===_expression.DataType.Bool&&e.getDataType()===_expression.DataType.Bool?this.valueNodeFactory(e,_expression.DataType.Bool):this.valueNodeFactory(e,_expression.DataType.Unknown);if(this.compoundType!==_expression.DataType.Invalid&&this.prevNode&&this.prevNode.getLastExpression().getDataType()===_expression.DataType.String&&this.expression.getEntity()===_expression.ExpressionEntity.ModulusOperator)return this.valueNodeFactory(e,_expression.DataType.String);if(this.compoundType!==_expression.DataType.Invalid&&this.prevNode&&this.prevNode.getLastExpression().getDataType()===_expression.DataType.Unknown&&this.expression.getEntity()===_expression.ExpressionEntity.ModulusOperator)return this.valueNodeFactory(e,_expression.DataType.Unknown);if(this.compoundType===_expression.DataType.Invalid&&!this.expression.isOneOfEntities([_expression.ExpressionEntity.SubtractOperator,_expression.ExpressionEntity.Dot,_expression.ExpressionEntity.ExponentOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.DivideOperator,_expression.ExpressionEntity.IntDivideOperator,_expression.ExpressionEntity.ModulusOperator]))return this.valueNodeFactory(e,_expression.DataType.Invalid);if(void 0===this.prevNode&&this.expression.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.SubtractOperator])&&(this.isNumericOrBool(e.getDataType())||e.getDataType()===_expression.DataType.Unknown)){var i=e.getDataType()===_expression.DataType.Int||e.getDataType()===_expression.DataType.Bool?_expression.DataType.Int:e.getDataType();return this.valueNodeFactory(e,i)}return this.processValue(e)}},{key:"processOperator",value:function(e){return e.getEntity()===_expression.ExpressionEntity.NotOperator&&this.expression.isOneOfEntities([_expression.ExpressionEntity.AndOperator,_expression.ExpressionEntity.IsKeyword,_expression.ExpressionEntity.OrOperator])||e.getEntity()===_expression.ExpressionEntity.InKeyword&&this.expression.getEntity()===_expression.ExpressionEntity.NotOperator?new t(e,this.compoundType,this):(this.setFeedback(e.getLocalIndex(),"The ".concat(e.getValue()," operator cannot follow the ").concat(this.expression.getValue()," operator.")),new t(e,_expression.DataType.Invalid,this))}},{key:"processValue",value:function(e){if(this.expression.getEntity()===_expression.ExpressionEntity.Dot&&this.prevNode&&e.getEntity()!==_expression.ExpressionEntity.PropertyName&&e.getCategory()!==_expression.ExpressionCategory.ModuleProperties){if(this.prevNode.isValidMethod(e)){var s=new _expression.Expression(e.getEntity(),e.getCategory(),e.getLineNumber(),e.getLocalIndex(),this.prevNode.getValue()+"."+e.getValue(),e.getDataType());return s.setUsedBy(this.expression),this.prevNode.overwriteNode(s,s.getDataType())}return this.valueNodeFactory(e,_expression.DataType.Invalid)}if(this.expression.getEntity()===_expression.ExpressionEntity.Dot&&this.prevNode&&(e.getEntity()===_expression.ExpressionEntity.PropertyName||e.getCategory()===_expression.ExpressionCategory.ModuleProperties)){if(this.prevNode.isValidProperty(e)){var t=_expression.builtInReturnLookup.has(e.getEntity())?_expression.builtInReturnLookup.get(e.getEntity()):_expression.DataType.Unknown,i=new _expression.Expression(e.getEntity(),e.getCategory(),e.getLineNumber(),e.getLocalIndex(),this.prevNode.getValue()+"."+e.getValue(),t);return this.prevNode.overwriteNode(i,i.getDataType())}return this.valueNodeFactory(e,_expression.DataType.Invalid)}if(this.expression.getEntity()===_expression.ExpressionEntity.ModulusOperator&&this.compoundType===_expression.DataType.String)return this.valueNodeFactory(e,_expression.DataType.String);if(this.expression.isOneOfEntities([_expression.ExpressionEntity.SubtractOperator,_expression.ExpressionEntity.AddOperator])&&(this.compoundType===_expression.DataType.Invalid||void 0===this.compoundType)&&(this.isNumeric(e.getDataType())||e.getDataType()===_expression.DataType.Unknown)&&e.getLocalIndex()-this.expression.getLocalIndex()==1)return this.prevNode?this.compoundType=this.prevNode.getLastExpression().getCategory()===_expression.ExpressionCategory.ComparisonOperators?_expression.DataType.Bool:this.prevNode.getCompoundType():this.compoundType=this.expression.getDataType(),this.valueNodeFactory(e,this.compoundType);if(this.expression.isOneOfEntities([_expression.ExpressionEntity.ExponentOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.DivideOperator,_expression.ExpressionEntity.IntDivideOperator,_expression.ExpressionEntity.ModulusOperator])&&void 0!==this.prevNode&&!this.prevNode.compoundTypeEqualsNodeType()){var n=this.prevNode.computeSubExpressionType(this.expression.getEntity(),e.getDataType());if(n!==_expression.DataType.Invalid&&this.compoundType===_expression.DataType.Invalid&&this.prevNode instanceof ValueNode){var o=new _expression.Expression(_expression.ExpressionEntity.Unknown,_expression.ExpressionCategory.Unknown,e.getLineNumber(),e.getLocalIndex(),this.prevNode.getValue()+this.expression.getValue()+e.getValue(),n);return this.prevNode.overwriteNode(o,n)}}switch(e.getDataType()){case _expression.DataType.Int:return this.processIntValue(e);case _expression.DataType.Float:return this.processFloatValue(e);case _expression.DataType.Number:return this.processNumberValue(e);case _expression.DataType.String:return this.processStringValue(e);case _expression.DataType.Bool:return this.processBoolValue(e);case _expression.DataType.List:return this.processListValue(e);case _expression.DataType.Tuple:return this.processTupleValue(e);case _expression.DataType.Set:return this.processSetValue(e);case _expression.DataType.File:return this.processFileValue(e);case _expression.DataType.Dict:return this.processDictValue(e);case _expression.DataType.None:return this.processNoneValue(e);default:return this.processUnknownValue(e)}}},{key:"isNumeric",value:function(e){return e===_expression.DataType.Int||e===_expression.DataType.Float||e===_expression.DataType.Number}},{key:"isNumericOrBool",value:function(e){return this.isNumeric(e)||e===_expression.DataType.Bool}},{key:"newTypeMatchesCompoundType",value:function(e){return this.compoundType===e&&this.compoundType!==_expression.DataType.Unknown&&e!==_expression.DataType.Unknown||this.isNumericOrBool(this.compoundType)&&this.isNumericOrBool(e)}},{key:"isValidIntMultiplier",value:function(e){return e===_expression.DataType.Int||e===_expression.DataType.Number||e===_expression.DataType.Bool}},{key:"processIntValue",value:function(e){if(e.getCategory()===_expression.ExpressionCategory.BuiltInMethods)return new IntValue(e,_expression.DataType.Int,this);if((this.compoundType===_expression.DataType.Int||this.compoundType===_expression.DataType.Bool)&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return this.expression.getEntity()===_expression.ExpressionEntity.DivideOperator?new IntValue(e,_expression.DataType.Float,this):new IntValue(e,_expression.DataType.Int,this);if(this.compoundType===_expression.DataType.Float&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return new IntValue(e,_expression.DataType.Float,this);if(this.isNumeric(this.compoundType)&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return new IntValue(e,_expression.DataType.Number,this);if((this.compoundType===_expression.DataType.String||this.compoundType===_expression.DataType.List||this.compoundType===_expression.DataType.Tuple)&&this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator)return new IntValue(e,this.compoundType,this);if(this.compoundType===_expression.DataType.Unknown)return new IntValue(e,_expression.DataType.Unknown,this);if(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid){var s="follow a ".concat(this.expression.getValue()," and a");this.expression.getEntity()===_expression.ExpressionEntity.AddOperator?s="be added to a":this.expression.getEntity()===_expression.ExpressionEntity.SubtractOperator?s="be subtracted from a":this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator?s="multiply a":this.expression.getEntity()===_expression.ExpressionEntity.DivideOperator?s="divide a":this.expression.getEntity()===_expression.ExpressionEntity.IntDivideOperator?s="integer divide a":this.expression.getEntity()===_expression.ExpressionEntity.ExponentOperator?s="create an exponent from a":this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&(s="be compared with a"),this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is an int. A numeric value cannot ").concat(s," ").concat(this.compoundType.name,"."))}return new IntValue(e,_expression.DataType.Invalid,this)}},{key:"processFloatValue",value:function(e){if((e.getCategory()===_expression.ExpressionCategory.BuiltInMethods||this.isNumeric(this.compoundType)||this.compoundType===_expression.DataType.Bool)&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return new FloatValue(e,_expression.DataType.Float,this);if(this.compoundType===_expression.DataType.Unknown)return new FloatValue(e,_expression.DataType.Unknown,this);if(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid){var s="follow a ".concat(this.expression.getValue()," and a");this.expression.getEntity()===_expression.ExpressionEntity.AddOperator?s="be added to a":this.expression.getEntity()===_expression.ExpressionEntity.SubtractOperator?s="be subtracted from a":this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator?s="multiply a":this.expression.getEntity()===_expression.ExpressionEntity.DivideOperator?s="divide a":this.expression.getEntity()===_expression.ExpressionEntity.IntDivideOperator?s="integer divide a":this.expression.getEntity()===_expression.ExpressionEntity.ExponentOperator?s="create an exponent from a":this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&(s="be compared with a"),this.setFeedback(e.getLocalIndex(),"".concat(e.getValue()," is numeric. A numeric value cannot ").concat(s," ").concat(this.compoundType.name,"."))}return new IntValue(e,_expression.DataType.Invalid,this)}},{key:"processNumberValue",value:function(e){if(this.compoundType===_expression.DataType.Float&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return new NumberValue(e,_expression.DataType.Float,this);if(e.getCategory()===_expression.ExpressionCategory.BuiltInMethods||(this.isNumeric(this.compoundType)||this.compoundType===_expression.DataType.Bool)&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators)return e.getEntity()===_expression.ExpressionEntity.DivideOperator?new NumberValue(e,_expression.DataType.Float,this):new NumberValue(e,_expression.DataType.Number,this);if(e.getDataType()!==_expression.DataType.Float&&(this.compoundType===_expression.DataType.String||this.compoundType===_expression.DataType.List||this.compoundType===_expression.DataType.Tuple)&&this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator)return new NumberValue(e,this.compoundType,this);if(this.compoundType===_expression.DataType.Unknown)return new NumberValue(e,_expression.DataType.Unknown,this);if(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid){var s="follow a ".concat(this.expression.getValue()," and a");this.expression.getEntity()===_expression.ExpressionEntity.AddOperator?s="be added to a":this.expression.getEntity()===_expression.ExpressionEntity.SubtractOperator?s="be subtracted from a":this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator?s="multiply a":this.expression.getEntity()===_expression.ExpressionEntity.DivideOperator?s="divide a":this.expression.getEntity()===_expression.ExpressionEntity.IntDivideOperator?s="integer divide a":this.expression.getEntity()===_expression.ExpressionEntity.ExponentOperator?s="create an exponent from a":this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&(s="be compared with a"),this.setFeedback(e.getLocalIndex(),"".concat(e.getValue()," is numeric. A numeric value cannot ").concat(s," ").concat(this.compoundType,"."))}return new NumberValue(e,_expression.DataType.Invalid,this)}},{key:"processStringValue",value:function(e){return e.getCategory()===_expression.ExpressionCategory.BuiltInMethods||this.compoundType===_expression.DataType.String&&(this.expression.getEntity()===_expression.ExpressionEntity.AddOperator||this.expression.getEntity()===_expression.ExpressionEntity.IncrementOperator)||this.isValidIntMultiplier(this.compoundType)&&this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator||this.expression.getEntity()===_expression.ExpressionEntity.MultiplyAssignOperator?new StringValue(e,_expression.DataType.String,this):this.prevNode&&(this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.String&&this.prevNode.expression.getDataType()===_expression.DataType.String&&this.expression.is(_expression.ExpressionEntity.AddOperator)||this.isValidIntMultiplier(this.prevNode.expression.getDataType())&&this.expression.is(_expression.ExpressionEntity.MultiplyOperator))?this.prevNode.overwriteNode(e,_expression.DataType.String):this.compoundType!==_expression.DataType.String&&this.compoundType!==_expression.DataType.Unknown||this.expression.getEntity()!==_expression.ExpressionEntity.InKeyword?this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new StringValue(e,_expression.DataType.Unknown):(this.compoundType!==_expression.DataType.Invalid&&(this.expression.getEntity()===_expression.ExpressionEntity.AddOperator&&this.compoundType!==_expression.DataType.String?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a string. The + operator can be used to concatenate two strings but the expression before the + operator is not a string.")):this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator&&this.compoundType!==_expression.DataType.Int&&this.compoundType!==_expression.DataType.Number?this.setFeedback(this.expression.getLocalIndex(),"The * operator can be used with a string and an int to repeat the string a given number of times. ".concat(e.getValue()," is a string but the code before * is not an int.")):this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a string. The ").concat(this.expression.getValue()," operator cannot be used with strings.")):this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a string but the expression before the ").concat(e.getValue()," is a ").concat(this.compoundType,". A string can only be compared with a string."))),new StringValue(e,_expression.DataType.Invalid,this)):new StringValue(e,_expression.DataType.Bool,this)}},{key:"processBoolValue",value:function(e){if(e.getCategory()===_expression.ExpressionCategory.BuiltInMethods)return new BoolValue(e,_expression.DataType.Bool,this);if((this.isNumeric(this.compoundType)||this.compoundType===_expression.DataType.Bool)&&this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators){var s=this.compoundType===_expression.DataType.Int||this.compoundType===_expression.DataType.Bool?_expression.DataType.Int:this.compoundType===_expression.DataType.Float?_expression.DataType.Float:_expression.DataType.Number;return new BoolValue(e,s,this)}return this.compoundType!==_expression.DataType.String&&this.compoundType!==_expression.DataType.List&&this.compoundType!==_expression.DataType.Tuple||this.expression.getEntity()!==_expression.ExpressionEntity.MultiplyOperator?this.expression.isOneOfEntities([_expression.ExpressionEntity.AndOperator,_expression.ExpressionEntity.OrOperator])&&this.compoundType===_expression.DataType.Bool?new BoolValue(e,_expression.DataType.Bool,this):this.compoundType===_expression.DataType.Unknown?new BoolValue(e,_expression.DataType.Unknown,this):(this.compoundType!==_expression.DataType.Invalid&&this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(this.expression.getValue()," is a boolean but the expression before the ").concat(e.getValue()," is a ").concat(this.compoundType,". A boolean can only be compared with a boolean or a numeric value.")),new BoolValue(e,_expression.DataType.Invalid,this)):new BoolValue(e,this.compoundType,this)}},{key:"processListValue",value:function(e){return e.getCategory()===_expression.ExpressionCategory.BuiltInMethods?new ListValue(e,e.getDataType(),this):this.compoundType===_expression.DataType.List&&this.expression.getEntity()===_expression.ExpressionEntity.AddOperator||this.isValidIntMultiplier(this.compoundType)&&this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator?new ListValue(e,_expression.DataType.List,this):this.prevNode&&this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.List&&this.prevNode.expression.getDataType()===_expression.DataType.List&&this.expression.is(_expression.ExpressionEntity.AddOperator)||this.isValidIntMultiplier(this.prevNode.expression.getDataType())&&this.expression.is(_expression.ExpressionEntity.MultiplyOperator)?this.prevNode.overwriteNode(e,_expression.DataType.List):this.compoundType!==_expression.DataType.Invalid&&this.expression.getEntity()===_expression.ExpressionEntity.InKeyword?new ListValue(e,_expression.DataType.Bool,this):this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new ListValue(e,_expression.DataType.Unknown):(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid&&(this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a ").concat(e.getDataType(),". The ").concat(this.expression.getValue()," operator cannot be used with ").concat(e.getDataType(),"s.")):this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(this.expression.getValue()," is a ").concat(this.expression.getDataType()," but the expression before the ").concat(e.getValue()," is a ").concat(this.compoundType,". A ").concat(this.expression.getDataType()," can only be compared with a ").concat(this.expression.getDataType(),"."))),new ListValue(e,_expression.DataType.Invalid,this))}},{key:"processTupleValue",value:function(e){return e.getCategory()===_expression.ExpressionCategory.BuiltInMethods?new TupleValue(e,value,this):this.compoundType===_expression.DataType.Tuple&&this.expression.getEntity()===_expression.ExpressionEntity.AddOperator||this.isValidIntMultiplier(this.compoundType)&&this.expression.getEntity()===_expression.ExpressionEntity.MultiplyOperator?new TupleValue(e,_expression.DataType.Tuple,this):this.prevNode&&this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.Tuple&&this.prevNode.expression.getDataType()===_expression.DataType.Tuple&&this.expression.is(_expression.ExpressionEntity.AddOperator)||this.isValidIntMultiplier(this.prevNode.expression.getDataType())&&this.expression.is(_expression.ExpressionEntity.MultiplyOperator)?this.prevNode.overwriteNode(e,_expression.DataType.Tuple):this.compoundType!==_expression.DataType.Invalid&&this.expression.getEntity()===_expression.ExpressionEntity.InKeyword?new TupleValue(e,_expression.DataType.Bool,this):this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.AddOperator,_expression.ExpressionEntity.MultiplyOperator,_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new TupleValue(e,_expression.DataType.Unknown):(this.compoundType!==_expression.DataType.Invalid&&(this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a tuple. The ").concat(this.expression.getValue()," operator cannot be used with tuples.")):this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a tuple but the expression before the ").concat(this.expression.getValue()," is a ").concat(this.compoundType,". A tuple can only be compared with a tuple."))),new TupleValue(e,_expression.DataType.Invalid,this))}},{key:"processSetValue",value:function(e){return e.getCategory()===_expression.ExpressionCategory.BuiltInMethods||this.compoundType===_expression.DataType.Set&&this.expression.getEntity()===_expression.ExpressionEntity.SubtractOperator?new SetValue(e,_expression.DataType.Set,this):this.prevNode&&this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.Set&&this.prevNode.expression.getDataType()===_expression.DataType.Set&&this.expression.is(_expression.ExpressionEntity.SubtractOperator)?this.prevNode.overwriteNode(e,_expression.DataType.Set):this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.List&&this.compoundType!==_expression.DataType.Tuple&&this.compoundType!==_expression.DataType.Set&&this.compoundType!==_expression.DataType.Dict&&this.expression.getEntity()===_expression.ExpressionEntity.InKeyword?new SetValue(e,_expression.DataType.Bool,this):this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.SubtractOperator,_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new SetValue(e,_expression.DataType.Unknown):(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid&&(this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a set. The ").concat(this.expression.getValue()," operator cannot be used with sets.")):this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a set but the expression before the ").concat(this.expression.getValue()," is a ").concat(this.compoundType,". A set can only be compared with a set."))),new SetValue(e,_expression.DataType.Invalid,this))}},{key:"processFileValue",value:function(e){return this.compoundType!==_expression.DataType.Invalid&&this.expression.getEntity()===_expression.ExpressionEntity.InKeyword?new FileValue(e,_expression.DataType.Bool,this):new FileValue(e,_expression.DataType.Invalid,this)}},{key:"processDictValue",value:function(e){return e.getCategory()===_expression.ExpressionCategory.BuiltInMethods||this.expression.getCategory()===_expression.ExpressionCategory.LogicalOperators?new DictValue(e,_expression.DataType.Dict,this):this.compoundType!==_expression.DataType.Invalid&&this.compoundType!==_expression.DataType.List&&this.compoundType!==_expression.DataType.Tuple&&this.compoundType!==_expression.DataType.Set&&this.compoundType!==_expression.DataType.Dict&&this.expression.getEntity()===_expression.ExpressionEntity.InKeyword?new DictValue(e,_expression.DataType.Bool,this):this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new DictValue(e,_expression.DataType.Unknown):(this.compoundType!==_expression.DataType.Unknown&&this.compoundType!==_expression.DataType.Invalid&&(this.expression.getCategory()===_expression.ExpressionCategory.MathsOperators?this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a dictionary. The ").concat(this.expression.getValue()," operator cannot be used with sets.")):this.expression.getCategory()===_expression.ExpressionCategory.ComparisonOperators&&this.setFeedback(this.expression.getLocalIndex(),"".concat(e.getValue()," is a dictionary but the expression before the ").concat(this.expression.getValue()," is a ").concat(this.compoundType,". A set can only be compared with a set."))),new DictValue(e,_expression.DataType.Invalid,this))}},{key:"processNoneValue",value:function(e){return this.expression.isOneOfEntities([_expression.ExpressionEntity.EqualOperator,_expression.ExpressionEntity.NotEqualOperator,_expression.ExpressionEntity.IsKeyword])?new NoneValue(e,_expression.DataType.Bool,this):e.getCategory()===_expression.ExpressionCategory.BuiltInMethods?new NoneValue(e,_expression.DataType.None,this):this.compoundType===_expression.DataType.Unknown&&(this.expression.isOneOfEntities([_expression.ExpressionEntity.ModulusOperator])||this.expression.isOneOfCategories([_expression.ExpressionCategory.ComparisonOperators,_expression.ExpressionCategory.LogicalOperators]))?new NoneValue(e,_expression.DataType.Unknown):new NoneValue(e,_expression.DataType.Invalid,this)}},{key:"processUnknownValue",value:function(e){return this.compoundType!==_expression.DataType.Invalid?new UnknownValue(e,_expression.DataType.Unknown,this):new UnknownValue(e,_expression.DataType.Invalid,this)}},{key:"isValidMethod",value:function(e){return!1}},{key:"computeSubExpressionType",value:function(e,s){return _expression.DataType.Invalid}}]),t}(),_localIndex=new WeakMap,_message=new WeakMap,CompoundExpressionFeedback=function(){function e(s,t){_classCallCheck(this,e),_classPrivateFieldInitSpec(this,_localIndex,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_message,{writable:!0,value:void 0}),_classPrivateFieldSet(this,_localIndex,s),_classPrivateFieldSet(this,_message,t)}return _createClass(e,[{key:"getLocalIndex",value:function(){return _classPrivateFieldGet(this,_localIndex)}},{key:"getMessage",value:function(){return _classPrivateFieldGet(this,_message)}}]),e}();exports.CompoundExpressionFeedback=CompoundExpressionFeedback;
